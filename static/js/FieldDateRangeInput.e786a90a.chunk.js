"use strict";(self.__LOADABLE_LOADED_CHUNKS__=self.__LOADABLE_LOADED_CHUNKS__||[]).push([[6794],{64331:(e,t,n)=>{n.r(t),n.d(t,{DateRangeInput:()=>y,default:()=>O});var a=n(72791),s=n(70158),l=n(55269),o=n(41418),r=n.n(o),i=n(72426),u=n.n(i),d=n(6639),c=(n(53176),n(81301)),h=n(80948);const p="DateRangeInput_inputRoot__Ms+ns",D="DateRangeInput_withMobileMargins__1epGR",m="DateRangeInput_arrowIcon__1mTBN",I=(e,t)=>{const n=t instanceof u();return n&&e?t.clone().add(1,"days").toDate():n?t.toDate():null},g=e=>a.createElement(c.JT,Object.assign({},e,{direction:"left",rootClassName:m})),f=e=>a.createElement(c.JT,Object.assign({},e,{direction:"right",rootClassName:m})),b={initialDates:null,value:null,startDateId:"startDate",endDateId:"endDate",startDatePlaceholderText:null,endDatePlaceholderText:null,disabled:!1,required:!1,readOnly:!1,screenReaderInputMessage:null,showClearDates:!1,showDefaultInputIcon:!1,customArrowIcon:a.createElement("span",null),customInputIcon:null,customCloseIcon:null,noBorder:!0,block:!1,renderMonthText:null,orientation:"horizontal",anchorDirection:"left",horizontalMargin:0,withPortal:!1,withFullScreenPortal:!1,appendToBody:!1,disableScroll:!1,daySize:38,isRTL:!1,initialVisibleMonth:null,firstDayOfWeek:0,numberOfMonths:1,keepOpenOnDateSelect:!1,reopenPickerOnClearDates:!1,renderCalendarInfo:null,hideKeyboardShortcutsPanel:!0,navPrev:a.createElement(g,null),navNext:a.createElement(f,null),onPrevMonthClick(){},onNextMonthClick(){},transitionDuration:200,renderCalendarDay:void 0,renderDayContents:e=>a.createElement("span",{className:"renderedDay"},e.format("D")),minimumNights:0,enableOutsideDays:!1,isDayBlocked:()=>()=>!1,isOutsideRange:e=>!1,isDayHighlighted:()=>{},displayFormat:"ddd, MMM D",monthFormat:"MMMM YYYY",weekDayFormat:"dd"};class _ extends a.Component{constructor(e){super(e),this.state={focusedInput:null,currentStartDate:null},this.blurTimeoutId=null,this.onDatesChange=this.onDatesChange.bind(this),this.onFocusChange=this.onFocusChange.bind(this)}componentDidUpdate(e){this.props.focusedInput&&this.props.focusedInput!==e.focusedInput&&this.setState({focusedInput:this.props.focusedInput})}componentWillUnmount(){window.clearTimeout(this.blurTimeoutId)}onDatesChange(e){const{isDaily:t,isBlockedBetween:n}=this.props,{startDate:a,endDate:s}=e,l=n&&a&&s&&this.state.currentStartDate&&a.isBefore(this.state.currentStartDate);let o=a instanceof u()?a.startOf("day").toDate():null,r=I(t,s);if(l){r=n(a,u()(this.state.currentStartDate).add(1,"days"))?null:I(t,s)}this.setState((()=>({currentStartDate:o}))),this.props.onChange({startDate:o,endDate:r})}onFocusChange(e){this.setState({focusedInput:e}),e?(window.clearTimeout(this.blurTimeoutId),this.props.onFocus(e)):(window.clearTimeout(this.blurTimeoutId),this.blurTimeoutId=window.setTimeout((()=>{this.props.onBlur()}),100))}render(){const{className:e,isDaily:t,initialDates:n,intl:l,name:o,startDatePlaceholderText:i,endDatePlaceholderText:d,onBlur:c,onChange:h,onFocus:m,screenReaderInputMessage:I,useMobileMargins:g,value:f,children:b,render:_,isBlockedBetween:y,isDayBlocked:M,isOutsideRange:F,...C}=this.props,w=n?u()(n.startDate):null,R=n?u()(n.endDate):null,N=f&&f.startDate instanceof Date?u()(f.startDate):w,O=((e,t)=>{const n=t instanceof Date;return n&&e?u()(t).subtract(1,"days"):n?u()(t):null})(t,f?f.endDate:null)||R,T=i||l.formatMessage({id:"FieldDateRangeInput.startDatePlaceholderText"}),B=d||l.formatMessage({id:"FieldDateRangeInput.endDatePlaceholderText"}),E=I||l.formatMessage({id:"FieldDateRangeInput.screenReaderInputMessage"}),P=r()(p,e,{[D]:g});return a.createElement("div",{className:P},a.createElement(s.DateRangePicker,Object.assign({},C,{isDayBlocked:M(this.state.focusedInput),isOutsideRange:F(this.state.focusedInput),focusedInput:this.state.focusedInput,onFocusChange:this.onFocusChange,startDate:N,endDate:O,minimumNights:t?0:1,onDatesChange:this.onDatesChange,startDatePlaceholderText:T,endDatePlaceholderText:B,screenReaderInputMessage:E})))}}_.defaultProps={className:null,useMobileMargins:!1,...b};const y=(0,h.XN)(_),M="FieldDateRangeInput_fieldRoot__ErWf7",F="FieldDateRangeInput_labels__F3WuV",C="FieldDateRangeInput_mobileMargins__+fD1s",w="FieldDateRangeInput_startDateLabel__4nRGS",R="FieldDateRangeInput_endDateLabel__nNsQl";class N extends a.Component{constructor(e){super(e),this.state={focusedInput:null},this.handleBlur=this.handleBlur.bind(this),this.handleFocus=this.handleFocus.bind(this)}componentDidUpdate(e){this.props.focusedInput&&this.props.focusedInput!==e.focusedInput&&this.setState({focusedInput:this.props.focusedInput})}handleBlur(e){this.setState({focusedInput:null}),this.props.input.onBlur(e),this.props.onFocusedInputChange&&this.props.onFocusedInputChange(null)}handleFocus(e){this.setState({focusedInput:e}),this.props.input.onFocus(e)}render(){const{className:e,rootClassName:t,isDaily:n,startDateId:s,startDateLabel:l,endDateId:o,endDateLabel:i,input:u,meta:d,useMobileMargins:h,focusedInput:p,onFocusedInputChange:D,...m}=this.props;if(l&&!s)throw new Error("startDateId required when a startDateLabel is given");if(i&&!o)throw new Error("endDateId required when a endDateLabel is given");const I=r()(w),g=r()(R),f=l&&i?a.createElement("div",{className:r()(F,{[C]:h})},a.createElement("label",{className:I,htmlFor:s},l),a.createElement("label",{className:g,htmlFor:o},i)):null,{onBlur:b,onFocus:_,type:N,checked:O,...T}=u,B={isDaily:n,minimumNights:n?0:1,onBlur:this.handleBlur,onFocus:this.handleFocus,useMobileMargins:h,readOnly:"undefined"!==typeof window&&window.innerWidth<768,...T,...m,focusedInput:this.state.focusedInput,startDateId:s,endDateId:o},E=r()(t||M,e),P=r()({[C]:h});return a.createElement("div",{className:E},f,a.createElement(y,B),a.createElement(c.p8,{className:P,fieldMeta:d}))}}N.defaultProps={className:null,rootClassName:null,useMobileMargins:!1,endDateId:null,endDateLabel:null,endDatePlaceholderText:null,startDateId:null,startDateLabel:null,startDatePlaceholderText:null,focusedInput:null,onFocusedInputChange:null};const O=e=>{const t=(0,d.mX)(),{isOutsideRange:n,firstDayOfWeek:o,...r}=e,i=t.localization.firstDayOfWeek;return a.createElement(l.gN,Object.assign({component:N,isOutsideRange:n||(e=>{const n=t.stripe.dayCountAvailableForBooking-1;return!(0,s.isInclusivelyAfterDay)(e,u()())||!(0,s.isInclusivelyBeforeDay)(e,u()().add(n,"days"))}),firstDayOfWeek:o||i},r))}}}]);
//# sourceMappingURL=FieldDateRangeInput.e786a90a.chunk.js.map