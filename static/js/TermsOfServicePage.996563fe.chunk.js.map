{"version":3,"file":"static/js/TermsOfServicePage.996563fe.chunk.js","mappings":"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","sources":["webpack://app/./src/containers/PageBuilder/Primitives/Heading/Heading.module.css?122e","containers/PageBuilder/Primitives/Heading/Heading.js","containers/TermsOfServicePage/FallbackPage.js","containers/TermsOfServicePage/TermsOfServicePage.js","util/string.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"h1\":\"Heading_h1__XWifP\",\"h2\":\"Heading_h2__rfrgQ\",\"h3\":\"Heading_h3__0sbSd\",\"h4\":\"Heading_h4__rX5+W\",\"h5\":\"Heading_h5__+111h\",\"h6\":\"Heading_h6__7ekBW\"};","import React from 'react';\r\nimport { node, string } from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport css from './Heading.module.css';\r\n\r\n// Make it possible to use styling of H1, while the actual element is `<h2>`\r\nconst Heading = props => {\r\n  const { className, rootClassName, as, tagRef, ...otherProps } = props;\r\n  const Tag = as || 'h2';\r\n  const classes = classNames(rootClassName, className);\r\n\r\n  return <Tag className={classes} ref={tagRef} {...otherProps} />;\r\n};\r\n\r\nconst defaultPropsHeading = {\r\n  rootClassName: null,\r\n  className: null,\r\n  as: null,\r\n};\r\n\r\nconst propTypesHeading = {\r\n  rootClassName: string,\r\n  className: string,\r\n  children: node.isRequired,\r\n  as: string,\r\n};\r\n\r\nexport const H1 = React.forwardRef((props, ref) => {\r\n  const { rootClassName: rootClass, as, ...otherProps } = props;\r\n  return (\r\n    <Heading rootClassName={rootClass || css.h1} as={as || 'h1'} tagRef={ref} {...otherProps} />\r\n  );\r\n});\r\nH1.displayName = 'H1';\r\nH1.defaultProps = defaultPropsHeading;\r\nH1.propTypes = propTypesHeading;\r\n\r\nexport const H2 = React.forwardRef((props, ref) => {\r\n  const { rootClassName: rootClass, as, ...otherProps } = props;\r\n  return (\r\n    <Heading rootClassName={rootClass || css.h2} as={as || 'h2'} tagRef={ref} {...otherProps} />\r\n  );\r\n});\r\nH2.displayName = 'H2';\r\nH2.defaultProps = defaultPropsHeading;\r\nH2.propTypes = propTypesHeading;\r\n\r\nexport const H3 = React.forwardRef((props, ref) => {\r\n  const { rootClassName: rootClass, as, ...otherProps } = props;\r\n  return (\r\n    <Heading rootClassName={rootClass || css.h3} as={as || 'h3'} tagRef={ref} {...otherProps} />\r\n  );\r\n});\r\nH3.displayName = 'H3';\r\nH3.defaultProps = defaultPropsHeading;\r\nH3.propTypes = propTypesHeading;\r\n\r\nexport const H4 = React.forwardRef((props, ref) => {\r\n  const { rootClassName: rootClass, as, ...otherProps } = props;\r\n  return (\r\n    <Heading rootClassName={rootClass || css.h4} as={as || 'h4'} tagRef={ref} {...otherProps} />\r\n  );\r\n});\r\nH4.displayName = 'H4';\r\nH4.defaultProps = defaultPropsHeading;\r\nH4.propTypes = propTypesHeading;\r\n\r\nexport const H5 = React.forwardRef((props, ref) => {\r\n  const { rootClassName: rootClass, as, ...otherProps } = props;\r\n  return (\r\n    <Heading rootClassName={rootClass || css.h5} as={as || 'h5'} tagRef={ref} {...otherProps} />\r\n  );\r\n});\r\nH5.displayName = 'H5';\r\nH5.defaultProps = defaultPropsHeading;\r\nH5.propTypes = propTypesHeading;\r\n\r\nexport const H6 = React.forwardRef((props, ref) => {\r\n  const { rootClassName: rootClass, as, ...otherProps } = props;\r\n  return (\r\n    <Heading rootClassName={rootClass || css.h6} as={as || 'h6'} tagRef={ref} {...otherProps} />\r\n  );\r\n});\r\nH6.displayName = 'H6';\r\nH6.defaultProps = defaultPropsHeading;\r\nH6.propTypes = propTypesHeading;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\n\r\nconst PageBuilder = loadable(() =>\r\n  import(/* webpackChunkName: \"PageBuilder\" */ '../PageBuilder/PageBuilder')\r\n);\r\n\r\n// NOTE: You could add the actual Terms of Service here as a fallback\r\n//       instead of showing this error message.\r\nconst fallbackTerms = `\r\n# An error occurred\r\nThe web app couldn\\'t reach the backend to fetch the Term of Service page.\r\n\r\n## Possible actions\r\nPlease refresh the page and, if that doesn't help, contact the marketplace administrators.\r\n`;\r\n\r\n// Create fallback content (array of sections) in page asset format:\r\nexport const fallbackSections = {\r\n  sections: [\r\n    {\r\n      sectionType: 'article',\r\n      sectionId: 'terms',\r\n      appearance: { fieldType: 'customAppearance', backgroundColor: '#ffffff' },\r\n      title: { fieldType: 'heading1', content: 'Terms of Service' },\r\n      blocks: [\r\n        {\r\n          blockType: 'defaultBlock',\r\n          blockId: 'hero-content',\r\n          text: {\r\n            fieldType: 'markdown',\r\n            content: fallbackTerms,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  meta: {\r\n    pageTitle: {\r\n      fieldType: 'metaTitle',\r\n      content: 'Terms of service page',\r\n    },\r\n    pageDescription: {\r\n      fieldType: 'metaDescription',\r\n      content: 'Terms of service fetch failed',\r\n    },\r\n  },\r\n};\r\n\r\n// This is the fallback page, in case there's no Terms of Service asset defined in Console.\r\nconst FallbackPage = props => {\r\n  return <PageBuilder pageAssetsData={fallbackSections} {...props} />;\r\n};\r\n\r\nexport default FallbackPage;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\n\r\nimport { bool, object } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { camelize } from '../../util/string';\r\nimport { propTypes } from '../../util/types';\r\n\r\nimport { H1 } from '../PageBuilder/Primitives/Heading';\r\n\r\nconst PageBuilder = loadable(() =>\r\n  import(/* webpackChunkName: \"PageBuilder\" */ '../PageBuilder/PageBuilder')\r\n);\r\nconst SectionBuilder = loadable(\r\n  () => import(/* webpackChunkName: \"SectionBuilder\" */ '../PageBuilder/PageBuilder'),\r\n  {\r\n    resolveComponent: components => components.SectionBuilder,\r\n  }\r\n);\r\n\r\nimport FallbackPage, { fallbackSections } from './FallbackPage';\r\nimport { ASSET_NAME } from './TermsOfServicePage.duck';\r\n\r\n// This \"content-only\" component can be used in modals etc.\r\nconst TermsOfServiceContent = props => {\r\n  const { inProgress, error, data } = props;\r\n\r\n  if (inProgress) {\r\n    return null;\r\n  }\r\n\r\n  // We don't want to add h1 heading twice to the HTML (SEO issue).\r\n  // Modal's header is mapped as h2\r\n  const hasContent = data => typeof data?.content === 'string';\r\n  const exposeContentAsChildren = data => {\r\n    return hasContent(data) ? { children: data.content } : {};\r\n  };\r\n  const CustomHeading1 = props => <H1 as=\"h2\" {...props} />;\r\n\r\n  const hasData = error === null && data;\r\n  const sectionsData = hasData ? data : fallbackSections;\r\n\r\n  return (\r\n    <SectionBuilder\r\n      {...sectionsData}\r\n      options={{\r\n        fieldComponents: {\r\n          heading1: { component: CustomHeading1, pickValidProps: exposeContentAsChildren },\r\n        },\r\n        isInsideContainer: true,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\n// Presentational component for TermsOfServicePage\r\nconst TermsOfServicePageComponent = props => {\r\n  const { pageAssetsData, inProgress, error } = props;\r\n\r\n  return (\r\n    <PageBuilder\r\n      pageAssetsData={pageAssetsData?.[camelize(ASSET_NAME)]?.data}\r\n      inProgress={inProgress}\r\n      error={error}\r\n      fallbackPage={<FallbackPage />}\r\n    />\r\n  );\r\n};\r\n\r\nTermsOfServicePageComponent.propTypes = {\r\n  pageAssetsData: object,\r\n  inProgress: bool,\r\n  error: propTypes.error,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { pageAssetsData, inProgress, error } = state.hostedAssets || {};\r\n  return { pageAssetsData, inProgress, error };\r\n};\r\n\r\n// Note: it is important that the withRouter HOC is **outside** the\r\n// connect HOC, otherwise React Router won't rerender any Route\r\n// components since connect implements a shouldComponentUpdate\r\n// lifecycle hook.\r\n//\r\n// See: https://github.com/ReactTraining/react-router/issues/4671\r\nconst TermsOfServicePage = compose(connect(mapStateToProps))(TermsOfServicePageComponent);\r\n\r\nconst TOS_ASSET_NAME = ASSET_NAME;\r\nexport { TOS_ASSET_NAME, TermsOfServicePageComponent, TermsOfServiceContent };\r\n\r\nexport default TermsOfServicePage;\r\n","// Convert kebab-case to camelCase: my-page-asset > myPageAsset\r\nexport const camelize = s => s.replace(/-(.)/g, l => l[1].toUpperCase());\r\n"],"names":["Heading","props","className","rootClassName","as","tagRef","otherProps","Tag","classes","classNames","React","Object","assign","ref","defaultPropsHeading","H1","rootClass","css","displayName","defaultProps","H2","H3","H4","H5","H6","PageBuilder","loadable","fallbackSections","sections","sectionType","sectionId","appearance","fieldType","backgroundColor","title","content","blocks","blockType","blockId","text","meta","pageTitle","pageDescription","pageAssetsData","SectionBuilder","resolveComponent","components","TermsOfServiceContent","inProgress","error","data","sectionsData","options","fieldComponents","heading1","component","pickValidProps","hasContent","children","isInsideContainer","TermsOfServicePageComponent","_pageAssetsData$camel","camelize","ASSET_NAME","fallbackPage","FallbackPage","TermsOfServicePage","compose","connect","state","hostedAssets","TOS_ASSET_NAME","s","replace","l","toUpperCase"],"sourceRoot":""}