{"version":3,"file":"static/js/2194.869d002d.chunk.js","mappings":"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","sources":["webpack://app/./src/containers/ManageListingsPage/ManageListingCard/ManageListingCard.module.css?1966","containers/ManageListingsPage/ManageListingCard/MenuIcon.js","webpack://app/./src/containers/ManageListingsPage/ManageListingCard/Overlay.module.css?44dc","containers/ManageListingsPage/ManageListingCard/Overlay.js","containers/ManageListingsPage/ManageListingCard/ManageListingCard.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"coverEverything\":\"ManageListingCard_coverEverything__RbpJL\",\"root\":\"ManageListingCard_root__BbTGw\",\"menuOverlayWrapper\":\"ManageListingCard_menuOverlayWrapper__sygGL ManageListingCard_coverEverything__RbpJL\",\"menuOverlay\":\"ManageListingCard_menuOverlay__wcCSj ManageListingCard_coverEverything__RbpJL\",\"menuOverlayOpen\":\"ManageListingCard_menuOverlayOpen__kLfAY\",\"clickWrapper\":\"ManageListingCard_clickWrapper__ykV9T\",\"rootForImage\":\"ManageListingCard_rootForImage__12pXn ManageListingCard_coverEverything__RbpJL\",\"menubarWrapper\":\"ManageListingCard_menubarWrapper__+Q5mX\",\"menubarGradient\":\"ManageListingCard_menubarGradient__iuu+T\",\"menubar\":\"ManageListingCard_menubar__+4D6n\",\"menuLabel\":\"ManageListingCard_menuLabel__G32IK\",\"iconWrapper\":\"ManageListingCard_iconWrapper__h-7sf\",\"listingMenuIsOpen\":\"ManageListingCard_listingMenuIsOpen__fIngM\",\"menuContent\":\"ManageListingCard_menuContent__GM1fx\",\"menuItem\":\"ManageListingCard_menuItem__vLSGu\",\"menuItemDisabled\":\"ManageListingCard_menuItemDisabled__DEeDi\",\"info\":\"ManageListingCard_info__Jw3XE\",\"price\":\"ManageListingCard_price__iytG8\",\"priceValue\":\"ManageListingCard_priceValue__D3jWk p\",\"perUnit\":\"ManageListingCard_perUnit__JQ1PN marketplaceTinyFontStyles\",\"noPrice\":\"ManageListingCard_noPrice__WJnNE ManageListingCard_perUnit__JQ1PN marketplaceTinyFontStyles\",\"mainInfo\":\"ManageListingCard_mainInfo__ZblZ1\",\"titleWrapper\":\"ManageListingCard_titleWrapper__8vuj5\",\"title\":\"ManageListingCard_title__1ftQD p\",\"titleDraft\":\"ManageListingCard_titleDraft__P4CZi\",\"draftNoImage\":\"ManageListingCard_draftNoImage__0xduN\",\"edit\":\"ManageListingCard_edit__ixrH9 buttonSecondary\",\"openListingButton\":\"ManageListingCard_openListingButton__pHRYc buttonPrimaryInline\",\"finishListingDraftLink\":\"ManageListingCard_finishListingDraftLink__IJiLI buttonPrimaryInline\",\"menu\":\"ManageListingCard_menu__MkQH+\",\"cardIsOpen\":\"ManageListingCard_cardIsOpen__heLGU\",\"manageLinks\":\"ManageListingCard_manageLinks__Hpgcw marketplaceTinyFontStyles\",\"manageLink\":\"ManageListingCard_manageLink__XehWS\",\"manageLinksSeparator\":\"ManageListingCard_manageLinksSeparator__Pg9nd\",\"closeListingText\":\"ManageListingCard_closeListingText__y+eDX h5\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport css from './ManageListingCard.module.css';\r\n\r\nconst MenuIcon = props => {\r\n  const { className, isActive } = props;\r\n  const classes = classNames(css.menuIcon, className);\r\n  const filter = isActive ? '' : 'url(#a)';\r\n  return (\r\n    <svg\r\n      className={classes}\r\n      width=\"26\"\r\n      height=\"12\"\r\n      viewBox=\"0 0 26 12\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <defs>\r\n        <filter x=\"-38.9%\" y=\"-125%\" width=\"177.8%\" height=\"450%\" filterUnits=\"objectBoundingBox\">\r\n          <feOffset dy=\"2\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\r\n          <feGaussianBlur stdDeviation=\"2\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\r\n          <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\" in=\"shadowBlurOuter1\" />\r\n        </filter>\r\n      </defs>\r\n      <g transform=\"translate(-342 -18)\" filter={filter}>\r\n        <path d=\"M348 24c-1.105 0-2-.895-2-2s.895-2 2-2 2 .895 2 2-.895 2-2 2zm7 0c-1.105 0-2-.895-2-2s.895-2 2-2 2 .895 2 2-.895 2-2 2zm7 0c-1.105 0-2-.895-2-2s.895-2 2-2 2 .895 2 2-.895 2-2 2z\" />\r\n      </g>\r\n      <g transform=\"translate(-342 -18)\">\r\n        <path d=\"M348 24c-1.105 0-2-.895-2-2s.895-2 2-2 2 .895 2 2-.895 2-2 2zm7 0c-1.105 0-2-.895-2-2s.895-2 2-2 2 .895 2 2-.895 2-2 2zm7 0c-1.105 0-2-.895-2-2s.895-2 2-2 2 .895 2 2-.895 2-2 2z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nMenuIcon.defaultProps = {\r\n  className: null,\r\n  isActive: false,\r\n};\r\n\r\nconst { bool, string } = PropTypes;\r\n\r\nMenuIcon.propTypes = {\r\n  className: string,\r\n  isActive: bool,\r\n};\r\n\r\nexport default MenuIcon;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"coverEverything\":\"Overlay_coverEverything__x99df\",\"root\":\"Overlay_root__GqUNg Overlay_coverEverything__x99df\",\"overlay\":\"Overlay_overlay__b+Hov Overlay_coverEverything__x99df\",\"overlayContent\":\"Overlay_overlayContent__0Ovs5 h4 Overlay_coverEverything__x99df\",\"message\":\"Overlay_message__dsWCw textXSmall\",\"errorMessage\":\"Overlay_errorMessage__787x+ Overlay_message__dsWCw textXSmall\"};","import React from 'react';\r\nimport { node, string } from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport css from './Overlay.module.css';\r\n\r\nconst Overlay = props => {\r\n  const { className, rootClassName, message, errorMessage, children } = props;\r\n\r\n  const classes = classNames(rootClassName || css.root, className);\r\n\r\n  return (\r\n    <div\r\n      className={classes}\r\n      onClick={event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }}\r\n    >\r\n      <div className={css.overlay} />\r\n      <div className={css.overlayContent}>\r\n        {errorMessage ? <div className={css.errorMessage}>{errorMessage}</div> : null}\r\n        {message ? <div className={css.message}>{message}</div> : null}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nOverlay.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n  message: null,\r\n  errorMessage: null,\r\n  children: null,\r\n};\r\n\r\nOverlay.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n  message: string,\r\n  errorMessage: string,\r\n  children: node,\r\n};\r\n\r\nexport default Overlay;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nimport { useConfiguration } from '../../../context/configurationContext';\r\nimport { useRouteConfiguration } from '../../../context/routeConfigurationContext';\r\nimport { FormattedMessage, intlShape, injectIntl } from '../../../util/reactIntl';\r\nimport { displayPrice } from '../../../util/configHelpers';\r\nimport {\r\n  LISTING_STATE_PENDING_APPROVAL,\r\n  LISTING_STATE_CLOSED,\r\n  LISTING_STATE_DRAFT,\r\n  propTypes,\r\n  STOCK_MULTIPLE_ITEMS,\r\n} from '../../../util/types';\r\nimport { formatMoney } from '../../../util/currency';\r\nimport { ensureOwnListing } from '../../../util/data';\r\nimport {\r\n  LISTING_PAGE_PENDING_APPROVAL_VARIANT,\r\n  LISTING_PAGE_DRAFT_VARIANT,\r\n  LISTING_PAGE_PARAM_TYPE_DRAFT,\r\n  LISTING_PAGE_PARAM_TYPE_EDIT,\r\n  createSlug,\r\n} from '../../../util/urlHelpers';\r\nimport { createResourceLocatorString, findRouteByRouteName } from '../../../util/routes';\r\nimport { isBookingProcessAlias, isPurchaseProcessAlias } from '../../../transactions/transaction';\r\n\r\nimport {\r\n  AspectRatioWrapper,\r\n  InlineTextButton,\r\n  Menu,\r\n  MenuLabel,\r\n  MenuContent,\r\n  MenuItem,\r\n  NamedLink,\r\n  IconSpinner,\r\n  PrimaryButtonInline,\r\n  ResponsiveImage,\r\n} from '../../../components';\r\n\r\nimport MenuIcon from './MenuIcon';\r\nimport Overlay from './Overlay';\r\nimport css from './ManageListingCard.module.css';\r\n\r\n// Menu content needs the same padding\r\nconst MENU_CONTENT_OFFSET = -12;\r\nconst MAX_LENGTH_FOR_WORDS_IN_TITLE = 7;\r\n\r\nconst priceData = (price, currency, intl) => {\r\n  if (price?.currency === currency) {\r\n    const formattedPrice = formatMoney(intl, price);\r\n    return { formattedPrice, priceTitle: formattedPrice };\r\n  } else if (price) {\r\n    return {\r\n      formattedPrice: intl.formatMessage(\r\n        { id: 'ManageListingCard.unsupportedPrice' },\r\n        { currency: price.currency }\r\n      ),\r\n      priceTitle: intl.formatMessage(\r\n        { id: 'ManageListingCard.unsupportedPriceTitle' },\r\n        { currency: price.currency }\r\n      ),\r\n    };\r\n  }\r\n  return {};\r\n};\r\n\r\nconst createListingURL = (routes, listing) => {\r\n  const id = listing.id.uuid;\r\n  const slug = createSlug(listing.attributes.title);\r\n  const isPendingApproval = listing.attributes.state === LISTING_STATE_PENDING_APPROVAL;\r\n  const isDraft = listing.attributes.state === LISTING_STATE_DRAFT;\r\n  const variant = isDraft\r\n    ? LISTING_PAGE_DRAFT_VARIANT\r\n    : isPendingApproval\r\n    ? LISTING_PAGE_PENDING_APPROVAL_VARIANT\r\n    : null;\r\n\r\n  const linkProps =\r\n    isPendingApproval || isDraft\r\n      ? {\r\n          name: 'ListingPageVariant',\r\n          params: {\r\n            id,\r\n            slug,\r\n            variant,\r\n          },\r\n        }\r\n      : {\r\n          name: 'ListingPage',\r\n          params: { id, slug },\r\n        };\r\n\r\n  return createResourceLocatorString(linkProps.name, routes, linkProps.params, {});\r\n};\r\n\r\n// Cards are not fixed sizes - So, long words in title make flexboxed items to grow too big.\r\n// 1. We split title to an array of words and spaces.\r\n//    \"foo bar\".split(/([^\\s]+)/gi) => [\"\", \"foo\", \" \", \"bar\", \"\"]\r\n// 2. Then we break long words by adding a '<span>' with word-break: 'break-all';\r\nconst formatTitle = (title, maxLength) => {\r\n  const nonWhiteSpaceSequence = /([^\\s]+)/gi;\r\n  return title.split(nonWhiteSpaceSequence).map((word, index) => {\r\n    return word.length > maxLength ? (\r\n      <span key={index} style={{ wordBreak: 'break-all' }}>\r\n        {word}\r\n      </span>\r\n    ) : (\r\n      word\r\n    );\r\n  });\r\n};\r\n\r\nconst ShowFinishDraftOverlayMaybe = props => {\r\n  const { isDraft, title, id, slug, hasImage, intl } = props;\r\n\r\n  return isDraft ? (\r\n    <React.Fragment>\r\n      <div className={classNames({ [css.draftNoImage]: !hasImage })} />\r\n      <Overlay\r\n        message={intl.formatMessage(\r\n          { id: 'ManageListingCard.draftOverlayText' },\r\n          { listingTitle: title }\r\n        )}\r\n      >\r\n        <NamedLink\r\n          className={css.finishListingDraftLink}\r\n          name=\"EditListingPage\"\r\n          params={{ id, slug, type: LISTING_PAGE_PARAM_TYPE_DRAFT, tab: 'photos' }}\r\n        >\r\n          <FormattedMessage id=\"ManageListingCard.finishListingDraft\" />\r\n        </NamedLink>\r\n      </Overlay>\r\n    </React.Fragment>\r\n  ) : null;\r\n};\r\n\r\nconst ShowClosedOverlayMaybe = props => {\r\n  const {\r\n    isClosed,\r\n    title,\r\n    actionsInProgressListingId,\r\n    currentListingId,\r\n    onOpenListing,\r\n    intl,\r\n  } = props;\r\n\r\n  return isClosed ? (\r\n    <Overlay\r\n      message={intl.formatMessage(\r\n        { id: 'ManageListingCard.closedListing' },\r\n        { listingTitle: title }\r\n      )}\r\n    >\r\n      <PrimaryButtonInline\r\n        className={css.openListingButton}\r\n        disabled={!!actionsInProgressListingId}\r\n        onClick={event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          if (!actionsInProgressListingId) {\r\n            onOpenListing(currentListingId);\r\n          }\r\n        }}\r\n      >\r\n        <FormattedMessage id=\"ManageListingCard.openListing\" />\r\n      </PrimaryButtonInline>\r\n    </Overlay>\r\n  ) : null;\r\n};\r\n\r\nconst ShowPendingApprovalOverlayMaybe = props => {\r\n  const { isPendingApproval, title, intl } = props;\r\n\r\n  return isPendingApproval ? (\r\n    <Overlay\r\n      message={intl.formatMessage(\r\n        { id: 'ManageListingCard.pendingApproval' },\r\n        { listingTitle: title }\r\n      )}\r\n    />\r\n  ) : null;\r\n};\r\n\r\nconst ShowOutOfStockOverlayMaybe = props => {\r\n  const {\r\n    showOutOfStockOverlay,\r\n    title,\r\n    id,\r\n    slug,\r\n    actionsInProgressListingId,\r\n    currentListingId,\r\n    hasStockManagementInUse,\r\n    onCloseListing,\r\n    intl,\r\n  } = props;\r\n\r\n  return showOutOfStockOverlay ? (\r\n    <Overlay\r\n      message={intl.formatMessage(\r\n        { id: 'ManageListingCard.outOfStockOverlayText' },\r\n        { listingTitle: title }\r\n      )}\r\n    >\r\n      {hasStockManagementInUse ? (\r\n        <>\r\n          <NamedLink\r\n            className={css.finishListingDraftLink}\r\n            name=\"EditListingPage\"\r\n            params={{ id, slug, type: LISTING_PAGE_PARAM_TYPE_EDIT, tab: 'pricing-and-stock' }}\r\n          >\r\n            <FormattedMessage id=\"ManageListingCard.setPriceAndStock\" />\r\n          </NamedLink>\r\n\r\n          <div className={css.closeListingText}>\r\n            {intl.formatMessage(\r\n              { id: 'ManageListingCard.closeListingTextOr' },\r\n              {\r\n                closeListingLink: (\r\n                  <InlineTextButton\r\n                    key=\"closeListingLink\"\r\n                    className={css.closeListingText}\r\n                    disabled={!!actionsInProgressListingId}\r\n                    onClick={() => {\r\n                      if (!actionsInProgressListingId) {\r\n                        onCloseListing(currentListingId);\r\n                      }\r\n                    }}\r\n                  >\r\n                    <FormattedMessage id=\"ManageListingCard.closeListingText\" />\r\n                  </InlineTextButton>\r\n                ),\r\n              }\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className={css.closeListingText}>\r\n          <InlineTextButton\r\n            key=\"closeListingLink\"\r\n            className={css.closeListingText}\r\n            disabled={!!actionsInProgressListingId}\r\n            onClick={() => {\r\n              if (!actionsInProgressListingId) {\r\n                onCloseListing(currentListingId);\r\n              }\r\n            }}\r\n          >\r\n            <FormattedMessage id=\"ManageListingCard.closeListingText\" />\r\n          </InlineTextButton>\r\n        </div>\r\n      )}\r\n    </Overlay>\r\n  ) : null;\r\n};\r\n\r\nconst LinkToStockOrAvailabilityTab = props => {\r\n  const {\r\n    id,\r\n    slug,\r\n    editListingLinkType,\r\n    isBookable,\r\n    hasListingType,\r\n    hasStockManagementInUse,\r\n    currentStock,\r\n    intl,\r\n  } = props;\r\n\r\n  if (!hasListingType || !(isBookable || hasStockManagementInUse)) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <span className={css.manageLinksSeparator}>{' • '}</span>\r\n\r\n      {isBookable ? (\r\n        <NamedLink\r\n          className={css.manageLink}\r\n          name=\"EditListingPage\"\r\n          params={{ id, slug, type: editListingLinkType, tab: 'availability' }}\r\n        >\r\n          <FormattedMessage id=\"ManageListingCard.manageAvailability\" />\r\n        </NamedLink>\r\n      ) : (\r\n        <NamedLink\r\n          className={css.manageLink}\r\n          name=\"EditListingPage\"\r\n          params={{ id, slug, type: editListingLinkType, tab: 'pricing-and-stock' }}\r\n        >\r\n          {currentStock == null\r\n            ? intl.formatMessage({ id: 'ManageListingCard.setPriceAndStock' })\r\n            : intl.formatMessage({ id: 'ManageListingCard.manageStock' }, { currentStock })}\r\n        </NamedLink>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst PriceMaybe = props => {\r\n  const { price, publicData, config, intl } = props;\r\n  const { listingType } = publicData || {};\r\n  const validListingTypes = config.listing.listingTypes;\r\n  const foundListingTypeConfig = validListingTypes.find(conf => conf.listingType === listingType);\r\n\r\n  const showPrice = displayPrice(foundListingTypeConfig);\r\n  if (showPrice && !price) {\r\n    return (\r\n      <div className={css.noPrice}>\r\n        <FormattedMessage id=\"ManageListingCard.priceNotSet\" />\r\n      </div>\r\n    );\r\n  } else if (!showPrice) {\r\n    return null;\r\n  }\r\n\r\n  const isBookable = isBookingProcessAlias(publicData?.transactionProcessAlias);\r\n  const { formattedPrice, priceTitle } = priceData(price, config.currency, intl);\r\n  return (\r\n    <div className={css.price}>\r\n      <div className={css.priceValue} title={priceTitle}>\r\n        {formattedPrice}\r\n      </div>\r\n      {isBookable ? (\r\n        <div className={css.perUnit}>\r\n          <FormattedMessage\r\n            id=\"ManageListingCard.perUnit\"\r\n            values={{ unitType: publicData?.unitType }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ManageListingCardComponent = props => {\r\n  const config = useConfiguration();\r\n  const routeConfiguration = useRouteConfiguration();\r\n  const {\r\n    className,\r\n    rootClassName,\r\n    hasClosingError,\r\n    hasOpeningError,\r\n    history,\r\n    intl,\r\n    isMenuOpen,\r\n    actionsInProgressListingId,\r\n    listing,\r\n    onCloseListing,\r\n    onOpenListing,\r\n    onToggleMenu,\r\n    renderSizes,\r\n  } = props;\r\n  const classes = classNames(rootClassName || css.root, className);\r\n  const currentListing = ensureOwnListing(listing);\r\n  const id = currentListing.id.uuid;\r\n  const { title = '', price, state, publicData } = currentListing.attributes;\r\n  const slug = createSlug(title);\r\n  const isPendingApproval = state === LISTING_STATE_PENDING_APPROVAL;\r\n  const isClosed = state === LISTING_STATE_CLOSED;\r\n  const isDraft = state === LISTING_STATE_DRAFT;\r\n\r\n  const { listingType, transactionProcessAlias } = publicData || {};\r\n  const isBookable = isBookingProcessAlias(transactionProcessAlias);\r\n  const isProductOrder = isPurchaseProcessAlias(transactionProcessAlias);\r\n  const hasListingType = !!listingType;\r\n  const validListingTypes = config.listing.listingTypes;\r\n  const foundListingTypeConfig = validListingTypes.find(conf => conf.listingType === listingType);\r\n\r\n  const currentStock = currentListing.currentStock?.attributes?.quantity;\r\n  const isOutOfStock = currentStock === 0;\r\n  const showOutOfStockOverlay =\r\n    !isBookable && isOutOfStock && !isPendingApproval && !isClosed && !isDraft;\r\n  const hasStockManagementInUse =\r\n    isProductOrder && foundListingTypeConfig?.stockType === STOCK_MULTIPLE_ITEMS;\r\n\r\n  const firstImage =\r\n    currentListing.images && currentListing.images.length > 0 ? currentListing.images[0] : null;\r\n\r\n  const menuItemClasses = classNames(css.menuItem, {\r\n    [css.menuItemDisabled]: !!actionsInProgressListingId,\r\n  });\r\n\r\n  const hasError = hasOpeningError || hasClosingError;\r\n  const thisListingInProgress =\r\n    actionsInProgressListingId && actionsInProgressListingId.uuid === id;\r\n\r\n  const onOverListingLink = () => {\r\n    // Enforce preloading of ListingPage (loadable component)\r\n    const { component: Page } = findRouteByRouteName('ListingPage', routeConfiguration);\r\n    // Loadable Component has a \"preload\" function.\r\n    if (Page.preload) {\r\n      Page.preload();\r\n    }\r\n  };\r\n\r\n  const titleClasses = classNames(css.title, {\r\n    [css.titlePending]: isPendingApproval,\r\n    [css.titleDraft]: isDraft,\r\n  });\r\n\r\n  const editListingLinkType = isDraft\r\n    ? LISTING_PAGE_PARAM_TYPE_DRAFT\r\n    : LISTING_PAGE_PARAM_TYPE_EDIT;\r\n\r\n  const {\r\n    aspectWidth = 1,\r\n    aspectHeight = 1,\r\n    variantPrefix = 'listing-card',\r\n  } = config.layout.listingImage;\r\n  const variants = firstImage\r\n    ? Object.keys(firstImage?.attributes?.variants).filter(k => k.startsWith(variantPrefix))\r\n    : [];\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <div\r\n        className={css.clickWrapper}\r\n        tabIndex={0}\r\n        onClick={event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n\r\n          // ManageListingCard contains links, buttons and elements that are working with routing.\r\n          // This card doesn't work if <a> or <button> is used to wrap events that are card 'clicks'.\r\n          //\r\n          // NOTE: It might be better to absolute-position those buttons over a card-links.\r\n          // (So, that they have no parent-child relationship - like '<a>bla<a>blaa</a></a>')\r\n          history.push(createListingURL(routeConfiguration, listing));\r\n        }}\r\n        onMouseOver={onOverListingLink}\r\n        onTouchStart={onOverListingLink}\r\n      >\r\n        <AspectRatioWrapper width={aspectWidth} height={aspectHeight}>\r\n          <ResponsiveImage\r\n            rootClassName={css.rootForImage}\r\n            alt={title}\r\n            image={firstImage}\r\n            variants={variants}\r\n            sizes={renderSizes}\r\n          />\r\n        </AspectRatioWrapper>\r\n\r\n        <div className={classNames(css.menuOverlayWrapper)}>\r\n          <div className={classNames(css.menuOverlay, { [css.menuOverlayOpen]: isMenuOpen })} />\r\n        </div>\r\n        <div className={css.menubarWrapper}>\r\n          <div className={css.menubarGradient} />\r\n          <div className={css.menubar}>\r\n            <Menu\r\n              className={classNames(css.menu, { [css.cardIsOpen]: !isClosed })}\r\n              contentPlacementOffset={MENU_CONTENT_OFFSET}\r\n              contentPosition=\"left\"\r\n              useArrow={false}\r\n              onToggleActive={isOpen => {\r\n                const listingOpen = isOpen ? currentListing : null;\r\n                onToggleMenu(listingOpen);\r\n              }}\r\n              isOpen={isMenuOpen}\r\n            >\r\n              <MenuLabel className={css.menuLabel} isOpenClassName={css.listingMenuIsOpen}>\r\n                <div className={css.iconWrapper}>\r\n                  <MenuIcon className={css.menuIcon} isActive={isMenuOpen} />\r\n                </div>\r\n              </MenuLabel>\r\n              <MenuContent rootClassName={css.menuContent}>\r\n                <MenuItem key=\"close-listing\">\r\n                  <InlineTextButton\r\n                    rootClassName={menuItemClasses}\r\n                    onClick={event => {\r\n                      event.preventDefault();\r\n                      event.stopPropagation();\r\n                      if (!actionsInProgressListingId) {\r\n                        onToggleMenu(null);\r\n                        onCloseListing(currentListing.id);\r\n                      }\r\n                    }}\r\n                  >\r\n                    <FormattedMessage id=\"ManageListingCard.closeListing\" />\r\n                  </InlineTextButton>\r\n                </MenuItem>\r\n              </MenuContent>\r\n            </Menu>\r\n          </div>\r\n        </div>\r\n\r\n        <ShowFinishDraftOverlayMaybe\r\n          isDraft={isDraft}\r\n          title={title}\r\n          id={id}\r\n          slug={slug}\r\n          hasImage={!!firstImage}\r\n          intl={intl}\r\n        />\r\n\r\n        <ShowClosedOverlayMaybe\r\n          isClosed={isClosed}\r\n          title={title}\r\n          actionsInProgressListingId={actionsInProgressListingId}\r\n          currentListingId={currentListing.id}\r\n          onOpenListing={onOpenListing}\r\n          intl={intl}\r\n        />\r\n\r\n        <ShowPendingApprovalOverlayMaybe\r\n          isPendingApproval={isPendingApproval}\r\n          title={title}\r\n          intl={intl}\r\n        />\r\n\r\n        <ShowOutOfStockOverlayMaybe\r\n          showOutOfStockOverlay={showOutOfStockOverlay}\r\n          title={title}\r\n          id={id}\r\n          slug={slug}\r\n          actionsInProgressListingId={actionsInProgressListingId}\r\n          currentListingId={currentListing.id}\r\n          onCloseListing={onCloseListing}\r\n          hasStockManagementInUse={hasStockManagementInUse}\r\n          intl={intl}\r\n        />\r\n\r\n        {thisListingInProgress ? (\r\n          <Overlay>\r\n            <IconSpinner />\r\n          </Overlay>\r\n        ) : hasError ? (\r\n          <Overlay errorMessage={intl.formatMessage({ id: 'ManageListingCard.actionFailed' })} />\r\n        ) : null}\r\n      </div>\r\n\r\n      <div className={css.info}>\r\n        <PriceMaybe price={price} publicData={publicData} config={config} intl={intl} />\r\n\r\n        <div className={css.mainInfo}>\r\n          <div className={css.titleWrapper}>\r\n            <InlineTextButton\r\n              rootClassName={titleClasses}\r\n              onClick={event => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                history.push(createListingURL(routeConfiguration, listing));\r\n              }}\r\n            >\r\n              {formatTitle(title, MAX_LENGTH_FOR_WORDS_IN_TITLE)}\r\n            </InlineTextButton>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={css.manageLinks}>\r\n          <NamedLink\r\n            className={css.manageLink}\r\n            name=\"EditListingPage\"\r\n            params={{ id, slug, type: editListingLinkType, tab: 'details' }}\r\n          >\r\n            <FormattedMessage id=\"ManageListingCard.editListing\" />\r\n          </NamedLink>\r\n\r\n          <LinkToStockOrAvailabilityTab\r\n            id={id}\r\n            slug={slug}\r\n            editListingLinkType={editListingLinkType}\r\n            isBookable={isBookable}\r\n            currentStock={currentStock}\r\n            hasListingType={hasListingType}\r\n            hasStockManagementInUse={hasStockManagementInUse}\r\n            intl={intl}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nManageListingCardComponent.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n  actionsInProgressListingId: null,\r\n  renderSizes: null,\r\n};\r\n\r\nconst { bool, func, shape, string } = PropTypes;\r\n\r\nManageListingCardComponent.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n  hasClosingError: bool.isRequired,\r\n  hasOpeningError: bool.isRequired,\r\n  intl: intlShape.isRequired,\r\n  listing: propTypes.ownListing.isRequired,\r\n  isMenuOpen: bool.isRequired,\r\n  actionsInProgressListingId: shape({ uuid: string.isRequired }),\r\n  onCloseListing: func.isRequired,\r\n  onOpenListing: func.isRequired,\r\n  onToggleMenu: func.isRequired,\r\n\r\n  // Responsive image sizes hint\r\n  renderSizes: string,\r\n\r\n  // from withRouter\r\n  history: shape({\r\n    push: func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default compose(\r\n  withRouter,\r\n  injectIntl\r\n)(ManageListingCardComponent);\r\n"],"names":["MenuIcon","props","className","isActive","classes","classNames","css","menuIcon","filter","React","width","height","viewBox","xmlns","x","y","filterUnits","dy","in","result","stdDeviation","values","transform","d","defaultProps","bool","string","PropTypes","Overlay","rootClassName","message","errorMessage","children","onClick","event","preventDefault","stopPropagation","createListingURL","routes","listing","id","uuid","slug","createSlug","attributes","title","isPendingApproval","state","LISTING_STATE_PENDING_APPROVAL","isDraft","LISTING_STATE_DRAFT","variant","LISTING_PAGE_DRAFT_VARIANT","LISTING_PAGE_PENDING_APPROVAL_VARIANT","linkProps","name","params","createResourceLocatorString","ShowFinishDraftOverlayMaybe","hasImage","intl","draftNoImage","formatMessage","listingTitle","NamedLink","finishListingDraftLink","type","LISTING_PAGE_PARAM_TYPE_DRAFT","tab","FormattedMessage","ShowClosedOverlayMaybe","isClosed","actionsInProgressListingId","currentListingId","onOpenListing","PrimaryButtonInline","openListingButton","disabled","ShowPendingApprovalOverlayMaybe","ShowOutOfStockOverlayMaybe","showOutOfStockOverlay","hasStockManagementInUse","onCloseListing","LISTING_PAGE_PARAM_TYPE_EDIT","closeListingText","closeListingLink","InlineTextButton","key","LinkToStockOrAvailabilityTab","editListingLinkType","isBookable","hasListingType","currentStock","manageLinksSeparator","manageLink","PriceMaybe","price","publicData","config","listingType","foundListingTypeConfig","listingTypes","find","conf","showPrice","displayPrice","noPrice","isBookingProcessAlias","transactionProcessAlias","formattedPrice","priceTitle","priceData","currency","formatMoney","priceValue","perUnit","unitType","ManageListingCardComponent","_currentListing$curre","_currentListing$curre2","_firstImage$attribute","useConfiguration","routeConfiguration","useRouteConfiguration","hasClosingError","hasOpeningError","history","isMenuOpen","onToggleMenu","renderSizes","root","currentListing","ensureOwnListing","LISTING_STATE_CLOSED","isProductOrder","isPurchaseProcessAlias","quantity","stockType","STOCK_MULTIPLE_ITEMS","firstImage","images","length","menuItemClasses","menuItem","menuItemDisabled","hasError","thisListingInProgress","onOverListingLink","component","Page","findRouteByRouteName","preload","titleClasses","titlePending","titleDraft","aspectWidth","aspectHeight","variantPrefix","layout","listingImage","variants","Object","keys","k","startsWith","clickWrapper","tabIndex","push","onMouseOver","onTouchStart","AspectRatioWrapper","ResponsiveImage","rootForImage","alt","image","sizes","menuOverlayWrapper","menuOverlay","menuOverlayOpen","menubarWrapper","menubarGradient","menubar","Menu","menu","cardIsOpen","contentPlacementOffset","contentPosition","useArrow","onToggleActive","isOpen","MenuLabel","menuLabel","isOpenClassName","listingMenuIsOpen","iconWrapper","MenuContent","menuContent","MenuItem","IconSpinner","info","mainInfo","titleWrapper","formatTitle","maxLength","split","map","word","index","style","wordBreak","manageLinks","func","shape","compose","withRouter","injectIntl"],"sourceRoot":""}