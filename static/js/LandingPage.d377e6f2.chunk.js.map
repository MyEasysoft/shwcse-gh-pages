{"version":3,"file":"static/js/LandingPage.d377e6f2.chunk.js","mappings":"4JACA,QAAuB,2BAAvB,EAA4D,8BCItDA,GAAcC,EAAAA,EAAAA,KAAS,IAC3B,oEAIWC,EAAmBC,IAAK,CACnCC,SAAU,CACR,CACEC,YAAa,oBACbC,UAAW,mBAEXH,UAGJI,KAAM,CACJC,UAAW,CACTC,UAAW,YACXC,QAAS,aAEXC,gBAAiB,CACfF,UAAW,kBACXC,QAAS,6BAOTE,EAAyBC,IAC7B,MAAM,UAAEP,EAAS,MAAEH,GAAUU,EAGvBC,EAA0B,OAAb,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOY,QAErB,OACEC,EAAAA,cAAA,WAASC,GAAIX,EAAWY,UAAWC,GAChCL,EACCE,EAAAA,cAAA,OAAKE,UAAWC,GACdH,EAAAA,cAAA,UAAI,+BACJA,EAAAA,cAAA,SAAG,0DAEDA,EAAAA,cAAA,WAAM,kGAMVA,EAAAA,cAAA,OAAKE,UAAWC,GACdH,EAAAA,cAAA,UAAI,+BACJA,EAAAA,cAAA,SAAS,OAALb,QAAK,IAALA,OAAK,EAALA,EAAOiB,UAGP,EAoBd,EAfqBP,IACnB,MAAM,MAAEV,KAAUkB,GAASR,EAC3B,OACEG,EAAAA,cAAChB,EAAWsB,OAAAC,OAAA,CACVC,eAAgBtB,EAAiBC,GACjCsB,QAAS,CACPC,kBAAmB,CACjBC,kBAAmB,CAAEC,UAAWhB,MAGhCS,GACJ,C,uKC5DN,MAAMrB,GAAcC,EAAAA,EAAAA,KAAS,IAC3B,oEAGW4B,EAAuBhB,IAAU,IAADiB,EAC3C,MAAM,eAAEN,EAAc,WAAEO,EAAU,MAAE5B,GAAUU,EAE9C,OACEG,EAAAA,cAAChB,EAAW,CACVwB,eAA8B,OAAdA,QAAc,IAAdA,GAAsC,QAAxBM,EAAdN,GAAiBQ,EAAAA,EAAAA,GAASC,EAAAA,WAAY,IAAAH,OAAxB,EAAdA,EAAwCI,KACxDH,WAAYA,EACZ5B,MAAOA,EACPgC,aAAcnB,EAAAA,cAACoB,EAAAA,EAAY,CAACjC,MAAOA,KACnC,EAuBN,GAFoBkC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAXJC,IACtB,MAAM,eAAEf,EAAc,WAAEO,EAAU,MAAE5B,GAAUoC,EAAMC,cAAgB,CAAC,EACrE,MAAO,CAAEhB,iBAAgBO,aAAY5B,QAAO,IAS1BkC,CAAkCR,E,mCC9C/C,MAAMG,EAAWS,GAAKA,EAAEC,QAAQ,SAASC,GAAKA,EAAE,GAAGC,e","sources":["webpack://app/./src/containers/LandingPage/FallbackPage.module.css?d96a","containers/LandingPage/FallbackPage.js","containers/LandingPage/LandingPage.js","util/string.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FallbackPage_root__-ESd2\",\"content\":\"FallbackPage_content__4LVB-\"};","import React from 'react';\r\nimport loadable from '@loadable/component';\r\n\r\nimport css from './FallbackPage.module.css';\r\n\r\nconst PageBuilder = loadable(() =>\r\n  import(/* webpackChunkName: \"PageBuilder\" */ '../PageBuilder/PageBuilder')\r\n);\r\n\r\n// Create fallback content (array of sections) in page asset format:\r\nexport const fallbackSections = error => ({\r\n  sections: [\r\n    {\r\n      sectionType: 'customMaintenance',\r\n      sectionId: 'maintenance-mode',\r\n      // pass possible error to SectionMaintenanceMode component\r\n      error,\r\n    },\r\n  ],\r\n  meta: {\r\n    pageTitle: {\r\n      fieldType: 'metaTitle',\r\n      content: 'Home page',\r\n    },\r\n    pageDescription: {\r\n      fieldType: 'metaDescription',\r\n      content: 'Home page fetch failed',\r\n    },\r\n  },\r\n});\r\n\r\n// Note: this microcopy/translation does not come from translation file.\r\n//       It needs to be something that is not part of fetched assets but built-in text\r\nconst SectionMaintenanceMode = props => {\r\n  const { sectionId, error } = props;\r\n  // 404 means that the landing-page asset was not found from the expected asset path\r\n  // which is defined in config.js\r\n  const is404 = error?.status === 404;\r\n\r\n  return (\r\n    <section id={sectionId} className={css.root}>\r\n      {is404 ? (\r\n        <div className={css.content}>\r\n          <h2>Oops, something went wrong!</h2>\r\n          <p>\r\n            The marketplace is not fully operational at the moment.\r\n            <br />\r\n            Try refreshing the page and if that does not solve the issue, contact the marketplace\r\n            admins.\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className={css.content}>\r\n          <h2>Oops, something went wrong!</h2>\r\n          <p>{error?.message}</p>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\n// This is the fallback page, in case there's no Landing Page asset defined in Console.\r\nconst FallbackPage = props => {\r\n  const { error, ...rest } = props;\r\n  return (\r\n    <PageBuilder\r\n      pageAssetsData={fallbackSections(error)}\r\n      options={{\r\n        sectionComponents: {\r\n          customMaintenance: { component: SectionMaintenanceMode },\r\n        },\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FallbackPage;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\n\r\nimport { bool, object } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { camelize } from '../../util/string';\r\nimport { propTypes } from '../../util/types';\r\n\r\nimport FallbackPage from './FallbackPage';\r\nimport { ASSET_NAME } from './LandingPage.duck';\r\n\r\nconst PageBuilder = loadable(() =>\r\n  import(/* webpackChunkName: \"PageBuilder\" */ '../PageBuilder/PageBuilder')\r\n);\r\n\r\nexport const LandingPageComponent = props => {\r\n  const { pageAssetsData, inProgress, error } = props;\r\n\r\n  return (\r\n    <PageBuilder\r\n      pageAssetsData={pageAssetsData?.[camelize(ASSET_NAME)]?.data}\r\n      inProgress={inProgress}\r\n      error={error}\r\n      fallbackPage={<FallbackPage error={error} />}\r\n    />\r\n  );\r\n};\r\n\r\nLandingPageComponent.propTypes = {\r\n  pageAssetsData: object,\r\n  inProgress: bool,\r\n  error: propTypes.error,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { pageAssetsData, inProgress, error } = state.hostedAssets || {};\r\n  return { pageAssetsData, inProgress, error };\r\n};\r\n\r\n// Note: it is important that the withRouter HOC is **outside** the\r\n// connect HOC, otherwise React Router won't rerender any Route\r\n// components since connect implements a shouldComponentUpdate\r\n// lifecycle hook.\r\n//\r\n// See: https://github.com/ReactTraining/react-router/issues/4671\r\nconst LandingPage = compose(connect(mapStateToProps))(LandingPageComponent);\r\n\r\nexport default LandingPage;\r\n","// Convert kebab-case to camelCase: my-page-asset > myPageAsset\r\nexport const camelize = s => s.replace(/-(.)/g, l => l[1].toUpperCase());\r\n"],"names":["PageBuilder","loadable","fallbackSections","error","sections","sectionType","sectionId","meta","pageTitle","fieldType","content","pageDescription","SectionMaintenanceMode","props","is404","status","React","id","className","css","message","rest","Object","assign","pageAssetsData","options","sectionComponents","customMaintenance","component","LandingPageComponent","_pageAssetsData$camel","inProgress","camelize","ASSET_NAME","data","fallbackPage","FallbackPage","compose","connect","state","hostedAssets","s","replace","l","toUpperCase"],"sourceRoot":""}