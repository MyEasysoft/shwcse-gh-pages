{"version":3,"file":"static/js/BookingTimeForm.d896ecac.chunk.js","mappings":"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","sources":["webpack://app/./src/components/OrderPanel/BookingTimeForm/BookingTimeForm.module.css?fbcc","components/OrderPanel/BookingTimeForm/BookingTimeForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BookingTimeForm_root__SDVbW\",\"bookingBreakdownTitle\":\"BookingTimeForm_bookingBreakdownTitle__vWXZN\",\"totalDivider\":\"BookingTimeForm_totalDivider__p0-Y1\",\"bookingDates\":\"BookingTimeForm_bookingDates__lHem-\",\"priceBreakdownContainer\":\"BookingTimeForm_priceBreakdownContainer__YVS-B\",\"receipt\":\"BookingTimeForm_receipt__ujmkk\",\"error\":\"BookingTimeForm_error__8ZXhv\",\"sideBarError\":\"BookingTimeForm_sideBarError__8tQ5E h4\",\"finePrint\":\"BookingTimeForm_finePrint__pjXsE marketplaceTinyFontStyles\",\"submitButton\":\"BookingTimeForm_submitButton__rb96j\"};","import React, { Component } from 'react';\r\nimport { array, bool, func, number, object, string } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { Form as FinalForm, FormSpy } from 'react-final-form';\r\nimport classNames from 'classnames';\r\n\r\nimport { FormattedMessage, intlShape, injectIntl } from '../../../util/reactIntl';\r\nimport { timestampToDate } from '../../../util/dates';\r\nimport { propTypes } from '../../../util/types';\r\nimport { BOOKING_PROCESS_NAME } from '../../../transactions/transaction';\r\n\r\nimport { Form, H6, PrimaryButton } from '../../../components';\r\n\r\nimport EstimatedCustomerBreakdownMaybe from '../EstimatedCustomerBreakdownMaybe';\r\nimport FieldDateAndTimeInput from './FieldDateAndTimeInput';\r\n\r\nimport css from './BookingTimeForm.module.css';\r\n\r\nexport class BookingTimeFormComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.handleOnChange = this.handleOnChange.bind(this);\r\n  }\r\n\r\n  handleFormSubmit(e) {\r\n    this.props.onSubmit(e);\r\n  }\r\n\r\n  // When the values of the form are updated we need to fetch\r\n  // lineItems from this template's backend for the EstimatedTransactionMaybe\r\n  // In case you add more fields to the form, make sure you add\r\n  // the values here to the orderData object.\r\n  handleOnChange(formValues) {\r\n    const { bookingStartTime, bookingEndTime } = formValues.values;\r\n    const startDate = bookingStartTime ? timestampToDate(bookingStartTime) : null;\r\n    const endDate = bookingEndTime ? timestampToDate(bookingEndTime) : null;\r\n\r\n    const listingId = this.props.listingId;\r\n    const isOwnListing = this.props.isOwnListing;\r\n\r\n    // Note: we expect values bookingStartTime and bookingEndTime to be strings\r\n    // which is the default case when the value has been selected through the form\r\n    const isStartBeforeEnd = bookingStartTime < bookingEndTime;\r\n\r\n    if (\r\n      bookingStartTime &&\r\n      bookingEndTime &&\r\n      isStartBeforeEnd &&\r\n      !this.props.fetchLineItemsInProgress\r\n    ) {\r\n      this.props.onFetchTransactionLineItems({\r\n        orderData: { bookingStart: startDate, bookingEnd: endDate },\r\n        listingId,\r\n        isOwnListing,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      rootClassName,\r\n      className,\r\n      price: unitPrice,\r\n      dayCountAvailableForBooking,\r\n      marketplaceName,\r\n      ...rest\r\n    } = this.props;\r\n    const classes = classNames(rootClassName || css.root, className);\r\n\r\n    return (\r\n      <FinalForm\r\n        {...rest}\r\n        unitPrice={unitPrice}\r\n        onSubmit={this.handleFormSubmit}\r\n        render={fieldRenderProps => {\r\n          const {\r\n            endDatePlaceholder,\r\n            startDatePlaceholder,\r\n            form,\r\n            pristine,\r\n            handleSubmit,\r\n            intl,\r\n            isOwnListing,\r\n            listingId,\r\n            values,\r\n            monthlyTimeSlots,\r\n            onFetchTimeSlots,\r\n            timeZone,\r\n            lineItems,\r\n            fetchLineItemsInProgress,\r\n            fetchLineItemsError,\r\n            payoutDetailsWarning,\r\n          } = fieldRenderProps;\r\n\r\n          const startTime = values && values.bookingStartTime ? values.bookingStartTime : null;\r\n          const endTime = values && values.bookingEndTime ? values.bookingEndTime : null;\r\n          const startDate = startTime ? timestampToDate(startTime) : null;\r\n          const endDate = endTime ? timestampToDate(endTime) : null;\r\n\r\n          // This is the place to collect breakdown estimation data. See the\r\n          // EstimatedCustomerBreakdownMaybe component to change the calculations\r\n          // for customized payment processes.\r\n          const breakdownData =\r\n            startDate && endDate\r\n              ? {\r\n                  startDate,\r\n                  endDate,\r\n                }\r\n              : null;\r\n\r\n          const showEstimatedBreakdown =\r\n            breakdownData && lineItems && !fetchLineItemsInProgress && !fetchLineItemsError;\r\n\r\n          return (\r\n            <Form onSubmit={handleSubmit} className={classes} enforcePagePreloadFor=\"CheckoutPage\">\r\n              <FormSpy\r\n                subscription={{ values: true }}\r\n                onChange={values => {\r\n                  this.handleOnChange(values);\r\n                }}\r\n              />\r\n              {monthlyTimeSlots && timeZone ? (\r\n                <FieldDateAndTimeInput\r\n                  startDateInputProps={{\r\n                    label: intl.formatMessage({ id: 'BookingTimeForm.bookingStartTitle' }),\r\n                    placeholderText: startDatePlaceholder,\r\n                  }}\r\n                  endDateInputProps={{\r\n                    label: intl.formatMessage({ id: 'BookingTimeForm.bookingEndTitle' }),\r\n                    placeholderText: endDatePlaceholder,\r\n                  }}\r\n                  className={css.bookingDates}\r\n                  listingId={listingId}\r\n                  onFetchTimeSlots={onFetchTimeSlots}\r\n                  monthlyTimeSlots={monthlyTimeSlots}\r\n                  values={values}\r\n                  intl={intl}\r\n                  form={form}\r\n                  pristine={pristine}\r\n                  timeZone={timeZone}\r\n                  dayCountAvailableForBooking={dayCountAvailableForBooking}\r\n                />\r\n              ) : null}\r\n\r\n              {showEstimatedBreakdown ? (\r\n                <div className={css.priceBreakdownContainer}>\r\n                  <H6 as=\"h3\" className={css.bookingBreakdownTitle}>\r\n                    <FormattedMessage id=\"BookingTimeForm.priceBreakdownTitle\" />\r\n                  </H6>\r\n                  <hr className={css.totalDivider} />\r\n                  <EstimatedCustomerBreakdownMaybe\r\n                    breakdownData={breakdownData}\r\n                    lineItems={lineItems}\r\n                    timeZone={timeZone}\r\n                    currency={unitPrice.currency}\r\n                    marketplaceName={marketplaceName}\r\n                    processName={BOOKING_PROCESS_NAME}\r\n                  />\r\n                </div>\r\n              ) : null}\r\n\r\n              {fetchLineItemsError ? (\r\n                <span className={css.sideBarError}>\r\n                  <FormattedMessage id=\"BookingTimeForm.fetchLineItemsError\" />\r\n                </span>\r\n              ) : null}\r\n\r\n              <div className={css.submitButton}>\r\n                <PrimaryButton type=\"submit\" inProgress={fetchLineItemsInProgress}>\r\n                  <FormattedMessage id=\"BookingTimeForm.requestToBook\" />\r\n                </PrimaryButton>\r\n              </div>\r\n\r\n              <p className={css.finePrint}>\r\n                {payoutDetailsWarning ? (\r\n                  payoutDetailsWarning\r\n                ) : (\r\n                  <FormattedMessage\r\n                    id={\r\n                      isOwnListing\r\n                        ? 'BookingTimeForm.ownListing'\r\n                        : 'BookingTimeForm.youWontBeChargedInfo'\r\n                    }\r\n                  />\r\n                )}\r\n              </p>\r\n            </Form>\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBookingTimeFormComponent.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n  price: null,\r\n  isOwnListing: false,\r\n  listingId: null,\r\n  startDatePlaceholder: null,\r\n  endDatePlaceholder: null,\r\n  monthlyTimeSlots: null,\r\n  lineItems: null,\r\n  fetchLineItemsError: null,\r\n};\r\n\r\nBookingTimeFormComponent.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n\r\n  marketplaceName: string.isRequired,\r\n  price: propTypes.money,\r\n  isOwnListing: bool,\r\n  listingId: propTypes.uuid,\r\n  monthlyTimeSlots: object,\r\n  onFetchTimeSlots: func.isRequired,\r\n  timeZone: string.isRequired,\r\n\r\n  onFetchTransactionLineItems: func.isRequired,\r\n  lineItems: array,\r\n  fetchLineItemsInProgress: bool.isRequired,\r\n  fetchLineItemsError: propTypes.error,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n\r\n  // for tests\r\n  startDatePlaceholder: string,\r\n  endDatePlaceholder: string,\r\n\r\n  dayCountAvailableForBooking: number.isRequired,\r\n};\r\n\r\nconst BookingTimeForm = compose(injectIntl)(BookingTimeFormComponent);\r\nBookingTimeForm.displayName = 'BookingTimeForm';\r\n\r\nexport default BookingTimeForm;\r\n"],"names":["BookingTimeFormComponent","Component","constructor","props","super","this","handleFormSubmit","bind","handleOnChange","e","onSubmit","formValues","bookingStartTime","bookingEndTime","values","startDate","timestampToDate","endDate","listingId","isOwnListing","fetchLineItemsInProgress","onFetchTransactionLineItems","orderData","bookingStart","bookingEnd","render","rootClassName","className","price","unitPrice","dayCountAvailableForBooking","marketplaceName","rest","classes","classNames","css","React","FinalForm","Object","assign","fieldRenderProps","endDatePlaceholder","startDatePlaceholder","form","pristine","handleSubmit","intl","monthlyTimeSlots","onFetchTimeSlots","timeZone","lineItems","fetchLineItemsError","payoutDetailsWarning","startTime","endTime","breakdownData","showEstimatedBreakdown","Form","enforcePagePreloadFor","FormSpy","subscription","onChange","FieldDateAndTimeInput","startDateInputProps","label","formatMessage","id","placeholderText","endDateInputProps","H6","as","FormattedMessage","EstimatedCustomerBreakdownMaybe","currency","processName","BOOKING_PROCESS_NAME","PrimaryButton","type","inProgress","defaultProps","BookingTimeForm","compose","injectIntl","displayName"],"sourceRoot":""}