{"version":3,"file":"static/js/ProfilePage.e4913f3a.chunk.js","mappings":"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","sources":["webpack://app/./src/containers/ProfilePage/ProfilePage.module.css?4777","containers/ProfilePage/ProfilePage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"ProfilePage_error__4PwcV\",\"aside\":\"ProfilePage_aside__897Dx\",\"asideContent\":\"ProfilePage_asideContent__rnX9m\",\"avatar\":\"ProfilePage_avatar__9J9Xd\",\"mobileHeading\":\"ProfilePage_mobileHeading__WSn4G\",\"editLinkMobile\":\"ProfilePage_editLinkMobile__0I-q2\",\"editLinkDesktop\":\"ProfilePage_editLinkDesktop__aVqG9\",\"desktopHeading\":\"ProfilePage_desktopHeading__3fdab\",\"bio\":\"ProfilePage_bio__+ca7Q\",\"listingsContainer\":\"ProfilePage_listingsContainer__Vd2Yy clearfix\",\"listingsTitle\":\"ProfilePage_listingsTitle__M9DQu\",\"withBioMissingAbove\":\"ProfilePage_withBioMissingAbove__U8cPt\",\"listings\":\"ProfilePage_listings__+jXjC\",\"listing\":\"ProfilePage_listing__vb2cp\",\"mobileReviewsTitle\":\"ProfilePage_mobileReviewsTitle__7PIKk\",\"mobileReviews\":\"ProfilePage_mobileReviews__+ZK5B\",\"desktopReviews\":\"ProfilePage_desktopReviews__S6M-u\",\"desktopReviewsWrapper\":\"ProfilePage_desktopReviewsWrapper__+TC6r\",\"desktopReviewsTitle\":\"ProfilePage_desktopReviewsTitle__cYCBT textLarge\",\"desktopReviewsTabNav\":\"ProfilePage_desktopReviewsTabNav__7oHwj\"};","import React, { useState } from 'react';\r\nimport { bool, arrayOf, number, shape } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { useConfiguration } from '../../context/configurationContext';\r\nimport { FormattedMessage, injectIntl, intlShape } from '../../util/reactIntl';\r\nimport { REVIEW_TYPE_OF_PROVIDER, REVIEW_TYPE_OF_CUSTOMER, propTypes } from '../../util/types';\r\nimport { ensureCurrentUser, ensureUser } from '../../util/data';\r\nimport { withViewport } from '../../util/uiHelpers';\r\nimport { isScrollingDisabled } from '../../ducks/ui.duck';\r\nimport { getMarketplaceEntities } from '../../ducks/marketplaceData.duck';\r\nimport {\r\n  Heading,\r\n  H2,\r\n  H4,\r\n  Page,\r\n  AvatarLarge,\r\n  NamedLink,\r\n  ListingCard,\r\n  Reviews,\r\n  ButtonTabNavHorizontal,\r\n  LayoutSideNavigation,\r\n} from '../../components';\r\n\r\nimport TopbarContainer from '../../containers/TopbarContainer/TopbarContainer';\r\nimport FooterContainer from '../../containers/FooterContainer/FooterContainer';\r\nimport NotFoundPage from '../../containers/NotFoundPage/NotFoundPage';\r\n\r\nimport css from './ProfilePage.module.css';\r\n\r\nconst MAX_MOBILE_SCREEN_WIDTH = 768;\r\n\r\nexport const AsideContent = props => {\r\n  const { user, displayName, isCurrentUser } = props;\r\n  return (\r\n    <div className={css.asideContent}>\r\n      <AvatarLarge className={css.avatar} user={user} disableProfileLink />\r\n      <H2 as=\"h1\" className={css.mobileHeading}>\r\n        {displayName ? (\r\n          <FormattedMessage id=\"ProfilePage.mobileHeading\" values={{ name: displayName }} />\r\n        ) : null}\r\n      </H2>\r\n      {isCurrentUser ? (\r\n        <>\r\n          <NamedLink className={css.editLinkMobile} name=\"ProfileSettingsPage\">\r\n            <FormattedMessage id=\"ProfilePage.editProfileLinkMobile\" />\r\n          </NamedLink>\r\n          <NamedLink className={css.editLinkDesktop} name=\"ProfileSettingsPage\">\r\n            <FormattedMessage id=\"ProfilePage.editProfileLinkDesktop\" />\r\n          </NamedLink>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ReviewsErrorMaybe = props => {\r\n  const { queryReviewsError } = props;\r\n  return queryReviewsError ? (\r\n    <p className={css.error}>\r\n      <FormattedMessage id=\"ProfilePage.loadingReviewsFailed\" />\r\n    </p>\r\n  ) : null;\r\n};\r\n\r\nexport const MobileReviews = props => {\r\n  const { reviews, queryReviewsError } = props;\r\n  const reviewsOfProvider = reviews.filter(r => r.attributes.type === REVIEW_TYPE_OF_PROVIDER);\r\n  const reviewsOfCustomer = reviews.filter(r => r.attributes.type === REVIEW_TYPE_OF_CUSTOMER);\r\n  return (\r\n    <div className={css.mobileReviews}>\r\n      <H4 as=\"h2\" className={css.mobileReviewsTitle}>\r\n        <FormattedMessage\r\n          id=\"ProfilePage.reviewsFromMyCustomersTitle\"\r\n          values={{ count: reviewsOfProvider.length }}\r\n        />\r\n      </H4>\r\n      <ReviewsErrorMaybe queryReviewsError={queryReviewsError} />\r\n      <Reviews reviews={reviewsOfProvider} />\r\n      <H4 as=\"h2\" className={css.mobileReviewsTitle}>\r\n        <FormattedMessage\r\n          id=\"ProfilePage.reviewsAsACustomerTitle\"\r\n          values={{ count: reviewsOfCustomer.length }}\r\n        />\r\n      </H4>\r\n      <ReviewsErrorMaybe queryReviewsError={queryReviewsError} />\r\n      <Reviews reviews={reviewsOfCustomer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DesktopReviews = props => {\r\n  const [showReviewsType, setShowReviewsType] = useState(REVIEW_TYPE_OF_PROVIDER);\r\n  const { reviews, queryReviewsError } = props;\r\n  const reviewsOfProvider = reviews.filter(r => r.attributes.type === REVIEW_TYPE_OF_PROVIDER);\r\n  const reviewsOfCustomer = reviews.filter(r => r.attributes.type === REVIEW_TYPE_OF_CUSTOMER);\r\n  const isReviewTypeProviderSelected = showReviewsType === REVIEW_TYPE_OF_PROVIDER;\r\n  const isReviewTypeCustomerSelected = showReviewsType === REVIEW_TYPE_OF_CUSTOMER;\r\n  const desktopReviewTabs = [\r\n    {\r\n      text: (\r\n        <Heading as=\"h3\" rootClassName={css.desktopReviewsTitle}>\r\n          <FormattedMessage\r\n            id=\"ProfilePage.reviewsFromMyCustomersTitle\"\r\n            values={{ count: reviewsOfProvider.length }}\r\n          />\r\n        </Heading>\r\n      ),\r\n      selected: isReviewTypeProviderSelected,\r\n      onClick: () => setShowReviewsType(REVIEW_TYPE_OF_PROVIDER),\r\n    },\r\n    {\r\n      text: (\r\n        <Heading as=\"h3\" rootClassName={css.desktopReviewsTitle}>\r\n          <FormattedMessage\r\n            id=\"ProfilePage.reviewsAsACustomerTitle\"\r\n            values={{ count: reviewsOfCustomer.length }}\r\n          />\r\n        </Heading>\r\n      ),\r\n      selected: isReviewTypeCustomerSelected,\r\n      onClick: () => setShowReviewsType(REVIEW_TYPE_OF_CUSTOMER),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={css.desktopReviews}>\r\n      <div className={css.desktopReviewsWrapper}>\r\n        <ButtonTabNavHorizontal className={css.desktopReviewsTabNav} tabs={desktopReviewTabs} />\r\n\r\n        <ReviewsErrorMaybe queryReviewsError={queryReviewsError} />\r\n\r\n        {isReviewTypeProviderSelected ? (\r\n          <Reviews reviews={reviewsOfProvider} />\r\n        ) : (\r\n          <Reviews reviews={reviewsOfCustomer} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const MainContent = props => {\r\n  const {\r\n    userShowError,\r\n    bio,\r\n    displayName,\r\n    listings,\r\n    queryListingsError,\r\n    reviews,\r\n    queryReviewsError,\r\n    viewport,\r\n  } = props;\r\n\r\n  const hasListings = listings.length > 0;\r\n  const isMobileLayout = viewport.width < MAX_MOBILE_SCREEN_WIDTH;\r\n  const hasBio = !!bio;\r\n\r\n  const listingsContainerClasses = classNames(css.listingsContainer, {\r\n    [css.withBioMissingAbove]: !hasBio,\r\n  });\r\n\r\n  if (userShowError || queryListingsError) {\r\n    return (\r\n      <p className={css.error}>\r\n        <FormattedMessage id=\"ProfilePage.loadingDataFailed\" />\r\n      </p>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <H2 as=\"h1\" className={css.desktopHeading}>\r\n        <FormattedMessage id=\"ProfilePage.desktopHeading\" values={{ name: displayName }} />\r\n      </H2>\r\n      {hasBio ? <p className={css.bio}>{bio}</p> : null}\r\n      {hasListings ? (\r\n        <div className={listingsContainerClasses}>\r\n          <H4 as=\"h2\" className={css.listingsTitle}>\r\n            <FormattedMessage id=\"ProfilePage.listingsTitle\" values={{ count: listings.length }} />\r\n          </H4>\r\n          <ul className={css.listings}>\r\n            {listings.map(l => (\r\n              <li className={css.listing} key={l.id.uuid}>\r\n                <ListingCard listing={l} showAuthorInfo={false} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : null}\r\n      {isMobileLayout ? (\r\n        <MobileReviews reviews={reviews} queryReviewsError={queryReviewsError} />\r\n      ) : (\r\n        <DesktopReviews reviews={reviews} queryReviewsError={queryReviewsError} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfilePageComponent = props => {\r\n  const config = useConfiguration();\r\n  const { scrollingDisabled, currentUser, userShowError, user, intl, ...rest } = props;\r\n  const ensuredCurrentUser = ensureCurrentUser(currentUser);\r\n  const profileUser = ensureUser(user);\r\n  const isCurrentUser =\r\n    ensuredCurrentUser.id && profileUser.id && ensuredCurrentUser.id.uuid === profileUser.id.uuid;\r\n  const { bio, displayName } = profileUser?.attributes?.profile || {};\r\n\r\n  const schemaTitleVars = { name: displayName, marketplaceName: config.marketplaceName };\r\n  const schemaTitle = intl.formatMessage({ id: 'ProfilePage.schemaTitle' }, schemaTitleVars);\r\n\r\n  if (userShowError && userShowError.status === 404) {\r\n    return <NotFoundPage />;\r\n  }\r\n  return (\r\n    <Page\r\n      scrollingDisabled={scrollingDisabled}\r\n      title={schemaTitle}\r\n      schema={{\r\n        '@context': 'http://schema.org',\r\n        '@type': 'ProfilePage',\r\n        name: schemaTitle,\r\n      }}\r\n    >\r\n      <LayoutSideNavigation\r\n        sideNavClassName={css.aside}\r\n        topbar={<TopbarContainer currentPage=\"ProfilePage\" />}\r\n        sideNav={\r\n          <AsideContent user={user} isCurrentUser={isCurrentUser} displayName={displayName} />\r\n        }\r\n        footer={<FooterContainer />}\r\n      >\r\n        <MainContent bio={bio} displayName={displayName} userShowError={userShowError} {...rest} />\r\n      </LayoutSideNavigation>\r\n    </Page>\r\n  );\r\n};\r\n\r\nProfilePageComponent.defaultProps = {\r\n  currentUser: null,\r\n  user: null,\r\n  userShowError: null,\r\n  queryListingsError: null,\r\n  reviews: [],\r\n  queryReviewsError: null,\r\n};\r\n\r\nProfilePageComponent.propTypes = {\r\n  scrollingDisabled: bool.isRequired,\r\n  currentUser: propTypes.currentUser,\r\n  user: propTypes.user,\r\n  userShowError: propTypes.error,\r\n  queryListingsError: propTypes.error,\r\n  listings: arrayOf(propTypes.listing).isRequired,\r\n  reviews: arrayOf(propTypes.review),\r\n  queryReviewsError: propTypes.error,\r\n\r\n  // form withViewport\r\n  viewport: shape({\r\n    width: number.isRequired,\r\n    height: number.isRequired,\r\n  }).isRequired,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { currentUser } = state.user;\r\n  const {\r\n    userId,\r\n    userShowError,\r\n    queryListingsError,\r\n    userListingRefs,\r\n    reviews,\r\n    queryReviewsError,\r\n  } = state.ProfilePage;\r\n  const userMatches = getMarketplaceEntities(state, [{ type: 'user', id: userId }]);\r\n  const user = userMatches.length === 1 ? userMatches[0] : null;\r\n  const listings = getMarketplaceEntities(state, userListingRefs);\r\n  return {\r\n    scrollingDisabled: isScrollingDisabled(state),\r\n    currentUser,\r\n    user,\r\n    userShowError,\r\n    queryListingsError,\r\n    listings,\r\n    reviews,\r\n    queryReviewsError,\r\n  };\r\n};\r\n\r\nconst ProfilePage = compose(\r\n  connect(mapStateToProps),\r\n  withViewport,\r\n  injectIntl\r\n)(ProfilePageComponent);\r\n\r\nexport default ProfilePage;\r\n"],"names":["AsideContent","props","user","displayName","isCurrentUser","React","className","css","AvatarLarge","disableProfileLink","H2","as","FormattedMessage","id","values","name","NamedLink","ReviewsErrorMaybe","queryReviewsError","MobileReviews","reviews","reviewsOfProvider","filter","r","attributes","type","REVIEW_TYPE_OF_PROVIDER","reviewsOfCustomer","REVIEW_TYPE_OF_CUSTOMER","H4","count","length","Reviews","DesktopReviews","showReviewsType","setShowReviewsType","useState","isReviewTypeProviderSelected","isReviewTypeCustomerSelected","desktopReviewTabs","text","Heading","rootClassName","selected","onClick","ButtonTabNavHorizontal","tabs","MainContent","userShowError","bio","listings","queryListingsError","viewport","hasListings","isMobileLayout","width","hasBio","listingsContainerClasses","classNames","map","l","key","uuid","ListingCard","listing","showAuthorInfo","ProfilePageComponent","_profileUser$attribut","config","useConfiguration","scrollingDisabled","currentUser","intl","rest","ensuredCurrentUser","ensureCurrentUser","profileUser","ensureUser","profile","schemaTitleVars","marketplaceName","schemaTitle","formatMessage","status","NotFoundPage","Page","title","schema","LayoutSideNavigation","sideNavClassName","topbar","TopbarContainer","currentPage","sideNav","footer","FooterContainer","Object","assign","defaultProps","compose","connect","state","userId","userListingRefs","ProfilePage","userMatches","getMarketplaceEntities","isScrollingDisabled","withViewport","injectIntl"],"sourceRoot":""}