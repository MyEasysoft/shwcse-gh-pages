{"version":3,"file":"ManageListingsPage.650a55b6.chunk.js","mappings":"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","sources":["webpack://app/./src/containers/ManageListingsPage/ManageListingsPage.module.css?039f","containers/ManageListingsPage/ManageListingsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ManageListingsPage_root__e4gtl\",\"tabs\":\"ManageListingsPage_tabs__977CN\",\"tab\":\"ManageListingsPage_tab__9FG9i\",\"messagePanel\":\"ManageListingsPage_messagePanel__9FG-q\",\"listingPanel\":\"ManageListingsPage_listingPanel__kgJIu\",\"noResultsContainer\":\"ManageListingsPage_noResultsContainer__OsE7b\",\"heading\":\"ManageListingsPage_heading__NPJ7b\",\"createListingParagraph\":\"ManageListingsPage_createListingParagraph__1LaW7\",\"headingNoListings\":\"ManageListingsPage_headingNoListings__LVdrc\",\"listingCards\":\"ManageListingsPage_listingCards__4RJlV\",\"listingCard\":\"ManageListingsPage_listingCard__cU2uV\",\"pagination\":\"ManageListingsPage_pagination__oeLBZ\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { FormattedMessage, injectIntl, intlShape } from '../../util/reactIntl';\r\nimport { propTypes } from '../../util/types';\r\nimport { isScrollingDisabled } from '../../ducks/ui.duck';\r\n\r\nimport {\r\n  H3,\r\n  Page,\r\n  PaginationLinks,\r\n  UserNav,\r\n  LayoutSingleColumn,\r\n  NamedLink,\r\n} from '../../components';\r\n\r\nimport TopbarContainer from '../../containers/TopbarContainer/TopbarContainer';\r\nimport FooterContainer from '../../containers/FooterContainer/FooterContainer';\r\n\r\nimport ManageListingCard from './ManageListingCard/ManageListingCard';\r\n\r\nimport { closeListing, openListing, getOwnListingsById } from './ManageListingsPage.duck';\r\nimport css from './ManageListingsPage.module.css';\r\n\r\nexport class ManageListingsPageComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { listingMenuOpen: null };\r\n    this.onToggleMenu = this.onToggleMenu.bind(this);\r\n  }\r\n\r\n  onToggleMenu(listing) {\r\n    this.setState({ listingMenuOpen: listing });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      closingListing,\r\n      closingListingError,\r\n      listings,\r\n      onCloseListing,\r\n      onOpenListing,\r\n      openingListing,\r\n      openingListingError,\r\n      pagination,\r\n      queryInProgress,\r\n      queryListingsError,\r\n      queryParams,\r\n      scrollingDisabled,\r\n      intl,\r\n    } = this.props;\r\n\r\n    const hasPaginationInfo = !!pagination && pagination.totalItems != null;\r\n    const listingsAreLoaded = !queryInProgress && hasPaginationInfo;\r\n\r\n    const loadingResults = (\r\n      <div className={css.messagePanel}>\r\n        <H3 as=\"h2\" className={css.heading}>\r\n          <FormattedMessage id=\"ManageListingsPage.loadingOwnListings\" />\r\n        </H3>\r\n      </div>\r\n    );\r\n\r\n    const queryError = (\r\n      <div className={css.messagePanel}>\r\n        <H3 as=\"h2\" className={css.heading}>\r\n          <FormattedMessage id=\"ManageListingsPage.queryError\" />\r\n        </H3>\r\n      </div>\r\n    );\r\n\r\n    const noResults =\r\n      listingsAreLoaded && pagination.totalItems === 0 ? (\r\n        <div className={css.noResultsContainer}>\r\n          <H3 as=\"h1\" className={css.headingNoListings}>\r\n            <FormattedMessage id=\"ManageListingsPage.noResults\" />\r\n          </H3>\r\n          <p className={css.createListingParagraph}>\r\n            <NamedLink className={css.createListingLink} name=\"NewListingPage\">\r\n              <FormattedMessage id=\"ManageListingsPage.createListing\" />\r\n            </NamedLink>\r\n          </p>\r\n        </div>\r\n      ) : null;\r\n\r\n    const heading =\r\n      listingsAreLoaded && pagination.totalItems > 0 ? (\r\n        <H3 as=\"h1\" className={css.heading}>\r\n          <FormattedMessage\r\n            id=\"ManageListingsPage.youHaveListings\"\r\n            values={{ count: pagination.totalItems }}\r\n          />\r\n        </H3>\r\n      ) : (\r\n        noResults\r\n      );\r\n\r\n    const page = queryParams ? queryParams.page : 1;\r\n    const paginationLinks =\r\n      listingsAreLoaded && pagination && pagination.totalPages > 1 ? (\r\n        <PaginationLinks\r\n          className={css.pagination}\r\n          pageName=\"ManageListingsPage\"\r\n          pageSearchParams={{ page }}\r\n          pagination={pagination}\r\n        />\r\n      ) : null;\r\n\r\n    const listingMenuOpen = this.state.listingMenuOpen;\r\n    const closingErrorListingId = !!closingListingError && closingListingError.listingId;\r\n    const openingErrorListingId = !!openingListingError && openingListingError.listingId;\r\n\r\n    const title = intl.formatMessage({ id: 'ManageListingsPage.title' });\r\n\r\n    const panelWidth = 62.5;\r\n    // Render hints for responsive image\r\n    const renderSizes = [\r\n      `(max-width: 767px) 100vw`,\r\n      `(max-width: 1920px) ${panelWidth / 2}vw`,\r\n      `${panelWidth / 3}vw`,\r\n    ].join(', ');\r\n\r\n    return (\r\n      <Page title={title} scrollingDisabled={scrollingDisabled}>\r\n        <LayoutSingleColumn\r\n          topbar={\r\n            <>\r\n              <TopbarContainer currentPage=\"ManageListingsPage\" />\r\n              <UserNav currentPage=\"ManageListingsPage\" />\r\n            </>\r\n          }\r\n          footer={<FooterContainer />}\r\n        >\r\n          {queryInProgress ? loadingResults : null}\r\n          {queryListingsError ? queryError : null}\r\n          <div className={css.listingPanel}>\r\n            {heading}\r\n            <div className={css.listingCards}>\r\n              {listings.map(l => (\r\n                <ManageListingCard\r\n                  className={css.listingCard}\r\n                  key={l.id.uuid}\r\n                  listing={l}\r\n                  isMenuOpen={!!listingMenuOpen && listingMenuOpen.id.uuid === l.id.uuid}\r\n                  actionsInProgressListingId={openingListing || closingListing}\r\n                  onToggleMenu={this.onToggleMenu}\r\n                  onCloseListing={onCloseListing}\r\n                  onOpenListing={onOpenListing}\r\n                  hasOpeningError={openingErrorListingId.uuid === l.id.uuid}\r\n                  hasClosingError={closingErrorListingId.uuid === l.id.uuid}\r\n                  renderSizes={renderSizes}\r\n                />\r\n              ))}\r\n            </div>\r\n            {paginationLinks}\r\n          </div>\r\n        </LayoutSingleColumn>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nManageListingsPageComponent.defaultProps = {\r\n  listings: [],\r\n  pagination: null,\r\n  queryListingsError: null,\r\n  queryParams: null,\r\n  closingListing: null,\r\n  closingListingError: null,\r\n  openingListing: null,\r\n  openingListingError: null,\r\n};\r\n\r\nconst { arrayOf, bool, func, object, shape, string } = PropTypes;\r\n\r\nManageListingsPageComponent.propTypes = {\r\n  closingListing: shape({ uuid: string.isRequired }),\r\n  closingListingError: shape({\r\n    listingId: propTypes.uuid.isRequired,\r\n    error: propTypes.error.isRequired,\r\n  }),\r\n  listings: arrayOf(propTypes.ownListing),\r\n  onCloseListing: func.isRequired,\r\n  onOpenListing: func.isRequired,\r\n  openingListing: shape({ uuid: string.isRequired }),\r\n  openingListingError: shape({\r\n    listingId: propTypes.uuid.isRequired,\r\n    error: propTypes.error.isRequired,\r\n  }),\r\n  pagination: propTypes.pagination,\r\n  queryInProgress: bool.isRequired,\r\n  queryListingsError: propTypes.error,\r\n  queryParams: object,\r\n  scrollingDisabled: bool.isRequired,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const {\r\n    currentPageResultIds,\r\n    pagination,\r\n    queryInProgress,\r\n    queryListingsError,\r\n    queryParams,\r\n    openingListing,\r\n    openingListingError,\r\n    closingListing,\r\n    closingListingError,\r\n  } = state.ManageListingsPage;\r\n  const listings = getOwnListingsById(state, currentPageResultIds);\r\n  return {\r\n    currentPageResultIds,\r\n    listings,\r\n    pagination,\r\n    queryInProgress,\r\n    queryListingsError,\r\n    queryParams,\r\n    scrollingDisabled: isScrollingDisabled(state),\r\n    openingListing,\r\n    openingListingError,\r\n    closingListing,\r\n    closingListingError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onCloseListing: listingId => dispatch(closeListing(listingId)),\r\n  onOpenListing: listingId => dispatch(openListing(listingId)),\r\n});\r\n\r\nconst ManageListingsPage = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  injectIntl\r\n)(ManageListingsPageComponent);\r\n\r\nexport default ManageListingsPage;\r\n"],"names":["ManageListingsPageComponent","Component","constructor","props","super","this","state","listingMenuOpen","onToggleMenu","bind","listing","setState","render","closingListing","closingListingError","listings","onCloseListing","onOpenListing","openingListing","openingListingError","pagination","queryInProgress","queryListingsError","queryParams","scrollingDisabled","intl","hasPaginationInfo","totalItems","listingsAreLoaded","loadingResults","React","className","css","messagePanel","H3","as","heading","FormattedMessage","id","queryError","noResults","noResultsContainer","headingNoListings","createListingParagraph","NamedLink","createListingLink","name","values","count","page","paginationLinks","totalPages","PaginationLinks","pageName","pageSearchParams","closingErrorListingId","listingId","openingErrorListingId","title","formatMessage","renderSizes","concat","panelWidth","join","Page","LayoutSingleColumn","topbar","TopbarContainer","currentPage","UserNav","footer","FooterContainer","listingPanel","listingCards","map","l","ManageListingCard","listingCard","key","uuid","isMenuOpen","actionsInProgressListingId","hasOpeningError","hasClosingError","defaultProps","arrayOf","bool","func","object","shape","string","PropTypes","compose","connect","currentPageResultIds","ManageListingsPage","getOwnListingsById","isScrollingDisabled","dispatch","closeListing","openListing","injectIntl"],"sourceRoot":""}