{"version":3,"file":"ListingPageCarousel.5b293141.chunk.js","mappings":"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","sources":["webpack://app/./src/containers/ListingPage/ListingImageGallery/ListingImageGallery.module.css?5fea","containers/ListingPage/ListingImageGallery/ListingImageGallery.js","containers/ListingPage/SectionGallery.js","containers/ListingPage/ListingPageCarousel.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ListingImageGallery_root__JzVnD\",\"itemWrapper\":\"ListingImageGallery_itemWrapper__GsTrh\",\"itemWrapperFullscreen\":\"ListingImageGallery_itemWrapperFullscreen__TFjqf\",\"noImage\":\"ListingImageGallery_noImage__yDC3O\",\"itemCentering\":\"ListingImageGallery_itemCentering__jTpce\",\"item\":\"ListingImageGallery_item__AtBV+\",\"thumb\":\"ListingImageGallery_thumb__OIZkp\",\"navLeft\":\"ListingImageGallery_navLeft__5w7Fd\",\"navRight\":\"ListingImageGallery_navRight__cZ6df\",\"navArrowWrapper\":\"ListingImageGallery_navArrowWrapper__zq5yN\",\"openFullscreen\":\"ListingImageGallery_openFullscreen__1b4QD marketplaceTinyFontStyles\",\"close\":\"ListingImageGallery_close__q0Y79 marketplaceModalCloseStyles\",\"closeText\":\"ListingImageGallery_closeText__O+9m- marketplaceModalCloseText\",\"closeIcon\":\"ListingImageGallery_closeIcon__oq8Oi marketplaceModalCloseIcon\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ReactImageGallery from 'react-image-gallery';\r\n\r\nimport { propTypes } from '../../../util/types';\r\nimport { FormattedMessage, injectIntl, intlShape } from '../../../util/reactIntl';\r\nimport {\r\n  AspectRatioWrapper,\r\n  Button,\r\n  IconClose,\r\n  IconArrowHead,\r\n  ResponsiveImage,\r\n} from '../../../components';\r\n\r\n// Copied directly from\r\n// `node_modules/react-image-gallery/styles/css/image-gallery.css`. The\r\n// copied file is left unedited, and all the overrides are defined in......\r\n// the component CSS file below.\r\nimport './image-gallery.css';\r\n\r\nimport css from './ListingImageGallery.module.css';\r\n\r\nconst IMAGE_GALLERY_OPTIONS = {\r\n  showPlayButton: false,\r\n  disableThumbnailScroll: true,\r\n};\r\nconst MAX_LANDSCAPE_ASPECT_RATIO = 2; // 2:1\r\nconst MAX_PORTRAIT_ASPECT_RATIO = 4 / 3;\r\n\r\nconst getFirstImageAspectRatio = (firstImage, scaledVariant) => {\r\n  if (!firstImage) {\r\n    return { aspectWidth: 1, aspectHeight: 1 };\r\n  }\r\n\r\n  const v = firstImage?.attributes?.variants?.[scaledVariant];\r\n  const w = v?.width;\r\n  const h = v?.height;\r\n  const hasDimensions = !!w && !!h;\r\n  const aspectRatio = w / h;\r\n\r\n  // We keep the fractions separated as these are given to AspectRatioWrapper\r\n  // which expects separate width and height\r\n  return hasDimensions && aspectRatio >= MAX_LANDSCAPE_ASPECT_RATIO\r\n    ? { aspectWidth: 2, aspectHeight: 1 }\r\n    : hasDimensions && aspectRatio <= MAX_PORTRAIT_ASPECT_RATIO\r\n    ? { aspectWidth: 4, aspectHeight: 3 }\r\n    : hasDimensions\r\n    ? { aspectWidth: w, aspectHeight: h }\r\n    : { aspectWidth: 1, aspectHeight: 1 };\r\n};\r\n\r\nconst ListingImageGallery = props => {\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n  const { intl, rootClassName, className, images, imageVariants, thumbnailVariants } = props;\r\n  const thumbVariants = thumbnailVariants || imageVariants;\r\n  // imageVariants are scaled variants.\r\n  const { aspectWidth, aspectHeight } = getFirstImageAspectRatio(images?.[0], imageVariants[0]);\r\n  const items = images.map((img, i) => {\r\n    return {\r\n      // We will only use the image resource, but react-image-gallery\r\n      // requires the `original` key from each item.\r\n      original: '',\r\n      alt: intl.formatMessage(\r\n        { id: 'ListingImageGallery.imageAltText' },\r\n        { index: i + 1, count: images.length }\r\n      ),\r\n      thumbAlt: intl.formatMessage(\r\n        { id: 'ListingImageGallery.imageThumbnailAltText' },\r\n        { index: i + 1, count: images.length }\r\n      ),\r\n      thumbnail: img.attributes?.variants?.[thumbVariants[0]],\r\n      image: img,\r\n    };\r\n  });\r\n  const imageSizesMaybe = isFullscreen\r\n    ? {}\r\n    : { sizes: `(max-width: 1024px) 100vw, (max-width: 1200px) calc(100vw - 192px), 708px` };\r\n  const renderItem = item => {\r\n    return (\r\n      <AspectRatioWrapper\r\n        width={aspectWidth || 1}\r\n        height={aspectHeight || 1}\r\n        className={isFullscreen ? css.itemWrapperFullscreen : css.itemWrapper}\r\n      >\r\n        <div className={css.itemCentering}>\r\n          <ResponsiveImage\r\n            rootClassName={css.item}\r\n            image={item.image}\r\n            alt={item.alt}\r\n            variants={imageVariants}\r\n            {...imageSizesMaybe}\r\n          />\r\n        </div>\r\n      </AspectRatioWrapper>\r\n    );\r\n  };\r\n  const renderThumbInner = item => {\r\n    return (\r\n      <div>\r\n        <ResponsiveImage\r\n          rootClassName={css.thumb}\r\n          image={item.image}\r\n          alt={item.thumbAlt}\r\n          variants={thumbVariants}\r\n          sizes=\"88px\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onScreenChange = isFull => {\r\n    setIsFullscreen(isFull);\r\n  };\r\n\r\n  const renderLeftNav = (onClick, disabled) => {\r\n    return (\r\n      <button className={css.navLeft} disabled={disabled} onClick={onClick}>\r\n        <div className={css.navArrowWrapper}>\r\n          <IconArrowHead direction=\"left\" size=\"big\" />\r\n        </div>\r\n      </button>\r\n    );\r\n  };\r\n  const renderRightNav = (onClick, disabled) => {\r\n    return (\r\n      <button className={css.navRight} disabled={disabled} onClick={onClick}>\r\n        <div className={css.navArrowWrapper}>\r\n          <IconArrowHead direction=\"right\" size=\"big\" />\r\n        </div>\r\n      </button>\r\n    );\r\n  };\r\n  const renderFullscreenButton = (onClick, isFullscreen) => {\r\n    return isFullscreen ? (\r\n      <Button\r\n        onClick={onClick}\r\n        rootClassName={css.close}\r\n        title={intl.formatMessage({ id: 'ListingImageGallery.closeModalTitle' })}\r\n      >\r\n        <span className={css.closeText}>\r\n          <FormattedMessage id=\"ListingImageGallery.closeModal\" />\r\n        </span>\r\n        <IconClose rootClassName={css.closeIcon} />\r\n      </Button>\r\n    ) : (\r\n      <button className={css.openFullscreen} onClick={onClick}>\r\n        <FormattedMessage\r\n          id=\"ListingImageGallery.viewImagesButton\"\r\n          values={{ count: images.length }}\r\n        />\r\n      </button>\r\n    );\r\n  };\r\n\r\n  if (items.length === 0) {\r\n    return <ResponsiveImage className={css.noImage} image={null} variants={[]} alt=\"\" />;\r\n  }\r\n\r\n  const classes = classNames(rootClassName || css.root, className);\r\n\r\n  return (\r\n    <ReactImageGallery\r\n      additionalClass={classes}\r\n      items={items}\r\n      renderItem={renderItem}\r\n      renderThumbInner={renderThumbInner}\r\n      onScreenChange={onScreenChange}\r\n      renderLeftNav={renderLeftNav}\r\n      renderRightNav={renderRightNav}\r\n      renderFullscreenButton={renderFullscreenButton}\r\n      {...IMAGE_GALLERY_OPTIONS}\r\n    />\r\n  );\r\n};\r\n\r\nListingImageGallery.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n  thumbnailVariants: null,\r\n};\r\n\r\nconst { string, arrayOf } = PropTypes;\r\n\r\nListingImageGallery.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n  images: arrayOf(propTypes.image).isRequired,\r\n  imageVariants: arrayOf(string).isRequired,\r\n  thumbnailVariants: arrayOf(string),\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nexport default injectIntl(ListingImageGallery);\r\n","import React from 'react';\r\nimport ListingImageGallery from './ListingImageGallery/ListingImageGallery';\r\n\r\nimport css from './ListingPage.module.css';\r\n\r\nconst SectionGallery = props => {\r\n  const { listing, variantPrefix } = props;\r\n  const images = listing.images;\r\n  const imageVariants = ['scaled-small', 'scaled-medium', 'scaled-large', 'scaled-xlarge'];\r\n  const thumbnailVariants = [variantPrefix, `${variantPrefix}-2x`, `${variantPrefix}-4x`];\r\n  return (\r\n    <div className={css.productGallery} data-testid=\"carousel\">\r\n      <ListingImageGallery\r\n        images={images}\r\n        imageVariants={imageVariants}\r\n        thumbnailVariants={thumbnailVariants}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionGallery;\r\n","import React, { useState } from 'react';\r\nimport { array, arrayOf, bool, func, shape, string, oneOf, object } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { useConfiguration } from '../../context/configurationContext';\r\nimport { useRouteConfiguration } from '../../context/routeConfigurationContext';\r\nimport { FormattedMessage, intlShape, useIntl } from '../../util/reactIntl';\r\nimport {\r\n  LISTING_STATE_PENDING_APPROVAL,\r\n  LISTING_STATE_CLOSED,\r\n  SCHEMA_TYPE_MULTI_ENUM,\r\n  SCHEMA_TYPE_TEXT,\r\n  propTypes,\r\n} from '../../util/types';\r\nimport { types as sdkTypes } from '../../util/sdkLoader';\r\nimport {\r\n  LISTING_PAGE_DRAFT_VARIANT,\r\n  LISTING_PAGE_PENDING_APPROVAL_VARIANT,\r\n  LISTING_PAGE_PARAM_TYPE_DRAFT,\r\n  LISTING_PAGE_PARAM_TYPE_EDIT,\r\n  createSlug,\r\n} from '../../util/urlHelpers';\r\nimport { convertMoneyToNumber } from '../../util/currency';\r\nimport {\r\n  ensureListing,\r\n  ensureOwnListing,\r\n  ensureUser,\r\n  userDisplayNameAsString,\r\n} from '../../util/data';\r\nimport { richText } from '../../util/richText';\r\nimport { isBookingProcess, resolveLatestProcessName } from '../../transactions/transaction';\r\n\r\nimport { getMarketplaceEntities } from '../../ducks/marketplaceData.duck';\r\nimport { manageDisableScrolling, isScrollingDisabled } from '../../ducks/ui.duck';\r\nimport { initializeCardPaymentData } from '../../ducks/stripe.duck.js';\r\n\r\nimport {\r\n  H4,\r\n  Page,\r\n  NamedLink,\r\n  NamedRedirect,\r\n  OrderPanel,\r\n  LayoutSingleColumn,\r\n} from '../../components';\r\n\r\nimport TopbarContainer from '../TopbarContainer/TopbarContainer';\r\nimport FooterContainer from '../FooterContainer/FooterContainer';\r\nimport NotFoundPage from '../NotFoundPage/NotFoundPage';\r\n\r\nimport {\r\n  sendInquiry,\r\n  setInitialValues,\r\n  fetchTimeSlots,\r\n  fetchTransactionLineItems,\r\n} from './ListingPage.duck';\r\n\r\nimport {\r\n  LoadingPage,\r\n  ErrorPage,\r\n  priceData,\r\n  listingImages,\r\n  handleContactUser,\r\n  handleSubmitInquiry,\r\n  handleSubmit,\r\n} from './ListingPage.shared';\r\nimport ActionBarMaybe from './ActionBarMaybe';\r\nimport SectionTextMaybe from './SectionTextMaybe';\r\nimport SectionDetailsMaybe from './SectionDetailsMaybe';\r\nimport SectionMultiEnumMaybe from './SectionMultiEnumMaybe';\r\nimport SectionReviews from './SectionReviews';\r\nimport SectionAuthorMaybe from './SectionAuthorMaybe';\r\nimport SectionMapMaybe from './SectionMapMaybe';\r\nimport SectionGallery from './SectionGallery';\r\n\r\nimport css from './ListingPage.module.css';\r\n\r\nconst MIN_LENGTH_FOR_LONG_WORDS_IN_TITLE = 16;\r\n\r\nconst { UUID } = sdkTypes;\r\n\r\nexport const ListingPageComponent = props => {\r\n  const [inquiryModalOpen, setInquiryModalOpen] = useState(\r\n    props.inquiryModalOpenForListingId === props.params.id\r\n  );\r\n\r\n  const {\r\n    isAuthenticated,\r\n    currentUser,\r\n    getListing,\r\n    getOwnListing,\r\n    intl,\r\n    onManageDisableScrolling,\r\n    params: rawParams,\r\n    location,\r\n    scrollingDisabled,\r\n    showListingError,\r\n    reviews,\r\n    fetchReviewsError,\r\n    sendInquiryInProgress,\r\n    sendInquiryError,\r\n    monthlyTimeSlots,\r\n    onFetchTimeSlots,\r\n    onFetchTransactionLineItems,\r\n    lineItems,\r\n    fetchLineItemsInProgress,\r\n    fetchLineItemsError,\r\n    history,\r\n    callSetInitialValues,\r\n    onSendInquiry,\r\n    onInitializeCardPaymentData,\r\n    config,\r\n    routeConfiguration,\r\n  } = props;\r\n\r\n  const listingConfig = config.listing;\r\n  const listingId = new UUID(rawParams.id);\r\n  const isPendingApprovalVariant = rawParams.variant === LISTING_PAGE_PENDING_APPROVAL_VARIANT;\r\n  const isDraftVariant = rawParams.variant === LISTING_PAGE_DRAFT_VARIANT;\r\n  const currentListing =\r\n    isPendingApprovalVariant || isDraftVariant\r\n      ? ensureOwnListing(getOwnListing(listingId))\r\n      : ensureListing(getListing(listingId));\r\n\r\n  const listingSlug = rawParams.slug || createSlug(currentListing.attributes.title || '');\r\n  const params = { slug: listingSlug, ...rawParams };\r\n\r\n  const listingPathParamType = isDraftVariant\r\n    ? LISTING_PAGE_PARAM_TYPE_DRAFT\r\n    : LISTING_PAGE_PARAM_TYPE_EDIT;\r\n  const listingTab = isDraftVariant ? 'photos' : 'details';\r\n\r\n  const isApproved =\r\n    currentListing.id && currentListing.attributes.state !== LISTING_STATE_PENDING_APPROVAL;\r\n\r\n  const pendingIsApproved = isPendingApprovalVariant && isApproved;\r\n\r\n  // If a /pending-approval URL is shared, the UI requires\r\n  // authentication and attempts to fetch the listing from own\r\n  // listings. This will fail with 403 Forbidden if the author is\r\n  // another user. We use this information to try to fetch the\r\n  // public listing.\r\n  const pendingOtherUsersListing =\r\n    (isPendingApprovalVariant || isDraftVariant) &&\r\n    showListingError &&\r\n    showListingError.status === 403;\r\n  const shouldShowPublicListingPage = pendingIsApproved || pendingOtherUsersListing;\r\n\r\n  if (shouldShowPublicListingPage) {\r\n    return <NamedRedirect name=\"ListingPage\" params={params} search={location.search} />;\r\n  }\r\n\r\n  const topbar = <TopbarContainer />;\r\n\r\n  if (showListingError && showListingError.status === 404) {\r\n    // 404 listing not found\r\n    return <NotFoundPage />;\r\n  } else if (showListingError) {\r\n    // Other error in fetching listing\r\n    return <ErrorPage topbar={topbar} scrollingDisabled={scrollingDisabled} intl={intl} />;\r\n  } else if (!currentListing.id) {\r\n    // Still loading the listing\r\n    return <LoadingPage topbar={topbar} scrollingDisabled={scrollingDisabled} intl={intl} />;\r\n  }\r\n\r\n  const {\r\n    description = '',\r\n    geolocation = null,\r\n    price = null,\r\n    title = '',\r\n    publicData = {},\r\n    metadata = {},\r\n  } = currentListing.attributes;\r\n\r\n  const richTitle = (\r\n    <span>\r\n      {richText(title, {\r\n        longWordMinLength: MIN_LENGTH_FOR_LONG_WORDS_IN_TITLE,\r\n        longWordClass: css.longWord,\r\n      })}\r\n    </span>\r\n  );\r\n\r\n  const authorAvailable = currentListing && currentListing.author;\r\n  const userAndListingAuthorAvailable = !!(currentUser && authorAvailable);\r\n  const isOwnListing =\r\n    userAndListingAuthorAvailable && currentListing.author.id.uuid === currentUser.id.uuid;\r\n\r\n  const transactionProcessAlias = publicData?.transactionProcessAlias;\r\n  const processName = resolveLatestProcessName(transactionProcessAlias.split('/')[0]);\r\n  const isBooking = isBookingProcess(processName);\r\n  const processType = isBooking ? 'booking' : 'purchase';\r\n\r\n  const currentAuthor = authorAvailable ? currentListing.author : null;\r\n  const ensuredAuthor = ensureUser(currentAuthor);\r\n  const noPayoutDetailsSetWithOwnListing =\r\n    isOwnListing && !currentUser?.attributes?.stripeConnected;\r\n  const payoutDetailsWarning = noPayoutDetailsSetWithOwnListing ? (\r\n    <span className={css.payoutDetailsWarning}>\r\n      <FormattedMessage id=\"ListingPage.payoutDetailsWarning\" values={{ processType }} />\r\n      <NamedLink name=\"StripePayoutPage\">\r\n        <FormattedMessage id=\"ListingPage.payoutDetailsWarningLink\" />\r\n      </NamedLink>\r\n    </span>\r\n  ) : null;\r\n\r\n  // When user is banned or deleted the listing is also deleted.\r\n  // Because listing can be never showed with banned or deleted user we don't have to provide\r\n  // banned or deleted display names for the function\r\n  const authorDisplayName = userDisplayNameAsString(ensuredAuthor, '');\r\n\r\n  const { formattedPrice } = priceData(price, config.currency, intl);\r\n\r\n  const commonParams = { params, history, routes: routeConfiguration };\r\n  const onContactUser = handleContactUser({\r\n    ...commonParams,\r\n    currentUser,\r\n    callSetInitialValues,\r\n    location,\r\n    setInitialValues,\r\n    setInquiryModalOpen,\r\n  });\r\n  // Note: this is for inquiry state in booking and purchase processes. Inquiry process is handled through handleSubmit.\r\n  const onSubmitInquiry = handleSubmitInquiry({\r\n    ...commonParams,\r\n    getListing,\r\n    onSendInquiry,\r\n    setInquiryModalOpen,\r\n  });\r\n  const onSubmit = handleSubmit({\r\n    ...commonParams,\r\n    currentUser,\r\n    callSetInitialValues,\r\n    getListing,\r\n    onInitializeCardPaymentData,\r\n  });\r\n\r\n  const handleOrderSubmit = values => {\r\n    const isCurrentlyClosed = currentListing.attributes.state === LISTING_STATE_CLOSED;\r\n    if (isOwnListing || isCurrentlyClosed) {\r\n      window.scrollTo(0, 0);\r\n    } else {\r\n      onSubmit(values);\r\n    }\r\n  };\r\n\r\n  const facebookImages = listingImages(currentListing, 'facebook');\r\n  const twitterImages = listingImages(currentListing, 'twitter');\r\n  const schemaImages = listingImages(\r\n    currentListing,\r\n    `${config.layout.listingImage.variantPrefix}-2x`\r\n  ).map(img => img.url);\r\n  const marketplaceName = config.marketplaceName;\r\n  const schemaTitle = intl.formatMessage(\r\n    { id: 'ListingPage.schemaTitle' },\r\n    { title, price: formattedPrice, marketplaceName }\r\n  );\r\n  // You could add reviews, sku, etc. into page schema\r\n  // Read more about product schema\r\n  // https://developers.google.com/search/docs/advanced/structured-data/product\r\n  const productURL = `${config.marketplaceRootURL}${location.pathname}${location.search}${location.hash}`;\r\n  const schemaPriceMaybe = price\r\n    ? {\r\n        price: intl.formatNumber(convertMoneyToNumber(price), {\r\n          minimumFractionDigits: 2,\r\n          maximumFractionDigits: 2,\r\n        }),\r\n        priceCurrency: price.currency,\r\n      }\r\n    : {};\r\n  const currentStock = currentListing.currentStock?.attributes?.quantity || 0;\r\n  const schemaAvailability =\r\n    currentStock > 0 ? 'https://schema.org/InStock' : 'https://schema.org/OutOfStock';\r\n\r\n  const createFilterOptions = options => options.map(o => ({ key: `${o.option}`, label: o.label }));\r\n\r\n  return (\r\n    <Page\r\n      title={schemaTitle}\r\n      scrollingDisabled={scrollingDisabled}\r\n      author={authorDisplayName}\r\n      description={description}\r\n      facebookImages={facebookImages}\r\n      twitterImages={twitterImages}\r\n      schema={{\r\n        '@context': 'http://schema.org',\r\n        '@type': 'Product',\r\n        description: description,\r\n        name: schemaTitle,\r\n        image: schemaImages,\r\n        offers: {\r\n          '@type': 'Offer',\r\n          url: productURL,\r\n          ...schemaPriceMaybe,\r\n          availability: schemaAvailability,\r\n        },\r\n      }}\r\n    >\r\n      <LayoutSingleColumn className={css.pageRoot} topbar={topbar} footer={<FooterContainer />}>\r\n        <div className={css.contentWrapperForProductLayout}>\r\n          <div className={css.mainColumnForProductLayout}>\r\n            {currentListing.id && noPayoutDetailsSetWithOwnListing ? (\r\n              <ActionBarMaybe\r\n                className={css.actionBarForProductLayout}\r\n                isOwnListing={isOwnListing}\r\n                listing={currentListing}\r\n                showNoPayoutDetailsSet={noPayoutDetailsSetWithOwnListing}\r\n              />\r\n            ) : null}\r\n            {currentListing.id ? (\r\n              <ActionBarMaybe\r\n                className={css.actionBarForProductLayout}\r\n                isOwnListing={isOwnListing}\r\n                listing={currentListing}\r\n                editParams={{\r\n                  id: listingId.uuid,\r\n                  slug: listingSlug,\r\n                  type: listingPathParamType,\r\n                  tab: listingTab,\r\n                }}\r\n              />\r\n            ) : null}\r\n            <SectionGallery\r\n              listing={currentListing}\r\n              variantPrefix={config.layout.listingImage.variantPrefix}\r\n            />\r\n            <div className={css.mobileHeading}>\r\n              <H4 as=\"h1\" className={css.orderPanelTitle}>\r\n                <FormattedMessage id=\"ListingPage.orderTitle\" values={{ title: richTitle }} />\r\n              </H4>\r\n            </div>\r\n            <SectionTextMaybe text={description} showAsIngress />\r\n            <SectionDetailsMaybe\r\n              publicData={publicData}\r\n              metadata={metadata}\r\n              listingConfig={listingConfig}\r\n              intl={intl}\r\n            />\r\n            {listingConfig.listingFields.reduce((pickedElements, config) => {\r\n              const { key, enumOptions, includeForListingTypes, scope = 'public' } = config;\r\n              const listingType = publicData?.listingType;\r\n              const isTargetListingType =\r\n                includeForListingTypes == null || includeForListingTypes.includes(listingType);\r\n\r\n              const value =\r\n                scope === 'public' ? publicData[key] : scope === 'metadata' ? metadata[key] : null;\r\n              const hasValue = value != null;\r\n              return isTargetListingType && config.schemaType === SCHEMA_TYPE_MULTI_ENUM\r\n                ? [\r\n                    ...pickedElements,\r\n                    <SectionMultiEnumMaybe\r\n                      key={key}\r\n                      heading={config?.showConfig?.label}\r\n                      options={createFilterOptions(enumOptions)}\r\n                      selectedOptions={value || []}\r\n                    />,\r\n                  ]\r\n                : isTargetListingType && hasValue && config.schemaType === SCHEMA_TYPE_TEXT\r\n                ? [\r\n                    ...pickedElements,\r\n                    <SectionTextMaybe key={key} heading={config?.showConfig?.label} text={value} />,\r\n                  ]\r\n                : pickedElements;\r\n            }, [])}\r\n\r\n            <SectionMapMaybe\r\n              geolocation={geolocation}\r\n              publicData={publicData}\r\n              listingId={currentListing.id}\r\n              mapsConfig={config.maps}\r\n            />\r\n            <SectionReviews reviews={reviews} fetchReviewsError={fetchReviewsError} />\r\n            <SectionAuthorMaybe\r\n              title={title}\r\n              listing={currentListing}\r\n              authorDisplayName={authorDisplayName}\r\n              onContactUser={onContactUser}\r\n              isInquiryModalOpen={isAuthenticated && inquiryModalOpen}\r\n              onCloseInquiryModal={() => setInquiryModalOpen(false)}\r\n              sendInquiryError={sendInquiryError}\r\n              sendInquiryInProgress={sendInquiryInProgress}\r\n              onSubmitInquiry={onSubmitInquiry}\r\n              currentUser={currentUser}\r\n              onManageDisableScrolling={onManageDisableScrolling}\r\n            />\r\n          </div>\r\n          <div className={css.orderColumnForProductLayout}>\r\n            <OrderPanel\r\n              className={css.productOrderPanel}\r\n              listing={currentListing}\r\n              isOwnListing={isOwnListing}\r\n              onSubmit={handleOrderSubmit}\r\n              authorLink={\r\n                <NamedLink\r\n                  className={css.authorNameLink}\r\n                  name=\"ListingPage\"\r\n                  params={params}\r\n                  to={{ hash: '#author' }}\r\n                >\r\n                  {authorDisplayName}\r\n                </NamedLink>\r\n              }\r\n              title={<FormattedMessage id=\"ListingPage.orderTitle\" values={{ title: richTitle }} />}\r\n              titleDesktop={\r\n                <H4 as=\"h1\" className={css.orderPanelTitle}>\r\n                  <FormattedMessage id=\"ListingPage.orderTitle\" values={{ title: richTitle }} />\r\n                </H4>\r\n              }\r\n              payoutDetailsWarning={payoutDetailsWarning}\r\n              author={ensuredAuthor}\r\n              onManageDisableScrolling={onManageDisableScrolling}\r\n              onContactUser={onContactUser}\r\n              monthlyTimeSlots={monthlyTimeSlots}\r\n              onFetchTimeSlots={onFetchTimeSlots}\r\n              onFetchTransactionLineItems={onFetchTransactionLineItems}\r\n              lineItems={lineItems}\r\n              fetchLineItemsInProgress={fetchLineItemsInProgress}\r\n              fetchLineItemsError={fetchLineItemsError}\r\n              validListingTypes={config.listing.listingTypes}\r\n              marketplaceCurrency={config.currency}\r\n              dayCountAvailableForBooking={config.stripe.dayCountAvailableForBooking}\r\n              marketplaceName={config.marketplaceName}\r\n            />\r\n          </div>\r\n        </div>\r\n      </LayoutSingleColumn>\r\n    </Page>\r\n  );\r\n};\r\n\r\nListingPageComponent.defaultProps = {\r\n  currentUser: null,\r\n  inquiryModalOpenForListingId: null,\r\n  showListingError: null,\r\n  reviews: [],\r\n  fetchReviewsError: null,\r\n  monthlyTimeSlots: null,\r\n  sendInquiryError: null,\r\n  lineItems: null,\r\n  fetchLineItemsError: null,\r\n};\r\n\r\nListingPageComponent.propTypes = {\r\n  // from useHistory\r\n  history: shape({\r\n    push: func.isRequired,\r\n  }).isRequired,\r\n  // from useLocation\r\n  location: shape({\r\n    search: string,\r\n  }).isRequired,\r\n\r\n  // from useIntl\r\n  intl: intlShape.isRequired,\r\n\r\n  // from useConfiguration\r\n  config: object.isRequired,\r\n  // from useRouteConfiguration\r\n  routeConfiguration: arrayOf(propTypes.route).isRequired,\r\n\r\n  params: shape({\r\n    id: string.isRequired,\r\n    slug: string,\r\n    variant: oneOf([LISTING_PAGE_DRAFT_VARIANT, LISTING_PAGE_PENDING_APPROVAL_VARIANT]),\r\n  }).isRequired,\r\n\r\n  isAuthenticated: bool.isRequired,\r\n  currentUser: propTypes.currentUser,\r\n  getListing: func.isRequired,\r\n  getOwnListing: func.isRequired,\r\n  onManageDisableScrolling: func.isRequired,\r\n  scrollingDisabled: bool.isRequired,\r\n  inquiryModalOpenForListingId: string,\r\n  showListingError: propTypes.error,\r\n  callSetInitialValues: func.isRequired,\r\n  reviews: arrayOf(propTypes.review),\r\n  fetchReviewsError: propTypes.error,\r\n  monthlyTimeSlots: object,\r\n  // monthlyTimeSlots could be something like:\r\n  // monthlyTimeSlots: {\r\n  //   '2019-11': {\r\n  //     timeSlots: [],\r\n  //     fetchTimeSlotsInProgress: false,\r\n  //     fetchTimeSlotsError: null,\r\n  //   }\r\n  // }\r\n  sendInquiryInProgress: bool.isRequired,\r\n  sendInquiryError: propTypes.error,\r\n  onSendInquiry: func.isRequired,\r\n  onInitializeCardPaymentData: func.isRequired,\r\n  onFetchTransactionLineItems: func.isRequired,\r\n  lineItems: array,\r\n  fetchLineItemsInProgress: bool.isRequired,\r\n  fetchLineItemsError: propTypes.error,\r\n};\r\n\r\nconst EnhancedListingPage = props => {\r\n  const config = useConfiguration();\r\n  const routeConfiguration = useRouteConfiguration();\r\n  const intl = useIntl();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <ListingPageComponent\r\n      config={config}\r\n      routeConfiguration={routeConfiguration}\r\n      intl={intl}\r\n      history={history}\r\n      location={location}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { isAuthenticated } = state.auth;\r\n  const {\r\n    showListingError,\r\n    reviews,\r\n    fetchReviewsError,\r\n    monthlyTimeSlots,\r\n    sendInquiryInProgress,\r\n    sendInquiryError,\r\n    lineItems,\r\n    fetchLineItemsInProgress,\r\n    fetchLineItemsError,\r\n    inquiryModalOpenForListingId,\r\n  } = state.ListingPage;\r\n  const { currentUser } = state.user;\r\n\r\n  const getListing = id => {\r\n    const ref = { id, type: 'listing' };\r\n    const listings = getMarketplaceEntities(state, [ref]);\r\n    return listings.length === 1 ? listings[0] : null;\r\n  };\r\n\r\n  const getOwnListing = id => {\r\n    const ref = { id, type: 'ownListing' };\r\n    const listings = getMarketplaceEntities(state, [ref]);\r\n    return listings.length === 1 ? listings[0] : null;\r\n  };\r\n\r\n  return {\r\n    isAuthenticated,\r\n    currentUser,\r\n    getListing,\r\n    getOwnListing,\r\n    scrollingDisabled: isScrollingDisabled(state),\r\n    inquiryModalOpenForListingId,\r\n    showListingError,\r\n    reviews,\r\n    fetchReviewsError,\r\n    monthlyTimeSlots,\r\n    lineItems,\r\n    fetchLineItemsInProgress,\r\n    fetchLineItemsError,\r\n    sendInquiryInProgress,\r\n    sendInquiryError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onManageDisableScrolling: (componentId, disableScrolling) =>\r\n    dispatch(manageDisableScrolling(componentId, disableScrolling)),\r\n  callSetInitialValues: (setInitialValues, values, saveToSessionStorage) =>\r\n    dispatch(setInitialValues(values, saveToSessionStorage)),\r\n  onFetchTransactionLineItems: params => dispatch(fetchTransactionLineItems(params)),\r\n  onSendInquiry: (listing, message) => dispatch(sendInquiry(listing, message)),\r\n  onInitializeCardPaymentData: () => dispatch(initializeCardPaymentData()),\r\n  onFetchTimeSlots: (listingId, start, end, timeZone) =>\r\n    dispatch(fetchTimeSlots(listingId, start, end, timeZone)),\r\n});\r\n\r\n// Note: it is important that the withRouter HOC is **outside** the\r\n// connect HOC, otherwise React Router won't rerender any Route\r\n// components since connect implements a shouldComponentUpdate\r\n// lifecycle hook.\r\n//\r\n// See: https://github.com/ReactTraining/react-router/issues/4671\r\nconst ListingPage = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n)(EnhancedListingPage);\r\n\r\nexport default ListingPage;\r\n"],"names":["IMAGE_GALLERY_OPTIONS","showPlayButton","disableThumbnailScroll","ListingImageGallery","props","isFullscreen","setIsFullscreen","useState","intl","rootClassName","className","images","imageVariants","thumbnailVariants","thumbVariants","aspectWidth","aspectHeight","getFirstImageAspectRatio","firstImage","scaledVariant","_firstImage$attribute","_firstImage$attribute2","v","attributes","variants","w","width","h","height","hasDimensions","aspectRatio","items","map","img","i","_img$attributes","_img$attributes$varia","original","alt","formatMessage","id","index","count","length","thumbAlt","thumbnail","image","imageSizesMaybe","sizes","React","ResponsiveImage","css","classes","classNames","ReactImageGallery","Object","assign","additionalClass","renderItem","item","AspectRatioWrapper","renderThumbInner","onScreenChange","isFull","renderLeftNav","onClick","disabled","IconArrowHead","direction","size","renderRightNav","renderFullscreenButton","Button","title","FormattedMessage","IconClose","values","defaultProps","string","arrayOf","PropTypes","injectIntl","listing","variantPrefix","concat","productGallery","UUID","sdkTypes","ListingPageComponent","_currentUser$attribut","_currentListing$curre","_currentListing$curre2","inquiryModalOpen","setInquiryModalOpen","inquiryModalOpenForListingId","params","isAuthenticated","currentUser","getListing","getOwnListing","onManageDisableScrolling","rawParams","location","scrollingDisabled","showListingError","reviews","fetchReviewsError","sendInquiryInProgress","sendInquiryError","monthlyTimeSlots","onFetchTimeSlots","onFetchTransactionLineItems","lineItems","fetchLineItemsInProgress","fetchLineItemsError","history","callSetInitialValues","onSendInquiry","onInitializeCardPaymentData","config","routeConfiguration","listingConfig","listingId","isPendingApprovalVariant","variant","LISTING_PAGE_PENDING_APPROVAL_VARIANT","isDraftVariant","LISTING_PAGE_DRAFT_VARIANT","currentListing","ensureOwnListing","ensureListing","listingSlug","slug","createSlug","listingPathParamType","LISTING_PAGE_PARAM_TYPE_DRAFT","LISTING_PAGE_PARAM_TYPE_EDIT","listingTab","isApproved","state","LISTING_STATE_PENDING_APPROVAL","pendingIsApproved","pendingOtherUsersListing","status","NamedRedirect","name","search","topbar","TopbarContainer","NotFoundPage","ErrorPage","LoadingPage","description","geolocation","price","publicData","metadata","richTitle","richText","longWordMinLength","longWordClass","longWord","authorAvailable","author","isOwnListing","uuid","transactionProcessAlias","processName","resolveLatestProcessName","split","processType","isBookingProcess","currentAuthor","ensuredAuthor","ensureUser","noPayoutDetailsSetWithOwnListing","stripeConnected","payoutDetailsWarning","NamedLink","authorDisplayName","userDisplayNameAsString","formattedPrice","priceData","currency","commonParams","routes","onContactUser","handleContactUser","setInitialValues","onSubmitInquiry","handleSubmitInquiry","onSubmit","handleSubmit","facebookImages","listingImages","twitterImages","schemaImages","layout","listingImage","url","marketplaceName","schemaTitle","productURL","marketplaceRootURL","pathname","hash","schemaPriceMaybe","formatNumber","convertMoneyToNumber","minimumFractionDigits","maximumFractionDigits","priceCurrency","schemaAvailability","currentStock","quantity","Page","schema","offers","availability","LayoutSingleColumn","pageRoot","footer","FooterContainer","contentWrapperForProductLayout","mainColumnForProductLayout","ActionBarMaybe","actionBarForProductLayout","showNoPayoutDetailsSet","editParams","type","tab","SectionGallery","mobileHeading","H4","as","orderPanelTitle","SectionTextMaybe","text","showAsIngress","SectionDetailsMaybe","listingFields","reduce","pickedElements","_config$showConfig","_config$showConfig2","key","enumOptions","includeForListingTypes","scope","listingType","isTargetListingType","includes","value","hasValue","schemaType","SCHEMA_TYPE_MULTI_ENUM","SectionMultiEnumMaybe","heading","showConfig","label","options","o","option","selectedOptions","SCHEMA_TYPE_TEXT","SectionMapMaybe","mapsConfig","maps","SectionReviews","SectionAuthorMaybe","isInquiryModalOpen","onCloseInquiryModal","orderColumnForProductLayout","OrderPanel","productOrderPanel","isCurrentlyClosed","LISTING_STATE_CLOSED","window","scrollTo","authorLink","authorNameLink","to","titleDesktop","validListingTypes","listingTypes","marketplaceCurrency","dayCountAvailableForBooking","stripe","compose","connect","auth","ListingPage","user","ref","listings","getMarketplaceEntities","isScrollingDisabled","dispatch","componentId","disableScrolling","manageDisableScrolling","saveToSessionStorage","fetchTransactionLineItems","message","sendInquiry","initializeCardPaymentData","start","end","timeZone","fetchTimeSlots","useConfiguration","useRouteConfiguration","useIntl","useHistory","useLocation"],"sourceRoot":""}