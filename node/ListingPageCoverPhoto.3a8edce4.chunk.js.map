{"version":3,"file":"ListingPageCoverPhoto.3a8edce4.chunk.js","mappings":"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","sources":["webpack://app/./src/containers/ListingPage/ImageCarousel/ImageCarousel.module.css?b425","containers/ListingPage/ImageCarousel/ImageCarousel.js","containers/ListingPage/SectionHero.js","containers/ListingPage/ListingPageCoverPhoto.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ImageCarousel_root__Wo+HB\",\"noImage\":\"ImageCarousel_noImage__wTO23\",\"itemCentering\":\"ImageCarousel_itemCentering__f4jFH\",\"item\":\"ImageCarousel_item__caCf7\",\"arrowHead\":\"ImageCarousel_arrowHead__dFX8J\",\"navLeft\":\"ImageCarousel_navLeft__HWU9V\",\"navRight\":\"ImageCarousel_navRight__zteS3\",\"navArrowWrapper\":\"ImageCarousel_navArrowWrapper__kvo4h\",\"imageWrapper\":\"ImageCarousel_imageWrapper__+BFN-\",\"imageIndex\":\"ImageCarousel_imageIndex__O6h1w h4\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ReactImageGallery from 'react-image-gallery';\r\n\r\nimport { propTypes } from '../../../util/types';\r\nimport { injectIntl, intlShape } from '../../../util/reactIntl';\r\nimport { IconArrowHead, ResponsiveImage } from '../../../components';\r\n\r\n// Copied directly from\r\n// `node_modules/react-image-gallery/styles/css/image-gallery.css`. The\r\n// copied file is left unedited, and all the overrides are defined in\r\n// the component CSS file below.\r\nimport './image-gallery.css';\r\n\r\nimport css from './ImageCarousel.module.css';\r\n\r\nconst IMAGE_GALLERY_OPTIONS = {\r\n  showPlayButton: false,\r\n  disableThumbnailScroll: true,\r\n  showThumbnails: false,\r\n  showFullscreenButton: false,\r\n  slideDuration: 350,\r\n};\r\n\r\nconst ImageCarousel = props => {\r\n  const [currentIndex, setIndex] = useState(0);\r\n  const { intl, rootClassName, className, images, imageVariants } = props;\r\n\r\n  const items = images.map((img, i) => {\r\n    return {\r\n      // We will only use the image resource, but react-image-gallery\r\n      // requires the `original` key from each item.\r\n      original: '',\r\n      alt: intl.formatMessage(\r\n        { id: 'ImageCarousel.imageAltText' },\r\n        { index: i + 1, count: images.length }\r\n      ),\r\n      image: img,\r\n    };\r\n  });\r\n  const renderItem = item => {\r\n    return (\r\n      <div className={css.imageWrapper}>\r\n        <div className={css.itemCentering}>\r\n          <ResponsiveImage\r\n            rootClassName={css.item}\r\n            image={item.image}\r\n            alt={item.alt}\r\n            variants={imageVariants}\r\n            sizes=\"(max-width: 767px) 100vw, 80vw\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderLeftNav = (onClick, disabled) => {\r\n    return (\r\n      <button className={css.navLeft} disabled={disabled} onClick={onClick}>\r\n        <div className={css.navArrowWrapper}>\r\n          <IconArrowHead direction=\"left\" size=\"big\" className={css.arrowHead} />\r\n        </div>\r\n      </button>\r\n    );\r\n  };\r\n  const renderRightNav = (onClick, disabled) => {\r\n    return (\r\n      <button className={css.navRight} disabled={disabled} onClick={onClick}>\r\n        <div className={css.navArrowWrapper}>\r\n          <IconArrowHead direction=\"right\" size=\"big\" className={css.arrowHead} />\r\n        </div>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  // If no image is given, rendere empty image.\r\n  if (items.length === 0) {\r\n    const classes = classNames(rootClassName || css.noImage, className);\r\n    return <ResponsiveImage className={classes} image={null} variants={[]} alt=\"\" />;\r\n  }\r\n\r\n  // We render index outside of ReactImageGallery.\r\n  // This keeps track of current index aka slide changes happening inside gallery.\r\n  const handleSlide = currentIndex => {\r\n    setIndex(currentIndex);\r\n  };\r\n  const naturalIndex = index => index + 1;\r\n\r\n  // Render image index info. E.g. \"4/12\"\r\n  const imageIndex =\r\n    items.length > 0 ? (\r\n      <span className={css.imageIndex}>\r\n        {naturalIndex(currentIndex)}/{items.length}\r\n      </span>\r\n    ) : null;\r\n\r\n  const classes = classNames(rootClassName || css.root, className);\r\n\r\n  return (\r\n    <>\r\n      <ReactImageGallery\r\n        additionalClass={classes}\r\n        items={items}\r\n        renderItem={renderItem}\r\n        renderLeftNav={renderLeftNav}\r\n        renderRightNav={renderRightNav}\r\n        onSlide={handleSlide}\r\n        {...IMAGE_GALLERY_OPTIONS}\r\n      />\r\n      {imageIndex}\r\n    </>\r\n  );\r\n};\r\n\r\nImageCarousel.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n};\r\n\r\nconst { string, arrayOf } = PropTypes;\r\n\r\nImageCarousel.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n  images: arrayOf(propTypes.image).isRequired,\r\n  imageVariants: arrayOf(string).isRequired,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nexport default injectIntl(ImageCarousel);\r\n","import React from 'react';\r\n\r\nimport { FormattedMessage } from '../../util/reactIntl';\r\nimport { ResponsiveImage, Modal } from '../../components';\r\n\r\nimport ImageCarousel from './ImageCarousel/ImageCarousel';\r\nimport ActionBarMaybe from './ActionBarMaybe';\r\n\r\nimport css from './ListingPage.module.css';\r\n\r\nconst SectionHero = props => {\r\n  const {\r\n    title,\r\n    listing,\r\n    isOwnListing,\r\n    editParams,\r\n    handleViewPhotosClick,\r\n    imageCarouselOpen,\r\n    onImageCarouselClose,\r\n    onManageDisableScrolling,\r\n    noPayoutDetailsSetWithOwnListing,\r\n  } = props;\r\n\r\n  const hasImages = listing.images && listing.images.length > 0;\r\n  const firstImage = hasImages ? listing.images[0] : null;\r\n  const variants = firstImage\r\n    ? Object.keys(firstImage?.attributes?.variants).filter(k => k.startsWith('scaled'))\r\n    : [];\r\n\r\n  const viewPhotosButton = hasImages ? (\r\n    <button className={css.viewPhotos} onClick={handleViewPhotosClick}>\r\n      <FormattedMessage\r\n        id=\"ListingPage.viewImagesButton\"\r\n        values={{ count: listing.images.length }}\r\n      />\r\n    </button>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={css.sectionHero} data-testid=\"hero\">\r\n      <div className={css.imageWrapperForSectionHero} onClick={handleViewPhotosClick}>\r\n        {listing.id && isOwnListing ? (\r\n          <div onClick={e => e.stopPropagation()} className={css.actionBarContainerForHeroLayout}>\r\n            {noPayoutDetailsSetWithOwnListing ? (\r\n              <ActionBarMaybe\r\n                className={css.actionBarForHeroLayout}\r\n                isOwnListing={isOwnListing}\r\n                listing={listing}\r\n                showNoPayoutDetailsSet={noPayoutDetailsSetWithOwnListing}\r\n              />\r\n            ) : null}\r\n\r\n            <ActionBarMaybe\r\n              className={css.actionBarForHeroLayout}\r\n              isOwnListing={isOwnListing}\r\n              listing={listing}\r\n              editParams={editParams}\r\n            />\r\n          </div>\r\n        ) : null}\r\n\r\n        <ResponsiveImage\r\n          rootClassName={css.rootForImage}\r\n          alt={title}\r\n          image={firstImage}\r\n          variants={variants}\r\n        />\r\n        {viewPhotosButton}\r\n      </div>\r\n      <Modal\r\n        id=\"ListingPage.imageCarousel\"\r\n        scrollLayerClassName={css.carouselModalScrollLayer}\r\n        containerClassName={css.carouselModalContainer}\r\n        lightCloseButton\r\n        isOpen={imageCarouselOpen}\r\n        onClose={onImageCarouselClose}\r\n        usePortal\r\n        onManageDisableScrolling={onManageDisableScrolling}\r\n      >\r\n        <ImageCarousel\r\n          images={listing.images}\r\n          imageVariants={['scaled-small', 'scaled-medium', 'scaled-large', 'scaled-xlarge']}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionHero;\r\n","import React, { useState } from 'react';\r\nimport { array, arrayOf, bool, func, shape, string, oneOf, object } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { useConfiguration } from '../../context/configurationContext';\r\nimport { useRouteConfiguration } from '../../context/routeConfigurationContext';\r\n\r\nimport { FormattedMessage, intlShape, useIntl } from '../../util/reactIntl';\r\nimport {\r\n  LISTING_STATE_PENDING_APPROVAL,\r\n  LISTING_STATE_CLOSED,\r\n  SCHEMA_TYPE_MULTI_ENUM,\r\n  SCHEMA_TYPE_TEXT,\r\n  propTypes,\r\n} from '../../util/types';\r\nimport { types as sdkTypes } from '../../util/sdkLoader';\r\nimport {\r\n  LISTING_PAGE_DRAFT_VARIANT,\r\n  LISTING_PAGE_PENDING_APPROVAL_VARIANT,\r\n  LISTING_PAGE_PARAM_TYPE_DRAFT,\r\n  LISTING_PAGE_PARAM_TYPE_EDIT,\r\n  createSlug,\r\n} from '../../util/urlHelpers';\r\nimport { convertMoneyToNumber } from '../../util/currency';\r\nimport {\r\n  ensureListing,\r\n  ensureOwnListing,\r\n  ensureUser,\r\n  userDisplayNameAsString,\r\n} from '../../util/data';\r\nimport { richText } from '../../util/richText';\r\nimport { isBookingProcess, resolveLatestProcessName } from '../../transactions/transaction';\r\n\r\nimport { getMarketplaceEntities } from '../../ducks/marketplaceData.duck';\r\nimport { manageDisableScrolling, isScrollingDisabled } from '../../ducks/ui.duck';\r\nimport { initializeCardPaymentData } from '../../ducks/stripe.duck.js';\r\n\r\nimport {\r\n  H4,\r\n  Page,\r\n  NamedLink,\r\n  NamedRedirect,\r\n  OrderPanel,\r\n  LayoutSingleColumn,\r\n} from '../../components';\r\n\r\nimport TopbarContainer from '../TopbarContainer/TopbarContainer';\r\nimport FooterContainer from '../FooterContainer/FooterContainer';\r\nimport NotFoundPage from '../NotFoundPage/NotFoundPage';\r\n\r\nimport {\r\n  sendInquiry,\r\n  setInitialValues,\r\n  fetchTimeSlots,\r\n  fetchTransactionLineItems,\r\n} from './ListingPage.duck';\r\n\r\nimport {\r\n  LoadingPage,\r\n  ErrorPage,\r\n  priceData,\r\n  listingImages,\r\n  handleContactUser,\r\n  handleSubmitInquiry,\r\n  handleSubmit,\r\n} from './ListingPage.shared';\r\nimport SectionHero from './SectionHero';\r\nimport SectionTextMaybe from './SectionTextMaybe';\r\nimport SectionDetailsMaybe from './SectionDetailsMaybe';\r\nimport SectionMultiEnumMaybe from './SectionMultiEnumMaybe';\r\nimport SectionReviews from './SectionReviews';\r\nimport SectionAuthorMaybe from './SectionAuthorMaybe';\r\nimport SectionMapMaybe from './SectionMapMaybe';\r\n\r\nimport css from './ListingPage.module.css';\r\n\r\nconst MIN_LENGTH_FOR_LONG_WORDS_IN_TITLE = 16;\r\n\r\nconst { UUID } = sdkTypes;\r\n\r\nexport const ListingPageComponent = props => {\r\n  const [inquiryModalOpen, setInquiryModalOpen] = useState(\r\n    props.inquiryModalOpenForListingId === props.params.id\r\n  );\r\n  const [imageCarouselOpen, setImageCarouselOpen] = useState(false);\r\n\r\n  const {\r\n    isAuthenticated,\r\n    currentUser,\r\n    getListing,\r\n    getOwnListing,\r\n    intl,\r\n    onManageDisableScrolling,\r\n    params: rawParams,\r\n    location,\r\n    scrollingDisabled,\r\n    showListingError,\r\n    reviews,\r\n    fetchReviewsError,\r\n    sendInquiryInProgress,\r\n    sendInquiryError,\r\n    monthlyTimeSlots,\r\n    onFetchTimeSlots,\r\n    onFetchTransactionLineItems,\r\n    lineItems,\r\n    fetchLineItemsInProgress,\r\n    fetchLineItemsError,\r\n    history,\r\n    callSetInitialValues,\r\n    onSendInquiry,\r\n    onInitializeCardPaymentData,\r\n    config,\r\n    routeConfiguration,\r\n  } = props;\r\n\r\n  const listingConfig = config.listing;\r\n  const listingId = new UUID(rawParams.id);\r\n  const isPendingApprovalVariant = rawParams.variant === LISTING_PAGE_PENDING_APPROVAL_VARIANT;\r\n  const isDraftVariant = rawParams.variant === LISTING_PAGE_DRAFT_VARIANT;\r\n  const currentListing =\r\n    isPendingApprovalVariant || isDraftVariant\r\n      ? ensureOwnListing(getOwnListing(listingId))\r\n      : ensureListing(getListing(listingId));\r\n\r\n  const listingSlug = rawParams.slug || createSlug(currentListing.attributes.title || '');\r\n  const params = { slug: listingSlug, ...rawParams };\r\n\r\n  const listingPathParamType = isDraftVariant\r\n    ? LISTING_PAGE_PARAM_TYPE_DRAFT\r\n    : LISTING_PAGE_PARAM_TYPE_EDIT;\r\n  const listingTab = isDraftVariant ? 'photos' : 'details';\r\n\r\n  const isApproved =\r\n    currentListing.id && currentListing.attributes.state !== LISTING_STATE_PENDING_APPROVAL;\r\n\r\n  const pendingIsApproved = isPendingApprovalVariant && isApproved;\r\n\r\n  // If a /pending-approval URL is shared, the UI requires\r\n  // authentication and attempts to fetch the listing from own\r\n  // listings. This will fail with 403 Forbidden if the author is\r\n  // another user. We use this information to try to fetch the\r\n  // public listing.\r\n  const pendingOtherUsersListing =\r\n    (isPendingApprovalVariant || isDraftVariant) &&\r\n    showListingError &&\r\n    showListingError.status === 403;\r\n  const shouldShowPublicListingPage = pendingIsApproved || pendingOtherUsersListing;\r\n\r\n  if (shouldShowPublicListingPage) {\r\n    return <NamedRedirect name=\"ListingPage\" params={params} search={location.search} />;\r\n  }\r\n\r\n  const topbar = <TopbarContainer />;\r\n\r\n  if (showListingError && showListingError.status === 404) {\r\n    // 404 listing not found\r\n    return <NotFoundPage />;\r\n  } else if (showListingError) {\r\n    // Other error in fetching listing\r\n    return <ErrorPage topbar={topbar} scrollingDisabled={scrollingDisabled} intl={intl} />;\r\n  } else if (!currentListing.id) {\r\n    // Still loading the listing\r\n    return <LoadingPage topbar={topbar} scrollingDisabled={scrollingDisabled} intl={intl} />;\r\n  }\r\n\r\n  const {\r\n    description = '',\r\n    geolocation = null,\r\n    price = null,\r\n    title = '',\r\n    publicData = {},\r\n    metadata = {},\r\n  } = currentListing.attributes;\r\n\r\n  const richTitle = (\r\n    <span>\r\n      {richText(title, {\r\n        longWordMinLength: MIN_LENGTH_FOR_LONG_WORDS_IN_TITLE,\r\n        longWordClass: css.longWord,\r\n      })}\r\n    </span>\r\n  );\r\n\r\n  const authorAvailable = currentListing && currentListing.author;\r\n  const userAndListingAuthorAvailable = !!(currentUser && authorAvailable);\r\n  const isOwnListing =\r\n    userAndListingAuthorAvailable && currentListing.author.id.uuid === currentUser.id.uuid;\r\n\r\n  const transactionProcessAlias = publicData?.transactionProcessAlias;\r\n  const processName = resolveLatestProcessName(transactionProcessAlias.split('/')[0]);\r\n  const isBooking = isBookingProcess(processName);\r\n  const processType = isBooking ? 'booking' : 'purchase';\r\n\r\n  const currentAuthor = authorAvailable ? currentListing.author : null;\r\n  const ensuredAuthor = ensureUser(currentAuthor);\r\n  const noPayoutDetailsSetWithOwnListing =\r\n    isOwnListing && !currentUser?.attributes?.stripeConnected;\r\n  const payoutDetailsWarning = noPayoutDetailsSetWithOwnListing ? (\r\n    <div>\r\n      <FormattedMessage id=\"ListingPage.payoutDetailsWarning\" values={{ processType }} />\r\n      <NamedLink name=\"StripePayoutPage\">\r\n        <FormattedMessage id=\"ListingPage.payoutDetailsWarningLink\" />\r\n      </NamedLink>\r\n    </div>\r\n  ) : null;\r\n\r\n  // When user is banned or deleted the listing is also deleted.\r\n  // Because listing can be never showed with banned or deleted user we don't have to provide\r\n  // banned or deleted display names for the function\r\n  const authorDisplayName = userDisplayNameAsString(ensuredAuthor, '');\r\n\r\n  const { formattedPrice } = priceData(price, config.currency, intl);\r\n\r\n  const commonParams = { params, history, routes: routeConfiguration };\r\n  const onContactUser = handleContactUser({\r\n    ...commonParams,\r\n    currentUser,\r\n    callSetInitialValues,\r\n    location,\r\n    setInitialValues,\r\n    setInquiryModalOpen,\r\n  });\r\n  // Note: this is for inquiry state in booking and purchase processes. Inquiry process is handled through handleSubmit.\r\n  const onSubmitInquiry = handleSubmitInquiry({\r\n    ...commonParams,\r\n    getListing,\r\n    onSendInquiry,\r\n    setInquiryModalOpen,\r\n  });\r\n  const onSubmit = handleSubmit({\r\n    ...commonParams,\r\n    currentUser,\r\n    callSetInitialValues,\r\n    getListing,\r\n    onInitializeCardPaymentData,\r\n  });\r\n\r\n  const handleOrderSubmit = values => {\r\n    const isCurrentlyClosed = currentListing.attributes.state === LISTING_STATE_CLOSED;\r\n    if (isOwnListing || isCurrentlyClosed) {\r\n      window.scrollTo(0, 0);\r\n    } else {\r\n      onSubmit(values);\r\n    }\r\n  };\r\n\r\n  const facebookImages = listingImages(currentListing, 'facebook');\r\n  const twitterImages = listingImages(currentListing, 'twitter');\r\n  const schemaImages = listingImages(\r\n    currentListing,\r\n    `${config.layout.listingImage.variantPrefix}-2x`\r\n  ).map(img => img.url);\r\n  const marketplaceName = config.marketplaceName;\r\n  const schemaTitle = intl.formatMessage(\r\n    { id: 'ListingPage.schemaTitle' },\r\n    { title, price: formattedPrice, marketplaceName }\r\n  );\r\n  // You could add reviews, sku, etc. into page schema\r\n  // Read more about product schema\r\n  // https://developers.google.com/search/docs/advanced/structured-data/product\r\n  const productURL = `${config.marketplaceRootURL}${location.pathname}${location.search}${location.hash}`;\r\n  const schemaPriceMaybe = price\r\n    ? {\r\n        price: intl.formatNumber(convertMoneyToNumber(price), {\r\n          minimumFractionDigits: 2,\r\n          maximumFractionDigits: 2,\r\n        }),\r\n        priceCurrency: price.currency,\r\n      }\r\n    : {};\r\n  const currentStock = currentListing.currentStock?.attributes?.quantity || 0;\r\n  const schemaAvailability =\r\n    currentStock > 0 ? 'https://schema.org/InStock' : 'https://schema.org/OutOfStock';\r\n\r\n  const createFilterOptions = options => options.map(o => ({ key: `${o.option}`, label: o.label }));\r\n\r\n  const handleViewPhotosClick = e => {\r\n    // Stop event from bubbling up to prevent image click handler\r\n    // trying to open the carousel as well.\r\n    e.stopPropagation();\r\n    setImageCarouselOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      title={schemaTitle}\r\n      scrollingDisabled={scrollingDisabled}\r\n      author={authorDisplayName}\r\n      description={description}\r\n      facebookImages={facebookImages}\r\n      twitterImages={twitterImages}\r\n      schema={{\r\n        '@context': 'http://schema.org',\r\n        '@type': 'Product',\r\n        description: description,\r\n        name: schemaTitle,\r\n        image: schemaImages,\r\n        offers: {\r\n          '@type': 'Offer',\r\n          url: productURL,\r\n          ...schemaPriceMaybe,\r\n          availability: schemaAvailability,\r\n        },\r\n      }}\r\n    >\r\n      <LayoutSingleColumn className={css.pageRoot} topbar={topbar} footer={<FooterContainer />}>\r\n        <SectionHero\r\n          title={title}\r\n          listing={currentListing}\r\n          isOwnListing={isOwnListing}\r\n          editParams={{\r\n            id: listingId.uuid,\r\n            slug: listingSlug,\r\n            type: listingPathParamType,\r\n            tab: listingTab,\r\n          }}\r\n          imageCarouselOpen={imageCarouselOpen}\r\n          onImageCarouselClose={() => setImageCarouselOpen(false)}\r\n          handleViewPhotosClick={handleViewPhotosClick}\r\n          onManageDisableScrolling={onManageDisableScrolling}\r\n          noPayoutDetailsSetWithOwnListing={noPayoutDetailsSetWithOwnListing}\r\n        />\r\n        <div className={css.contentWrapperForHeroLayout}>\r\n          <div className={css.mainColumnForHeroLayout}>\r\n            <div className={css.mobileHeading}>\r\n              <H4 as=\"h1\" className={css.orderPanelTitle}>\r\n                <FormattedMessage id=\"ListingPage.orderTitle\" values={{ title: richTitle }} />\r\n              </H4>\r\n            </div>\r\n            <SectionTextMaybe text={description} showAsIngress />\r\n            <SectionDetailsMaybe\r\n              publicData={publicData}\r\n              metadata={metadata}\r\n              listingConfig={listingConfig}\r\n              intl={intl}\r\n            />\r\n            {listingConfig.listingFields.reduce((pickedElements, config) => {\r\n              const { key, enumOptions, includeForListingTypes, scope = 'public' } = config;\r\n              const listingType = publicData?.listingType;\r\n              const isTargetListingType =\r\n                includeForListingTypes == null || includeForListingTypes.includes(listingType);\r\n\r\n              const value =\r\n                scope === 'public' ? publicData[key] : scope === 'metadata' ? metadata[key] : null;\r\n              const hasValue = value != null;\r\n              return isTargetListingType && config.schemaType === SCHEMA_TYPE_MULTI_ENUM\r\n                ? [\r\n                    ...pickedElements,\r\n                    <SectionMultiEnumMaybe\r\n                      key={key}\r\n                      heading={config?.showConfig?.label}\r\n                      options={createFilterOptions(enumOptions)}\r\n                      selectedOptions={value || []}\r\n                    />,\r\n                  ]\r\n                : isTargetListingType && hasValue && config.schemaType === SCHEMA_TYPE_TEXT\r\n                ? [\r\n                    ...pickedElements,\r\n                    <SectionTextMaybe key={key} heading={config?.showConfig?.label} text={value} />,\r\n                  ]\r\n                : pickedElements;\r\n            }, [])}\r\n\r\n            <SectionMapMaybe\r\n              geolocation={geolocation}\r\n              publicData={publicData}\r\n              listingId={currentListing.id}\r\n              mapsConfig={config.maps}\r\n            />\r\n            <SectionReviews reviews={reviews} fetchReviewsError={fetchReviewsError} />\r\n            <SectionAuthorMaybe\r\n              title={title}\r\n              listing={currentListing}\r\n              authorDisplayName={authorDisplayName}\r\n              onContactUser={onContactUser}\r\n              isInquiryModalOpen={isAuthenticated && inquiryModalOpen}\r\n              onCloseInquiryModal={() => setInquiryModalOpen(false)}\r\n              sendInquiryError={sendInquiryError}\r\n              sendInquiryInProgress={sendInquiryInProgress}\r\n              onSubmitInquiry={onSubmitInquiry}\r\n              currentUser={currentUser}\r\n              onManageDisableScrolling={onManageDisableScrolling}\r\n            />\r\n          </div>\r\n          <div className={css.orderColumnForHeroLayout}>\r\n            <OrderPanel\r\n              className={css.orderPanel}\r\n              listing={currentListing}\r\n              isOwnListing={isOwnListing}\r\n              onSubmit={handleOrderSubmit}\r\n              authorLink={\r\n                <NamedLink\r\n                  className={css.authorNameLink}\r\n                  name=\"ListingPage\"\r\n                  params={params}\r\n                  to={{ hash: '#author' }}\r\n                >\r\n                  {authorDisplayName}\r\n                </NamedLink>\r\n              }\r\n              title={<FormattedMessage id=\"ListingPage.orderTitle\" values={{ title: richTitle }} />}\r\n              titleDesktop={\r\n                <H4 as=\"h1\" className={css.orderPanelTitle}>\r\n                  <FormattedMessage id=\"ListingPage.orderTitle\" values={{ title: richTitle }} />\r\n                </H4>\r\n              }\r\n              payoutDetailsWarning={payoutDetailsWarning}\r\n              author={ensuredAuthor}\r\n              onManageDisableScrolling={onManageDisableScrolling}\r\n              onFetchTransactionLineItems={onFetchTransactionLineItems}\r\n              onContactUser={onContactUser}\r\n              monthlyTimeSlots={monthlyTimeSlots}\r\n              onFetchTimeSlots={onFetchTimeSlots}\r\n              lineItems={lineItems}\r\n              fetchLineItemsInProgress={fetchLineItemsInProgress}\r\n              fetchLineItemsError={fetchLineItemsError}\r\n              validListingTypes={config.listing.listingTypes}\r\n              marketplaceCurrency={config.currency}\r\n              dayCountAvailableForBooking={config.stripe.dayCountAvailableForBooking}\r\n              marketplaceName={config.marketplaceName}\r\n            />\r\n          </div>\r\n        </div>\r\n      </LayoutSingleColumn>\r\n    </Page>\r\n  );\r\n};\r\n\r\nListingPageComponent.defaultProps = {\r\n  currentUser: null,\r\n  inquiryModalOpenForListingId: null,\r\n  showListingError: null,\r\n  reviews: [],\r\n  fetchReviewsError: null,\r\n  monthlyTimeSlots: null,\r\n  sendInquiryError: null,\r\n  lineItems: null,\r\n  fetchLineItemsError: null,\r\n};\r\n\r\nListingPageComponent.propTypes = {\r\n  // from useHistory\r\n  history: shape({\r\n    push: func.isRequired,\r\n  }).isRequired,\r\n  // from useLocation\r\n  location: shape({\r\n    search: string,\r\n  }).isRequired,\r\n\r\n  // from useIntl\r\n  intl: intlShape.isRequired,\r\n\r\n  // from useConfiguration\r\n  config: object.isRequired,\r\n  // from useRouteConfiguration\r\n  routeConfiguration: arrayOf(propTypes.route).isRequired,\r\n\r\n  params: shape({\r\n    id: string.isRequired,\r\n    slug: string,\r\n    variant: oneOf([LISTING_PAGE_DRAFT_VARIANT, LISTING_PAGE_PENDING_APPROVAL_VARIANT]),\r\n  }).isRequired,\r\n\r\n  isAuthenticated: bool.isRequired,\r\n  currentUser: propTypes.currentUser,\r\n  getListing: func.isRequired,\r\n  getOwnListing: func.isRequired,\r\n  onManageDisableScrolling: func.isRequired,\r\n  scrollingDisabled: bool.isRequired,\r\n  inquiryModalOpenForListingId: string,\r\n  showListingError: propTypes.error,\r\n  callSetInitialValues: func.isRequired,\r\n  reviews: arrayOf(propTypes.review),\r\n  fetchReviewsError: propTypes.error,\r\n  monthlyTimeSlots: object,\r\n  // monthlyTimeSlots could be something like:\r\n  // monthlyTimeSlots: {\r\n  //   '2019-11': {\r\n  //     timeSlots: [],\r\n  //     fetchTimeSlotsInProgress: false,\r\n  //     fetchTimeSlotsError: null,\r\n  //   }\r\n  // }\r\n  sendInquiryInProgress: bool.isRequired,\r\n  sendInquiryError: propTypes.error,\r\n  onSendInquiry: func.isRequired,\r\n  onInitializeCardPaymentData: func.isRequired,\r\n  onFetchTransactionLineItems: func.isRequired,\r\n  lineItems: array,\r\n  fetchLineItemsInProgress: bool.isRequired,\r\n  fetchLineItemsError: propTypes.error,\r\n};\r\n\r\nconst EnhancedListingPage = props => {\r\n  const config = useConfiguration();\r\n  const routeConfiguration = useRouteConfiguration();\r\n  const intl = useIntl();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <ListingPageComponent\r\n      config={config}\r\n      routeConfiguration={routeConfiguration}\r\n      intl={intl}\r\n      history={history}\r\n      location={location}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { isAuthenticated } = state.auth;\r\n  const {\r\n    showListingError,\r\n    reviews,\r\n    fetchReviewsError,\r\n    monthlyTimeSlots,\r\n    sendInquiryInProgress,\r\n    sendInquiryError,\r\n    lineItems,\r\n    fetchLineItemsInProgress,\r\n    fetchLineItemsError,\r\n    inquiryModalOpenForListingId,\r\n  } = state.ListingPage;\r\n  const { currentUser } = state.user;\r\n\r\n  const getListing = id => {\r\n    const ref = { id, type: 'listing' };\r\n    const listings = getMarketplaceEntities(state, [ref]);\r\n    return listings.length === 1 ? listings[0] : null;\r\n  };\r\n\r\n  const getOwnListing = id => {\r\n    const ref = { id, type: 'ownListing' };\r\n    const listings = getMarketplaceEntities(state, [ref]);\r\n    return listings.length === 1 ? listings[0] : null;\r\n  };\r\n\r\n  return {\r\n    isAuthenticated,\r\n    currentUser,\r\n    getListing,\r\n    getOwnListing,\r\n    scrollingDisabled: isScrollingDisabled(state),\r\n    inquiryModalOpenForListingId,\r\n    showListingError,\r\n    reviews,\r\n    fetchReviewsError,\r\n    monthlyTimeSlots,\r\n    lineItems,\r\n    fetchLineItemsInProgress,\r\n    fetchLineItemsError,\r\n    sendInquiryInProgress,\r\n    sendInquiryError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onManageDisableScrolling: (componentId, disableScrolling) =>\r\n    dispatch(manageDisableScrolling(componentId, disableScrolling)),\r\n  callSetInitialValues: (setInitialValues, values, saveToSessionStorage) =>\r\n    dispatch(setInitialValues(values, saveToSessionStorage)),\r\n  onFetchTransactionLineItems: params => dispatch(fetchTransactionLineItems(params)),\r\n  onSendInquiry: (listing, message) => dispatch(sendInquiry(listing, message)),\r\n  onInitializeCardPaymentData: () => dispatch(initializeCardPaymentData()),\r\n  onFetchTimeSlots: (listingId, start, end, timeZone) =>\r\n    dispatch(fetchTimeSlots(listingId, start, end, timeZone)),\r\n});\r\n\r\n// Note: it is important that the withRouter HOC is **outside** the\r\n// connect HOC, otherwise React Router won't rerender any Route\r\n// components since connect implements a shouldComponentUpdate\r\n// lifecycle hook.\r\n//\r\n// See: https://github.com/ReactTraining/react-router/issues/4671\r\nconst ListingPage = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n)(EnhancedListingPage);\r\n\r\nexport default ListingPage;\r\n"],"names":["IMAGE_GALLERY_OPTIONS","showPlayButton","disableThumbnailScroll","showThumbnails","showFullscreenButton","slideDuration","ImageCarousel","props","currentIndex","setIndex","useState","intl","rootClassName","className","images","imageVariants","items","map","img","i","original","alt","formatMessage","id","index","count","length","image","classes","classNames","css","React","ResponsiveImage","variants","imageIndex","ReactImageGallery","Object","assign","additionalClass","renderItem","item","sizes","renderLeftNav","onClick","disabled","IconArrowHead","direction","size","renderRightNav","onSlide","defaultProps","string","arrayOf","PropTypes","injectIntl","_firstImage$attribute","title","listing","isOwnListing","editParams","handleViewPhotosClick","imageCarouselOpen","onImageCarouselClose","onManageDisableScrolling","noPayoutDetailsSetWithOwnListing","hasImages","firstImage","keys","attributes","filter","k","startsWith","viewPhotosButton","viewPhotos","FormattedMessage","values","sectionHero","imageWrapperForSectionHero","e","stopPropagation","actionBarContainerForHeroLayout","ActionBarMaybe","actionBarForHeroLayout","showNoPayoutDetailsSet","rootForImage","Modal","scrollLayerClassName","carouselModalScrollLayer","containerClassName","carouselModalContainer","lightCloseButton","isOpen","onClose","usePortal","UUID","sdkTypes","ListingPageComponent","_currentUser$attribut","_currentListing$curre","_currentListing$curre2","inquiryModalOpen","setInquiryModalOpen","inquiryModalOpenForListingId","params","setImageCarouselOpen","isAuthenticated","currentUser","getListing","getOwnListing","rawParams","location","scrollingDisabled","showListingError","reviews","fetchReviewsError","sendInquiryInProgress","sendInquiryError","monthlyTimeSlots","onFetchTimeSlots","onFetchTransactionLineItems","lineItems","fetchLineItemsInProgress","fetchLineItemsError","history","callSetInitialValues","onSendInquiry","onInitializeCardPaymentData","config","routeConfiguration","listingConfig","listingId","isPendingApprovalVariant","variant","LISTING_PAGE_PENDING_APPROVAL_VARIANT","isDraftVariant","LISTING_PAGE_DRAFT_VARIANT","currentListing","ensureOwnListing","ensureListing","listingSlug","slug","createSlug","listingPathParamType","LISTING_PAGE_PARAM_TYPE_DRAFT","LISTING_PAGE_PARAM_TYPE_EDIT","listingTab","isApproved","state","LISTING_STATE_PENDING_APPROVAL","pendingIsApproved","pendingOtherUsersListing","status","NamedRedirect","name","search","topbar","TopbarContainer","NotFoundPage","ErrorPage","LoadingPage","description","geolocation","price","publicData","metadata","richTitle","richText","longWordMinLength","longWordClass","longWord","authorAvailable","author","uuid","transactionProcessAlias","processName","resolveLatestProcessName","split","processType","isBookingProcess","currentAuthor","ensuredAuthor","ensureUser","stripeConnected","payoutDetailsWarning","NamedLink","authorDisplayName","userDisplayNameAsString","formattedPrice","priceData","currency","commonParams","routes","onContactUser","handleContactUser","setInitialValues","onSubmitInquiry","handleSubmitInquiry","onSubmit","handleSubmit","facebookImages","listingImages","twitterImages","schemaImages","concat","layout","listingImage","variantPrefix","url","marketplaceName","schemaTitle","productURL","marketplaceRootURL","pathname","hash","schemaPriceMaybe","formatNumber","convertMoneyToNumber","minimumFractionDigits","maximumFractionDigits","priceCurrency","schemaAvailability","currentStock","quantity","Page","schema","offers","availability","LayoutSingleColumn","pageRoot","footer","FooterContainer","SectionHero","type","tab","contentWrapperForHeroLayout","mainColumnForHeroLayout","mobileHeading","H4","as","orderPanelTitle","SectionTextMaybe","text","showAsIngress","SectionDetailsMaybe","listingFields","reduce","pickedElements","_config$showConfig","_config$showConfig2","key","enumOptions","includeForListingTypes","scope","listingType","isTargetListingType","includes","value","hasValue","schemaType","SCHEMA_TYPE_MULTI_ENUM","SectionMultiEnumMaybe","heading","showConfig","label","options","o","option","selectedOptions","SCHEMA_TYPE_TEXT","SectionMapMaybe","mapsConfig","maps","SectionReviews","SectionAuthorMaybe","isInquiryModalOpen","onCloseInquiryModal","orderColumnForHeroLayout","OrderPanel","orderPanel","isCurrentlyClosed","LISTING_STATE_CLOSED","window","scrollTo","authorLink","authorNameLink","to","titleDesktop","validListingTypes","listingTypes","marketplaceCurrency","dayCountAvailableForBooking","stripe","compose","connect","auth","ListingPage","user","ref","listings","getMarketplaceEntities","isScrollingDisabled","dispatch","componentId","disableScrolling","manageDisableScrolling","saveToSessionStorage","fetchTransactionLineItems","message","sendInquiry","initializeCardPaymentData","start","end","timeZone","fetchTimeSlots","useConfiguration","useRouteConfiguration","useIntl","useHistory","useLocation"],"sourceRoot":""}