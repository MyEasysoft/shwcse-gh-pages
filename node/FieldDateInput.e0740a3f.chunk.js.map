{"version":3,"file":"FieldDateInput.e0740a3f.chunk.js","mappings":"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","sources":["webpack://app/./src/components/FieldDateInput/DateInput.module.css?e19f","components/FieldDateInput/NextMonthIcon.js","components/FieldDateInput/PreviousMonthIcon.js","components/FieldDateInput/DateInput.js","webpack://app/./src/components/FieldDateInput/FieldDateInput.module.css?e944","components/FieldDateInput/FieldDateInput.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputRoot\":\"DateInput_inputRoot__L74Mh\",\"withMobileMargins\":\"DateInput_withMobileMargins__EoPDl\",\"rootNextMonthIcon\":\"DateInput_rootNextMonthIcon__248AZ\",\"rootPreviousMonthIcon\":\"DateInput_rootPreviousMonthIcon__EL9Yl\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport css from './DateInput.module.css';\r\n\r\nconst NextMonthIcon = props => {\r\n  const { className, rootClassName } = props;\r\n  const classes = classNames(rootClassName || css.rootNextMonthIcon, className);\r\n\r\n  return (\r\n    <svg\r\n      className={classes}\r\n      width=\"9\"\r\n      height=\"13\"\r\n      viewBox=\"0 0 9 13\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M7.472 6.97c.26-.26.26-.68 0-.94L2.14.694c-.263-.26-.684-.26-.944 0-.26.26-.26.683 0 .943L6.056 6.5l-4.86 4.862c-.26.26-.26.683 0 .943.26.26.68.26.943 0L7.47 6.97z\"\r\n        fillRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst { string } = PropTypes;\r\n\r\nNextMonthIcon.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n};\r\n\r\nNextMonthIcon.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n};\r\n\r\nexport default NextMonthIcon;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport css from './DateInput.module.css';\r\n\r\nconst PreviousMonthIcon = props => {\r\n  const { className, rootClassName } = props;\r\n  const classes = classNames(rootClassName || css.rootPreviousMonthIcon, className);\r\n\r\n  return (\r\n    <svg\r\n      className={classes}\r\n      width=\"9\"\r\n      height=\"13\"\r\n      viewBox=\"0 0 9 13\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M1.195 6.03c-.26.26-.26.68 0 .94l5.333 5.335c.262.26.683.26.943 0 .262-.26.262-.683 0-.943L2.61 6.5l4.86-4.862c.262-.26.262-.683 0-.943-.26-.26-.68-.26-.942 0L1.195 6.03z\"\r\n        fillRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst { string } = PropTypes;\r\n\r\nPreviousMonthIcon.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n};\r\n\r\nPreviousMonthIcon.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n};\r\n\r\nexport default PreviousMonthIcon;\r\n","/**\r\n * DateInput wraps SingleDatePicker from React-dates and gives a list of all default props we use.\r\n * Styles for SingleDatePicker can be found from 'public/reactDates.css'.\r\n *\r\n * N.B. *isOutsideRange* in defaultProps is defining what dates are available to booking.\r\n */\r\nimport React, { Component } from 'react';\r\nimport { bool, func, instanceOf, shape, string } from 'prop-types';\r\nimport { SingleDatePicker } from 'react-dates';\r\n\r\n// Import moment from moment-timezone. 10-year range only.\r\n// The full data included in moment-timezone dependency is mostly irrelevant\r\n// and slows down the first paint.\r\nimport moment from 'moment-timezone/builds/moment-timezone-with-data-10-year-range.min';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport { intlShape, injectIntl } from '../../util/reactIntl';\r\n\r\nimport NextMonthIcon from './NextMonthIcon';\r\nimport PreviousMonthIcon from './PreviousMonthIcon';\r\nimport css from './DateInput.module.css';\r\n\r\nexport const HORIZONTAL_ORIENTATION = 'horizontal';\r\nexport const ANCHOR_LEFT = 'left';\r\n\r\n// Possible configuration options of React-dates\r\nconst defaultProps = {\r\n  initialDate: null, // Possible initial date passed for the component\r\n  value: null, // Value should keep track of selected date.\r\n\r\n  // input related props\r\n  id: 'dateInput',\r\n  placeholder: null, // Handled inside component\r\n  disabled: false,\r\n  required: false,\r\n  readOnly: false,\r\n  screenReaderInputMessage: null, // Handled inside component\r\n  showClearDate: false,\r\n  customCloseIcon: null,\r\n  showDefaultInputIcon: false,\r\n  customInputIcon: null,\r\n  noBorder: true,\r\n  block: false,\r\n  small: false,\r\n\r\n  // calendar presentation and interaction related props\r\n  renderMonthText: null,\r\n  orientation: HORIZONTAL_ORIENTATION,\r\n  anchorDirection: ANCHOR_LEFT,\r\n  horizontalMargin: 0,\r\n  withPortal: false,\r\n  withFullScreenPortal: false,\r\n  appendToBody: false,\r\n  disableScroll: false,\r\n  initialVisibleMonth: null,\r\n  // This gets default value at FieldDateInput\r\n  firstDayOfWeek: 0,\r\n  numberOfMonths: 1,\r\n  keepOpenOnDateSelect: false,\r\n  reopenPickerOnClearDate: false,\r\n  renderCalendarInfo: null,\r\n  hideKeyboardShortcutsPanel: true,\r\n  daySize: 38,\r\n  isRTL: false,\r\n\r\n  // navigation related props\r\n  navPrev: <PreviousMonthIcon />,\r\n  navNext: <NextMonthIcon />,\r\n  onPrevMonthClick() {},\r\n  onNextMonthClick() {},\r\n  onClose() {},\r\n  transitionDuration: 200, // milliseconds between next month changes etc.\r\n\r\n  // day presentation and interaction related props\r\n  renderCalendarDay: undefined, // If undefined, renders react-dates/lib/components/CalendarDay\r\n  // day presentation and interaction related props\r\n  renderDayContents: day => {\r\n    return <span className=\"renderedDay\">{day.format('D')}</span>;\r\n  },\r\n  enableOutsideDays: false,\r\n  isDayBlocked: () => false,\r\n\r\n  // This gets default value at FieldDateInput\r\n  isOutsideRange: day => false,\r\n  isDayHighlighted: () => {},\r\n\r\n  // Internationalization props\r\n  // Multilocale support can be achieved with displayFormat like moment.localeData.longDateFormat('L')\r\n  // https://momentjs.com/\r\n  displayFormat: 'ddd, MMM D',\r\n  monthFormat: 'MMMM YYYY',\r\n  weekDayFormat: 'dd',\r\n};\r\n\r\nclass DateInputComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      focused: false,\r\n    };\r\n\r\n    this.onDateChange = this.onDateChange.bind(this);\r\n    this.onFocusChange = this.onFocusChange.bind(this);\r\n  }\r\n\r\n  onDateChange(date) {\r\n    const selectedDate = moment && moment.isMoment(date) ? date.toDate() : null;\r\n    this.props.onChange({ date: selectedDate });\r\n  }\r\n\r\n  onFocusChange(values) {\r\n    const focused = values.focused;\r\n    // SingleDatePicker requires 'onFocusChange' function and 'focused' boolean\r\n    // but Fields of React-Form deals with onFocus & onBlur instead\r\n    this.setState({ focused });\r\n\r\n    if (focused) {\r\n      this.props.onFocus();\r\n    } else {\r\n      this.props.onBlur();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    /* eslint-disable no-unused-vars */\r\n    const {\r\n      className,\r\n      initialDate,\r\n      intl,\r\n      name,\r\n      placeholderText,\r\n      onBlur,\r\n      onChange,\r\n      onFocus,\r\n      screenReaderInputMessage,\r\n      useMobileMargins,\r\n      value,\r\n      children,\r\n      render,\r\n      ...datePickerProps\r\n    } = this.props;\r\n    /* eslint-enable no-unused-vars */\r\n\r\n    const initialMoment = initialDate ? moment(initialDate) : null;\r\n\r\n    const date =\r\n      value && value.date instanceof Date && value.date.toString() !== 'Invalid Date'\r\n        ? moment(value.date)\r\n        : initialMoment;\r\n\r\n    const placeholder = placeholderText || intl.formatMessage({ id: 'FieldDateInput.placeholder' });\r\n\r\n    const screenReaderInputText =\r\n      screenReaderInputMessage ||\r\n      intl.formatMessage({ id: 'FieldDateInput.screenReaderInputMessage' });\r\n\r\n    const classes = classNames(css.inputRoot, className, {\r\n      [css.withMobileMargins]: useMobileMargins,\r\n    });\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <SingleDatePicker\r\n          {...datePickerProps}\r\n          focused={this.state.focused}\r\n          onFocusChange={this.onFocusChange}\r\n          date={date}\r\n          onDateChange={this.onDateChange}\r\n          placeholder={placeholder}\r\n          screenReaderInputMessage={screenReaderInputText}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDateInputComponent.defaultProps = {\r\n  className: null,\r\n  useMobileMargins: false,\r\n  ...defaultProps,\r\n};\r\n\r\nDateInputComponent.propTypes = {\r\n  className: string,\r\n  id: string,\r\n  focused: bool,\r\n  initialDate: instanceOf(Date),\r\n  intl: intlShape.isRequired,\r\n  name: string.isRequired,\r\n\r\n  onChange: func.isRequired,\r\n  onBlur: func.isRequired,\r\n  onFocus: func.isRequired,\r\n  isDayBlocked: func,\r\n  useMobileMargins: bool,\r\n  placeholderText: string,\r\n  screenReaderInputMessage: string,\r\n  value: shape({\r\n    date: instanceOf(Date),\r\n  }),\r\n};\r\n\r\nexport default injectIntl(DateInputComponent);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"fieldRoot\":\"FieldDateInput_fieldRoot__0BPd1\",\"mobileMargins\":\"FieldDateInput_mobileMargins__wkGYw\"};","/**\r\n * Provides a date picker for Final Forms (using https://github.com/airbnb/react-dates)\r\n *\r\n * NOTE: If you are using this component inside BookingDatesForm,\r\n * you should convert value.date to start date and end date before submitting it to API\r\n */\r\nimport React, { Component } from 'react';\r\nimport { bool, func, object, string } from 'prop-types';\r\nimport { isInclusivelyAfterDay, isInclusivelyBeforeDay } from 'react-dates';\r\nimport { Field } from 'react-final-form';\r\nimport classNames from 'classnames';\r\nimport moment from 'moment';\r\n\r\nimport { useConfiguration } from '../../context/configurationContext';\r\nimport { ValidationError } from '../../components';\r\n\r\nimport DateInput from './DateInput';\r\nimport css from './FieldDateInput.module.css';\r\n\r\nconst MAX_MOBILE_SCREEN_WIDTH = 768;\r\n\r\nconst handleChange = (parentOnChange, inputOnChange) => value => {\r\n  // If \"onChange\" callback is passed through the props,\r\n  // it can notify the parent when the content of the input has changed.\r\n  if (parentOnChange) {\r\n    parentOnChange(value);\r\n  }\r\n  // Notify Final Form that the input has changed.\r\n  inputOnChange(value);\r\n};\r\n\r\nclass FieldDateInputComponent extends Component {\r\n  render() {\r\n    const {\r\n      className,\r\n      rootClassName,\r\n      id,\r\n      label,\r\n      showLabelAsDisabled,\r\n      input,\r\n      meta,\r\n      useMobileMargins,\r\n      showErrorMessage,\r\n      onChange: parentOnChange,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    if (label && !id) {\r\n      throw new Error('id required when a label is given');\r\n    }\r\n\r\n    const { touched, invalid, error } = meta;\r\n    const value = input.value;\r\n\r\n    // If startDate is valid label changes color and bottom border changes color too\r\n    const dateIsValid = value && value.date instanceof Date;\r\n    // Error message and input error styles are only shown if the\r\n    // field has been touched and the validation has failed.\r\n    const hasError = touched && invalid && error;\r\n\r\n    const inputClasses = classNames({\r\n      [css.pickerSuccess]: dateIsValid,\r\n      [css.pickerError]: hasError,\r\n    });\r\n\r\n    const { onBlur, onFocus, onChange: inputOnChange, type, checked, ...restOfInput } = input;\r\n    const inputProps = {\r\n      onBlur: input.onBlur,\r\n      onFocus: input.onFocus,\r\n      onChange: handleChange(parentOnChange, inputOnChange),\r\n      useMobileMargins,\r\n      id,\r\n      readOnly: typeof window !== 'undefined' && window.innerWidth < MAX_MOBILE_SCREEN_WIDTH,\r\n      ...restOfInput,\r\n      ...rest,\r\n    };\r\n    const classes = classNames(rootClassName || css.fieldRoot, className);\r\n    const errorClasses = classNames({ [css.mobileMargins]: useMobileMargins });\r\n\r\n    return (\r\n      <div className={classes}>\r\n        {label ? (\r\n          <label\r\n            className={classNames({\r\n              [css.mobileMargins]: useMobileMargins,\r\n              [css.labelDisabled]: showLabelAsDisabled,\r\n            })}\r\n            htmlFor={id}\r\n          >\r\n            {label}\r\n          </label>\r\n        ) : null}\r\n        <DateInput className={inputClasses} {...inputProps} />\r\n        {showErrorMessage ? <ValidationError className={errorClasses} fieldMeta={meta} /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFieldDateInputComponent.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n  useMobileMargins: false,\r\n  showErrorMessage: true,\r\n  id: null,\r\n  label: null,\r\n  showLabelAsDisabled: false,\r\n  placeholderText: null,\r\n  onChange: null,\r\n};\r\n\r\nFieldDateInputComponent.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n  useMobileMargins: bool,\r\n  showErrorMessage: bool,\r\n  id: string,\r\n  label: string,\r\n  showLabelAsDisabled: bool,\r\n  placeholderText: string,\r\n  input: object.isRequired,\r\n  meta: object.isRequired,\r\n  onChange: func,\r\n};\r\n\r\nconst FieldDateInput = props => {\r\n  const config = useConfiguration();\r\n  const { isOutsideRange, firstDayOfWeek, ...rest } = props;\r\n\r\n  // Outside range -><- today ... today+available days -1 -><- outside range\r\n  const defaultIsOutSideRange = day => {\r\n    const endOfRange = config.stripe?.dayCountAvailableForBooking - 1;\r\n    return (\r\n      !isInclusivelyAfterDay(day, moment()) ||\r\n      !isInclusivelyBeforeDay(day, moment().add(endOfRange, 'days'))\r\n    );\r\n  };\r\n  const defaultFirstDayOfWeek = config.localization.firstDayOfWeek;\r\n  return (\r\n    <Field\r\n      component={FieldDateInputComponent}\r\n      isOutsideRange={isOutsideRange || defaultIsOutSideRange}\r\n      firstDayOfWeek={firstDayOfWeek || defaultFirstDayOfWeek}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport { DateInput };\r\nexport default FieldDateInput;\r\n"],"names":["NextMonthIcon","props","className","rootClassName","classes","classNames","css","React","width","height","viewBox","xmlns","d","fillRule","string","PropTypes","defaultProps","PreviousMonthIcon","initialDate","value","id","placeholder","disabled","required","readOnly","screenReaderInputMessage","showClearDate","customCloseIcon","showDefaultInputIcon","customInputIcon","noBorder","block","small","renderMonthText","orientation","anchorDirection","horizontalMargin","withPortal","withFullScreenPortal","appendToBody","disableScroll","initialVisibleMonth","firstDayOfWeek","numberOfMonths","keepOpenOnDateSelect","reopenPickerOnClearDate","renderCalendarInfo","hideKeyboardShortcutsPanel","daySize","isRTL","navPrev","navNext","onPrevMonthClick","onNextMonthClick","onClose","transitionDuration","renderCalendarDay","undefined","renderDayContents","day","format","enableOutsideDays","isDayBlocked","isOutsideRange","isDayHighlighted","displayFormat","monthFormat","weekDayFormat","DateInputComponent","Component","constructor","super","this","state","focused","onDateChange","bind","onFocusChange","date","selectedDate","moment","toDate","onChange","values","setState","onFocus","onBlur","render","intl","name","placeholderText","useMobileMargins","children","datePickerProps","initialMoment","Date","toString","formatMessage","screenReaderInputText","SingleDatePicker","Object","assign","injectIntl","handleChange","parentOnChange","inputOnChange","FieldDateInputComponent","label","showLabelAsDisabled","input","meta","showErrorMessage","rest","Error","touched","invalid","error","dateIsValid","hasError","inputClasses","pickerSuccess","pickerError","type","checked","restOfInput","inputProps","window","innerWidth","fieldRoot","errorClasses","mobileMargins","labelDisabled","htmlFor","DateInput","ValidationError","fieldMeta","config","useConfiguration","defaultFirstDayOfWeek","localization","Field","component","_config$stripe","endOfRange","stripe","dayCountAvailableForBooking","isInclusivelyAfterDay","isInclusivelyBeforeDay","add"],"sourceRoot":""}