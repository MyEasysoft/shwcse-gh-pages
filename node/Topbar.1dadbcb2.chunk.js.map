{"version":3,"file":"Topbar.1dadbcb2.chunk.js","mappings":"+RACA,QAAuB,qBAAvB,EAAwD,0BAAxD,EAAqI,wBAArI,EAA0K,8BAA1K,EAAmN,yBAAnN,EAA6P,+BAA7P,EAA8S,gCAA9S,EAA0Y,wBAA1Y,EAAib,6BAAjb,EAA+d,+BAA/d,EAAghB,gCAAhhB,EAA6jB,2BAA7jB,EAAymB,kEAAzmB,EAAssB,yGAAtsB,EAAy0B,mEAAz0B,EAA05C,6BAA15C,EAA68C,oCAA78C,EAAugD,oCAAvgD,EAA8jD,oCCKxjDA,EAAWC,IACf,MAAM,UAAEC,EAAS,cAAEC,GAAkBF,EAC/BG,EAAUC,IAAWF,GAAiBG,EAAkBJ,GAE9D,OACEK,IAAAA,cAAA,OACEL,UAAWE,EACXI,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,MAAM,8BAENJ,IAAAA,cAAA,KAAGK,SAAS,WACVL,IAAAA,cAAA,QAAMC,MAAM,KAAKC,OAAO,IAAII,GAAG,MAC/BN,IAAAA,cAAA,QAAMO,EAAE,IAAIN,MAAM,KAAKC,OAAO,IAAII,GAAG,MACrCN,IAAAA,cAAA,QAAMO,EAAE,KAAKN,MAAM,KAAKC,OAAO,IAAII,GAAG,OAEpC,GAIJ,OAAEE,GAAWC,IAEnBhB,EAASiB,aAAe,CACtBf,UAAW,KACXC,cAAe,MAQjB,UCjCMe,EAAajB,IACjB,MAAM,UAAEC,EAAS,cAAEC,GAAkBF,EAC/BG,EAAUC,IAAWF,GAAiBG,EAAoBJ,GAEhE,OACEK,IAAAA,cAAA,OACEL,UAAWE,EACXI,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,MAAM,8BAENJ,IAAAA,cAAA,KACEY,UAAU,wBACVC,YAAY,IACZC,KAAK,OACLT,SAAS,UACTU,cAAc,QACdC,eAAe,SAEfhB,IAAAA,cAAA,QAAMiB,EAAE,+BACRjB,IAAAA,cAAA,UAAQkB,GAAG,MAAMC,GAAG,MAAMC,EAAE,SAE1B,GAIFZ,OAAO,GAAIC,IAEnBE,EAAWD,aAAe,CACxBf,UAAW,KACXC,cAAe,MAQjB,U,cC5CA,QAAkC,0CAAlC,EAA+F,2CAA/F,EAAuJ,qCAAvJ,EAA0P,wEAA1P,EAAgV,sCAAhV,EAAqY,yCAArY,EAAkc,4CAAlc,EAA6gB,uDAA7gB,GAAylB,6CAAzlB,GAA6pB,+CAA7pB,GAA2tB,uCAA3tB,GAAixB,uCAAjxB,GAA+zB,+BAA/zB,GAAw2B,kCC0Bx2B,GAvB0ByB,IACxBrB,IAAAA,cAAA,OACEL,UAAWI,GACXE,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,MAAM,8BAENJ,IAAAA,cAAA,KACEL,UAAWI,GACXa,UAAU,wBACVC,YAAY,IACZC,KAAK,OACLT,SAAS,UACTU,cAAc,QACdC,eAAe,SAEfhB,IAAAA,cAAA,QAAMiB,EAAE,uBACRjB,IAAAA,cAAA,UAAQkB,GAAG,MAAMC,GAAG,MAAMC,EAAE,UCT5BE,GAAWC,GAAKA,EAEhBC,GAAqB9B,IACzB,MAAM,4BAAE+B,EAA2B,UAAEC,EAAS,KAAEC,EAAI,SAAEC,EAAQ,SAAEC,GAAanC,EAC7E,OACEM,IAAAA,cAAA,OAAKL,UAAW8B,GACdzB,IAAAA,cAAA,UAAQL,UAAWI,IACjBC,IAAAA,cAAA,OAAKL,UAAW+B,GACd1B,IAAAA,cAACqB,GAAiB,QAGtBrB,IAAAA,cAAC8B,EAAAA,MAAK,CACJC,KAAK,WACLC,OAAQC,IAAsB,IAArB,MAAEC,EAAK,KAAEC,GAAMF,EACtB,OACEjC,IAAAA,cAAA,QAAAoC,OAAAC,OAAA,CACE1C,UAAWiC,EAAW7B,EAAkBA,GACpCmC,EAAK,CACTI,GAAIV,EAAW,wBAA0B,iBACzC,cAAaA,EAAW,wBAA0B,iBAClDW,IAAKV,EACLW,KAAK,OACLC,YAAad,EAAKe,cAAc,CAC9BJ,GAAI,iCAENK,aAAa,QACb,IAIJ,EAIJC,GAAsBlD,IAC1B,MAAM,sBAAEmD,EAAqB,KAAElB,EAAI,SAAEC,EAAQ,SAAEC,EAAQ,iBAAEiB,GAAqBpD,EAC9E,OACEM,IAAAA,cAAC8B,EAAAA,MAAK,CACJC,KAAK,WACLgB,OAAQzB,GACRU,OAAQgB,IAAsB,IAArB,MAAEd,EAAK,KAAEC,GAAMa,EACtB,MAAM,SAAEC,KAAaC,GAAchB,EAWnC,OACElC,IAAAA,cAACmD,EAAAA,GAAyB,CACxBxD,UAAWiC,EAAW7B,EAAsB8C,EAC5CO,cAAexB,EAAW7B,EAAiBA,EAC3CsD,eAAgBzB,EAAW7B,EAAkBA,EAC7CuD,qBAAsB1B,EAAW7B,EAAwBA,GACzDwD,gCAAiC3B,EAAW7B,EAAmC,KAC/E0C,YAAad,EAAKe,cAAc,CAAEJ,GAAI,iCACtCkB,aAAc5B,EACdC,SAAUA,EACVK,MAAO,IAAKgB,EAAWD,SAfJQ,IACrBR,EAASQ,GACTX,EAAiBW,EAAM,GAcrBtB,KAAMA,GACN,GAGN,EAIN,MAAMuB,WAAkCC,EAAAA,UACtCC,YAAYlE,GACVmE,MAAMnE,GAENoE,KAAKb,SAAWa,KAAKb,SAASc,KAAKD,MAEnCA,KAAKE,SAAWF,KAAKE,SAASD,KAAKD,MAGnCA,KAAKG,YAAc,KACnBH,KAAKI,kBAAoBC,IACvBL,KAAKM,eAAiBD,CAAO,CAEjC,CAEAlB,SAASoB,GACP,MAAM,UAAEC,EAAS,SAAEN,GAAaF,KAAKpE,MACgC,IAAD6E,IAA/DC,EAAAA,EAAAA,IAAyBF,IAAcD,EAASI,gBAKnDT,EAAS,CAAEK,aAEK,QAAhBE,EAAAT,KAAKG,mBAAW,IAAAM,GAAhBA,EAAkBG,OAEtB,CAEAV,SAASW,GACP,MAAM,UAAEL,EAAS,SAAEN,GAAaF,KAAKpE,MACK,IAADkF,GAArCJ,EAAAA,EAAAA,IAAyBF,KAC3BN,EAAS,CAAEa,SAAUF,EAAOE,WAEZ,QAAhBD,EAAAd,KAAKG,mBAAW,IAAAW,GAAhBA,EAAkBF,OAEtB,CAEA1C,SACE,MAAM,SAAEgC,EAAQ,UAAEM,KAAcQ,GAAgBhB,KAAKpE,MAC/CqF,GAAmBP,EAAAA,EAAAA,IAAyBF,GAC5CU,EAASD,EAAmBjB,KAAKE,SAAWA,EAClD,OACEhE,IAAAA,cAACiF,EAAAA,KAAS7C,OAAAC,OAAA,GACJyC,EAAW,CACfd,SAAUgB,EACVhD,OAAQkD,IACN,MAAM,cACJtF,EAAa,UACbD,EAAS,iBACTwF,EAAgB,KAChBxD,EAAI,SACJC,EAAQ,aACRwD,GACEF,EACErF,EAAUC,IAAWF,EAAeD,GACpCkD,EAAwBsC,GAAoBpF,EAI5CsF,EAAeN,EAAmBK,EADdE,GAAKA,EAAEC,iBAG3B9D,EAA8B3B,IAClCC,GACA6B,EAAW7B,EAAsB8C,GAGnC,OACE7C,IAAAA,cAACwF,EAAAA,GAAI,CAAC7F,UAAWE,EAASmE,SAAUqB,EAAcI,sBAAsB,cACrEV,EACC/E,IAAAA,cAACwB,GAAkB,CACjBC,4BAA6BA,EAC7BC,UAAW5B,IAAW8B,EAAW7B,EAAiBA,GAAmBA,IACrE4B,KAAMA,EACNC,SAAUA,EACVC,SAAUiC,KAAKI,oBAGjBlE,IAAAA,cAAC4C,GAAmB,CAClBC,sBAAuBA,EACvBlB,KAAMA,EACNC,SAAUA,EACVC,SAAUiC,KAAKI,kBACfpB,iBAAkBgB,KAAKb,WAGtB,IAKjB,EAGFS,GAA0BhD,aAAe,CACvCd,cAAe,KACfD,UAAW,KACXwF,iBAAkB,KAClBvD,UAAU,GAeZ,MAEA,IAFyB8D,EAAAA,EAAAA,IAAWhC,I,0BCnMpC,SAAuB,+BAAvB,GAAgE,kCAAhE,GAA2G,iCAA3G,GAAqJ,iCAArJ,GAAiM,mCAAjM,GAAmP,uCAAnP,GAA4V,uEAA5V,GAAob,gFAApb,GAAolB,4CAAplB,GAAupB,6DAAvpB,GAA6uB,oDAA7uB,GAAuzB,8CAAvzB,GAAk3B,qCAAl3B,GAAm6B,oCAAn6B,GAAq9B,sCAAr9B,GAAogC,iCCqB9/BiC,GAAmBjG,IACvB,MAAM,gBACJkG,EAAe,YACfC,EAAW,uBACXC,EAAsB,YACtBC,EAAW,kBACXC,EAAiB,SACjBC,GACEvG,EAEEwG,GAAOC,EAAAA,GAAAA,IAAkBJ,GAE/B,IAAKH,EAAiB,CACpB,MAAMQ,EACJpG,IAAAA,cAACqG,EAAAA,GAAS,CAACtE,KAAK,aAAapC,UAAWI,IACtCC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,iCAInBiE,EACJvG,IAAAA,cAACqG,EAAAA,GAAS,CAACtE,KAAK,YAAYpC,UAAWI,IACrCC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,gCAInBkE,EACJxG,IAAAA,cAAA,QAAML,UAAWI,IACfC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,iCAAiCqC,OAAQ,CAAEyB,SAAQG,YAG5E,OACEvG,IAAAA,cAAA,OAAKL,UAAWI,IACdC,IAAAA,cAAA,OAAKL,UAAWI,IACdC,IAAAA,cAAA,OAAKL,UAAWI,IACdC,IAAAA,cAACsG,EAAAA,GAAgB,CACfhE,GAAG,wCACHqC,OAAQ,CAAE8B,UAAWzG,IAAAA,cAAA,WAAQwG,qBAInCxG,IAAAA,cAAA,OAAKL,UAAWI,IACdC,IAAAA,cAACqG,EAAAA,GAAS,CAAC1G,UAAWI,GAA0BgC,KAAK,kBACnD/B,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,sCAK/B,CAEA,MAAMoE,EACJV,EAAoB,EAClBhG,IAAAA,cAAC2G,EAAAA,GAAiB,CAAChH,UAAWI,GAAuB6G,MAAOZ,IAC1D,KAEAa,EAAcX,EAAKY,WAAWC,QAAQC,UACtCC,EAAmBC,IACvB,MAAMC,EACK,wBAATD,GAAkCE,GAAAA,EAAuBC,SAASxB,GACpE,OAAOA,IAAgBqB,GAAQC,EAAwBpH,GAAkB,IAAI,EAG/E,OACEC,IAAAA,cAAA,OAAKL,UAAWI,IACdC,IAAAA,cAACsH,EAAAA,GAAW,CAAC3H,UAAWI,GAAYmG,KAAMH,IAC1C/F,IAAAA,cAAA,OAAKL,UAAWI,IACdC,IAAAA,cAAA,QAAML,UAAWI,IACfC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,4BAA4BqC,OAAQ,CAAEkC,kBAE7D7G,IAAAA,cAACuH,EAAAA,GAAgB,CAAC3H,cAAeG,GAAkByH,QAASvB,GAC1DjG,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,iCAEvBtC,IAAAA,cAACqG,EAAAA,GAAS,CACR1G,UAAWG,IAAWC,GAAWkH,EAAiB,cAClDlF,KAAK,YACL0F,OAAQ,CAAEC,IAAK5B,EAAyB,QAAU,WAElD9F,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,+BACpBoE,GAEH1G,IAAAA,cAACqG,EAAAA,GAAS,CACR1G,UAAWG,IAAWC,GAAoBkH,EAAiB,uBAC3DlF,KAAK,sBAEL/B,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,uCAEvBtC,IAAAA,cAACqG,EAAAA,GAAS,CACR1G,UAAWG,IAAWC,GAAoBkH,EAAiB,wBAC3DlF,KAAK,uBAEL/B,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,0CAEvBtC,IAAAA,cAACqG,EAAAA,GAAS,CACR1G,UAAWG,IAAWC,GAAoBkH,EAAiB,wBAC3DlF,KAAK,uBAEL/B,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,0CAEvBtC,IAAAA,cAAA,OAAKL,UAAWI,MAElBC,IAAAA,cAAA,OAAKL,UAAWI,IACdC,IAAAA,cAACqG,EAAAA,GAAS,CAAC1G,UAAWI,GAA0BgC,KAAK,kBACnD/B,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,sCAGrB,EAIVqD,GAAiBjF,aAAe,CAAEqF,YAAa,KAAMC,kBAAmB,EAAGH,YAAa,MAExF,MAAM,KAAE8B,GAAI,KAAEC,GAAI,OAAEC,GAAQrH,OAAO,IAAIC,IAWvC,MC9IA,GAAuB,4BAAvB,GAA8D,gCAA9D,GAA2G,kCAA3G,GAAkN,mDAAlN,GAAyR,yCAAzR,GAA2Z,uFAA3Z,GAA8f,iCAA9f,GAAuiB,+EAAviB,GAAwoB,uCAAxoB,GAA2vB,wCAA3vB,GAAuzB,yCAAvzB,GAAy2B,8BAAz2B,GAA45B,0CAA55B,GAAm9B,kCAAn9B,GAAigC,iCAAjgC,GAA2iC,wCAA3iC,GAA2lC,uCAA3lC,GAAmpC,sCAAnpC,GAA+sC,qDAA/sC,GAAuxC,kDAAvxC,GAAw1C,oCAAx1C,GAA04C,mCCqBp4CqH,GAAgBpI,IACpB,MAAM,UACJC,EAAS,UACT2E,EAAS,YACTyB,EAAW,YACXF,EAAW,cACXjG,EAAa,uBACbkG,EAAsB,kBACtBE,EAAiB,KACjBrE,EAAI,gBACJiE,EAAe,SACfK,EAAQ,eACR8B,EAAc,wBACdC,GACEtI,GACGuI,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAEvCC,EAAAA,EAAAA,YAAU,KACRF,GAAW,EAAK,GACf,IAEH,MAAMG,EAAkB/D,EAAU+D,gBAC5BC,EAA4BL,GAAWrC,EACvC2C,EAAgC3C,IAAoBqC,EAEpDpI,EAAUC,IAAWF,GAAiBG,GAAUJ,GAEhD6I,EACJxI,IAAAA,cAACyI,GAAgB,CACf9I,UAAWI,GACXoF,iBAAkBpF,GAClBiE,SAAU+D,EACVW,cAAeV,EACf1D,UAAWA,IAITqE,EAAkB3C,EAAoB,EAAIhG,IAAAA,cAAA,OAAKL,UAAWI,KAA0B,KAEpF6I,EAAYN,EAChBtI,IAAAA,cAACqG,EAAAA,GAAS,CACR1G,UAAWI,GACXgC,KAAK,YACL0F,OAAQ,CAAEC,IAAK5B,EAAyB,QAAU,WAElD9F,IAAAA,cAAA,QAAML,UAAWI,IACfC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,wBACpBqG,IAGH,KAEE1B,EAAmBC,IACvB,MAAMC,EACK,wBAATD,GAAkCE,GAAAA,EAAuBC,SAASxB,GACpE,OAAOA,IAAgBqB,GAAQC,EAAwBpH,GAAkB,IAAI,EAGzE8I,EAAcP,EAClBtI,IAAAA,cAAC8I,EAAAA,GAAI,KACH9I,IAAAA,cAAC+I,EAAAA,GAAS,CAACpJ,UAAWI,GAAsBiJ,gBAAiBjJ,IAC3DC,IAAAA,cAACiJ,EAAAA,GAAM,CAACtJ,UAAWI,GAAYmG,KAAMH,EAAamD,oBAAkB,KAEtElJ,IAAAA,cAACmJ,EAAAA,GAAW,CAACxJ,UAAWI,IACtBC,IAAAA,cAACoJ,EAAAA,GAAQ,CAACC,IAAI,sBACZrJ,IAAAA,cAACqG,EAAAA,GAAS,CACR1G,UAAWG,IAAWC,GAAsBkH,EAAiB,uBAC7DlF,KAAK,sBAEL/B,IAAAA,cAAA,QAAML,UAAWI,KACjBC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,qCAGzBtC,IAAAA,cAACoJ,EAAAA,GAAQ,CAACC,IAAI,uBACZrJ,IAAAA,cAACqG,EAAAA,GAAS,CACR1G,UAAWG,IAAWC,GAAyBkH,EAAiB,wBAChElF,KAAK,uBAEL/B,IAAAA,cAAA,QAAML,UAAWI,KACjBC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,wCAGzBtC,IAAAA,cAACoJ,EAAAA,GAAQ,CAACC,IAAI,uBACZrJ,IAAAA,cAACqG,EAAAA,GAAS,CACR1G,UAAWG,IAAWC,GAAsBkH,EAAiB,wBAC7DlF,KAAK,uBAEL/B,IAAAA,cAAA,QAAML,UAAWI,KACjBC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,wCAGzBtC,IAAAA,cAACoJ,EAAAA,GAAQ,CAACC,IAAI,UACZrJ,IAAAA,cAACuH,EAAAA,GAAgB,CAAC3H,cAAeG,GAAkByH,QAASvB,GAC1DjG,IAAAA,cAAA,QAAML,UAAWI,KACjBC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,6BAK3B,KAEEgH,EAAaf,EAAgC,KACjDvI,IAAAA,cAACqG,EAAAA,GAAS,CAACtE,KAAK,aAAapC,UAAWI,IACtCC,IAAAA,cAAA,QAAML,UAAWI,IACfC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,2BAKrBiH,EAAYhB,EAAgC,KAChDvI,IAAAA,cAACqG,EAAAA,GAAS,CAACtE,KAAK,YAAYpC,UAAWI,IACrCC,IAAAA,cAAA,QAAML,UAAWI,IACfC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,0BAK3B,OACEtC,IAAAA,cAAA,OAAKL,UAAWE,GACdG,IAAAA,cAACwJ,EAAAA,GAAU,CACT7J,UAAWI,GACX0J,OAAO,UACPC,IAAK/H,EAAKe,cAAc,CAAEJ,GAAI,sBAAwB,CAAE+F,sBAEzDG,EACDxI,IAAAA,cAACqG,EAAAA,GAAS,CAAC1G,UAAWI,GAAuBgC,KAAK,kBAChD/B,IAAAA,cAAA,QAAML,UAAWI,IACfC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,kCAGxBsG,EACAC,EACAS,EACAC,EACG,EAIVzB,GAAcpH,aAAe,CAC3Bd,cAAe,KACfD,UAAW,KACXoG,YAAa,KACbF,YAAa,KACbG,kBAAmB,EACnBgC,wBAAyB,CAAC,EAC1B1D,UAAW,MAkBb,MCvJMqF,GAA8BA,CAACjK,EAAOkK,KAC1C,MAAM,QAAEC,EAAO,SAAExF,GAAa3E,GACxB,SAAEoK,EAAQ,OAAEtB,EAAM,MAAEuB,GAAU1F,EAC9B2F,EAAY,IAAAC,QAAOC,EAAAA,EAAAA,IAAU,CAAE,CAACN,GAAkB,WAAWO,EAAAA,EAAAA,IAAM3B,MACzEqB,EAAQO,KAAK,GAADH,OAAIH,GAAQG,OAAGD,GAAgBD,EAAM,EAG7CM,GAAiCA,CAAC3K,EAAOkK,KAC7C,MAAM,QAAEC,EAAO,SAAExF,GAAa3E,GACxB,SAAEoK,EAAQ,OAAEtB,EAAM,MAAEuB,GAAU1F,EAC9BiG,EAAcC,KAAOJ,EAAAA,EAAAA,IAAM3B,IAAS,CAACjH,EAAGiJ,IACrCA,IAAMZ,IAETa,GAAcP,EAAAA,EAAAA,IAAUI,GACxBN,EAAeS,EAAW,IAAAR,OAAOQ,GAAgB,GACvDZ,EAAQO,KAAK,GAADH,OAAIH,GAAQG,OAAGD,GAAgBD,EAAM,EAG7CW,GAAehL,IACnB,MAAM,KAAEiL,GAASjL,EACXG,EAAUC,IAAWC,EAAkB,CAC3C,CAACA,GAA0B4K,IAE7B,OACE3K,IAAAA,cAAA,OAAKL,UAAWE,GACdG,IAAAA,cAAA,OAAKL,UAAWI,GACdC,IAAAA,cAAA,KAAGL,UAAWI,GACZC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,0BAGrB,EAQV,MAAMsI,WAAwBjH,EAAAA,UAC5BC,YAAYlE,GACVmE,MAAMnE,GACNoE,KAAK+G,qBAAuB/G,KAAK+G,qBAAqB9G,KAAKD,MAC3DA,KAAKgH,sBAAwBhH,KAAKgH,sBAAsB/G,KAAKD,MAC7DA,KAAKiH,uBAAyBjH,KAAKiH,uBAAuBhH,KAAKD,MAC/DA,KAAKkH,wBAA0BlH,KAAKkH,wBAAwBjH,KAAKD,MACjEA,KAAKsB,aAAetB,KAAKsB,aAAarB,KAAKD,MAC3CA,KAAKmH,aAAenH,KAAKmH,aAAalH,KAAKD,KAC7C,CAEA+G,uBACElB,GAA4B7F,KAAKpE,MAAO,aAC1C,CAEAoL,wBACET,GAA+BvG,KAAKpE,MAAO,aAC7C,CAEAqL,yBACEpB,GAA4B7F,KAAKpE,MAAO,eAC1C,CAEAsL,0BACEX,GAA+BvG,KAAKpE,MAAO,eAC7C,CAEA0F,aAAaT,GACX,MAAM,oBAAEuG,GAAwBpH,KAAKpE,OAC/B,QAAEmK,EAAO,OAAEsB,EAAM,mBAAEC,GAAuBtH,KAAKpE,MAiB/C2L,EAAe,IAChBH,KAhBsBI,MACzB,IAAI9G,EAAAA,EAAAA,IAAyB2G,GAC3B,MAAO,CAAEtG,SAAgB,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQE,UAG7B,MAAM,OAAE2D,EAAM,cAAE/D,GAAwB,OAANE,QAAM,IAANA,OAAM,EAANA,EAAQN,UACpC,OAAEkH,EAAM,OAAEC,GAAW/G,EAG3B,MAAO,KAFagH,EAAAA,EAAAA,IAAcN,GAAU,CAAEI,UAAW,CAAC,EAIxDG,QAASlD,EACTgD,SACD,EAIEF,IAELzB,EAAQO,MAAKuB,EAAAA,EAAAA,IAA4B,aAAcP,EAAoB,CAAC,EAAGC,GACjF,CAEAJ,eACE,MAAM,SAAEhF,EAAQ,QAAE4D,EAAO,mBAAEuB,GAAuBtH,KAAKpE,MACvDuG,IAAW2F,MAAK,KACd,MAAMC,GAAOC,EAAAA,EAAAA,IAAgB,cAAeV,GAIxCW,EAAAA,QAAYC,IACdnC,EAAQO,KAAKyB,GACc,qBAAXI,SAChBA,OAAO5H,SAAWwH,GAGpBK,QAAQC,IAAI,aAAa,GAE7B,CAEAnK,SACE,MAAM,UACJrC,EAAS,cACTC,EAAa,iBACbwM,EAAgB,oBAChBC,EAAmB,gBACnBC,EAAe,gBACf1G,EAAe,WACf2G,EAAU,eACVC,EAAc,YACdzG,EAAW,uBACXD,EAAsB,qBACtB2G,EAAoB,YACpB5G,EAAW,kBACXG,EAAiB,SACjB0G,EAAQ,KACR/K,EAAI,SACJ0C,EAAQ,yBACRsI,EAAwB,0BACxBC,EAAyB,gCACzBC,EAA+B,2BAC/BC,EAA0B,iBAC1BC,EAAgB,OAChB5B,GACErH,KAAKpE,OAEH,WAAEsN,EAAU,aAAEC,EAAY,SAAEpI,EAAQ,QAAE6G,EAAO,OAAEH,EAAM,OAAEC,IAAWrB,EAAAA,EAAAA,IAAM9F,EAASmE,OAAQ,CAC7F0E,OAAQ,CAAC,UACTC,aAAc,CAAC,YAGXxE,EAAkB3C,EAAoB,EAAIhG,IAAAA,cAAA,OAAKL,UAAWI,IAA0B,KAEpFqN,EAAiBV,EAASzM,MA/IJ,KAgJtBoN,EAAmBD,GAAiC,SAAfJ,EACrCM,EAAqBF,GAAmC,SAAjBH,EAEvCM,EACJvN,IAAAA,cAAC2F,GAAgB,CACfC,gBAAiBA,EACjBE,uBAAwBA,EACxBC,YAAaA,EACbE,SAAUnC,KAAKmH,aACfjF,kBAAmBA,EACnBH,YAAaA,IAsBXmC,GAlB2BwF,MAC/B,IAAIhJ,EAAAA,EAAAA,IAAyB2G,GAC3B,MAAO,CAAEtG,YAOX,MAAO,CACLR,WAJ4BoH,EAAAA,EAAAA,IAAcN,GACxCO,GAAWH,GAAUC,EACrBE,GAAWF,GAGT,CACEhD,OAAQkD,EACRjH,cAAe,CAAEiH,UAASH,SAAQC,WAEpC,KACL,EAE6BgC,GAE1B3N,GAAUC,IAAWF,GAAiBG,EAAUJ,GAEtD,OACEK,IAAAA,cAAA,OAAKL,UAAWE,IACdG,IAAAA,cAACyN,EAAAA,GAAmB,CAClB7H,gBAAiBA,EACjB2G,WAAYA,EACZxG,YAAaA,EACbE,SAAUnC,KAAKmH,aACfpF,YAAaA,IAEf7F,IAAAA,cAAA,OAAKL,UAAWG,IAAWuM,GAAuBtM,EAAeuM,IAC/DtM,IAAAA,cAAC0N,EAAAA,GAAM,CACL9N,cAAeG,EACfyH,QAAS1D,KAAK+G,qBACd8C,MAAOhM,EAAKe,cAAc,CAAEJ,GAAI,qBAEhCtC,IAAAA,cAACP,EAAQ,CAACE,UAAWI,IACpB4I,GAEH3I,IAAAA,cAACwJ,EAAAA,GAAU,CAACC,OAAQ,SAAUC,IAAK/H,EAAKe,cAAc,CAAEJ,GAAI,sBAC5DtC,IAAAA,cAAC0N,EAAAA,GAAM,CACL9N,cAAeG,EACfyH,QAAS1D,KAAKiH,uBACd4C,MAAOhM,EAAKe,cAAc,CAAEJ,GAAI,uBAEhCtC,IAAAA,cAACW,EAAU,CAAChB,UAAWI,MAG3BC,IAAAA,cAAA,OAAKL,UAAWI,IAGhBC,IAAAA,cAAC4N,EAAAA,GAAK,CACJtL,GAAG,mBACHuL,mBAAoB9N,EACpB+N,OAAQT,EACRU,QAASjK,KAAKgH,sBACdkD,WAAS,EACTrB,yBAA0BA,GAEzBH,EAAiB,KAAOe,GAE3BvN,IAAAA,cAAC4N,EAAAA,GAAK,CACJtL,GAAG,qBACHuL,mBAAoB9N,EACpB+N,OAAQR,EACRS,QAASjK,KAAKkH,wBACdgD,WAAS,EACTrB,yBAA0BA,GAE1B3M,IAAAA,cAAA,OAAKL,UAAWI,GACdC,IAAAA,cAACyI,GAAgB,CACfzE,SAAUF,KAAKsB,aACfsD,cAAeV,GACfpG,UAAQ,EACR0C,UAAW6G,IAEbnL,IAAAA,cAAA,KAAGL,UAAWI,GACZC,IAAAA,cAACsG,EAAAA,GAAgB,CAAChE,GAAG,+BAI3BtC,IAAAA,cAACiO,EAAAA,GAAuB,CACtB3L,GAAG,6BACHuL,mBAAoB9N,EACpBgG,YAAaA,EACbD,uBAAwBA,EACxB2G,qBAAsBA,EACtBpI,SAAUA,EACVsI,yBAA0BA,EAC1BC,0BAA2BA,EAC3BC,gCAAiCA,EACjCC,2BAA4BA,IAG9B9M,IAAAA,cAAC0K,GAAY,CAACC,KAAMoC,IAG1B,EAGFnC,GAAgBlK,aAAe,CAC7Bf,UAAW,KACXC,cAAe,KACfwM,iBAAkB,KAClBC,oBAAqB,KACrBC,gBAAiB,KACjBtG,kBAAmB,EACnBD,YAAa,KACb0G,qBAAsB,KACtB5G,YAAa,KACbiH,2BAA4B,KAC5BP,WAAY,IAgDd,MAcM2B,IAASC,EAAAA,EAAAA,KAdQzO,IACrB,MAAMyL,GAASiD,EAAAA,EAAAA,MACThD,GAAqBiD,EAAAA,EAAAA,MACrB1M,GAAO2M,EAAAA,EAAAA,MACb,OACEtO,IAAAA,cAAC4K,GAAexI,OAAAC,OAAA,CACd8I,OAAQA,EACRC,mBAAoBA,EACpBzJ,KAAMA,GACFjC,GACJ,IAKNwO,GAAOrH,YAAc,SAErB,W","sources":["webpack://app/./src/containers/TopbarContainer/Topbar/Topbar.module.css?668a","containers/TopbarContainer/Topbar/MenuIcon.js","containers/TopbarContainer/Topbar/SearchIcon.js","webpack://app/./src/containers/TopbarContainer/Topbar/TopbarSearchForm/TopbarSearchForm.module.css?e429","containers/TopbarContainer/Topbar/TopbarSearchForm/IconSearchDesktop.js","containers/TopbarContainer/Topbar/TopbarSearchForm/TopbarSearchForm.js","webpack://app/./src/containers/TopbarContainer/Topbar/TopbarMobileMenu/TopbarMobileMenu.module.css?0f2c","containers/TopbarContainer/Topbar/TopbarMobileMenu/TopbarMobileMenu.js","webpack://app/./src/containers/TopbarContainer/Topbar/TopbarDesktop/TopbarDesktop.module.css?7282","containers/TopbarContainer/Topbar/TopbarDesktop/TopbarDesktop.js","containers/TopbarContainer/Topbar/Topbar.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Topbar_root__lgyxz\",\"container\":\"Topbar_container__N+bj2\",\"logoutButton\":\"Topbar_logoutButton__+X4jK\",\"menu\":\"Topbar_menu__PDp-p h5\",\"searchMenu\":\"Topbar_searchMenu__7xAPJ h5\",\"menuIcon\":\"Topbar_menuIcon__yIxFB\",\"searchMenuIcon\":\"Topbar_searchMenuIcon__c3n5m\",\"notificationDot\":\"Topbar_notificationDot__E4dGd\",\"notificationPop\":\"Topbar_notificationPop__6AxBr\",\"desktop\":\"Topbar_desktop__qCr9A\",\"rootMenuIcon\":\"Topbar_rootMenuIcon__g4J0w\",\"rootSearchIcon\":\"Topbar_rootSearchIcon__BeQyx\",\"searchContainer\":\"Topbar_searchContainer__Xw8na\",\"mobileHelp\":\"Topbar_mobileHelp__0AtHF\",\"modalContainer\":\"Topbar_modalContainer__zrcKv marketplaceModalInMobileBaseStyles\",\"modalContainerSearchForm\":\"Topbar_modalContainerSearchForm__jAXMQ Topbar_modalContainer__zrcKv marketplaceModalInMobileBaseStyles\",\"missingInformationModal\":\"Topbar_missingInformationModal__RviwC marketplaceModalBaseStyles\",\"modalTitle\":\"Topbar_modalTitle__scjJo marketplaceModalTitleStyles\",\"modalMessage\":\"Topbar_modalMessage__WxI56 marketplaceModalParagraphStyles\",\"email\":\"Topbar_email__-1O5B\",\"helperLink\":\"Topbar_helperLink__E-koN marketplaceModalHelperLink\",\"helperText\":\"Topbar_helperText__G16Bu marketplaceModalHelperText\",\"error\":\"Topbar_error__ANWoj marketplaceModalPasswordMargins\",\"bottomWrapper\":\"Topbar_bottomWrapper__8bJz2 marketplaceModalBottomWrapper\",\"modalIcon\":\"Topbar_modalIcon__ZcDOi marketplaceModalIconStyles\",\"genericError\":\"Topbar_genericError__xk21-\",\"genericErrorVisible\":\"Topbar_genericErrorVisible__VXj3M\",\"genericErrorContent\":\"Topbar_genericErrorContent__degYI\",\"genericErrorText\":\"Topbar_genericErrorText__liNai h5\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport css from './Topbar.module.css';\r\n\r\nconst MenuIcon = props => {\r\n  const { className, rootClassName } = props;\r\n  const classes = classNames(rootClassName || css.rootMenuIcon, className);\r\n\r\n  return (\r\n    <svg\r\n      className={classes}\r\n      width=\"18\"\r\n      height=\"12\"\r\n      viewBox=\"0 0 18 12\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <g fillRule=\"evenodd\">\r\n        <rect width=\"18\" height=\"2\" rx=\"1\" />\r\n        <rect y=\"5\" width=\"18\" height=\"2\" rx=\"1\" />\r\n        <rect y=\"10\" width=\"18\" height=\"2\" rx=\"1\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst { string } = PropTypes;\r\n\r\nMenuIcon.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n};\r\n\r\nMenuIcon.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n};\r\n\r\nexport default MenuIcon;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport css from './Topbar.module.css';\r\n\r\nconst SearchIcon = props => {\r\n  const { className, rootClassName } = props;\r\n  const classes = classNames(rootClassName || css.rootSearchIcon, className);\r\n\r\n  return (\r\n    <svg\r\n      className={classes}\r\n      width=\"18\"\r\n      height=\"18\"\r\n      viewBox=\"0 0 18 18\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <g\r\n        transform=\"matrix(-1 0 0 1 17 1)\"\r\n        strokeWidth=\"2\"\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M11.733 11.733l3.727 3.727\" />\r\n        <circle cx=\"6.4\" cy=\"6.4\" r=\"6.4\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst { string } = PropTypes;\r\n\r\nSearchIcon.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n};\r\n\r\nSearchIcon.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n};\r\n\r\nexport default SearchIcon;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mobileInputRoot\":\"TopbarSearchForm_mobileInputRoot__I7aW6\",\"desktopInputRoot\":\"TopbarSearchForm_desktopInputRoot__Bk8NC\",\"mobileIcon\":\"TopbarSearchForm_mobileIcon__kTmGC\",\"fontInput\":\"TopbarSearchForm_fontInput__Lri47\",\"mobileInput\":\"TopbarSearchForm_mobileInput__Woyp3 TopbarSearchForm_fontInput__Lri47\",\"desktopIcon\":\"TopbarSearchForm_desktopIcon__yk4Cd\",\"desktopInput\":\"TopbarSearchForm_desktopInput__MQovt p\",\"mobilePredictions\":\"TopbarSearchForm_mobilePredictions__a8SO1\",\"mobilePredictionsAttribution\":\"TopbarSearchForm_mobilePredictionsAttribution__oqKNA\",\"desktopPredictions\":\"TopbarSearchForm_desktopPredictions__WtdtD\",\"keywordSearchWrapper\":\"TopbarSearchForm_keywordSearchWrapper__CImlr\",\"searchSubmit\":\"TopbarSearchForm_searchSubmit__WYpZ4\",\"iconSvgGroup\":\"TopbarSearchForm_iconSvgGroup__xubef\",\"icon\":\"TopbarSearchForm_icon__CqGKo\",\"iconSvg\":\"TopbarSearchForm_iconSvg__7tZP5\"};","import React from 'react';\r\n\r\nimport css from './TopbarSearchForm.module.css';\r\n\r\nconst IconSearchDesktop = () => (\r\n  <svg\r\n    className={css.iconSvg}\r\n    width=\"21\"\r\n    height=\"22\"\r\n    viewBox=\"0 0 21 22\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <g\r\n      className={css.iconSvgGroup}\r\n      transform=\"matrix(-1 0 0 1 20 1)\"\r\n      strokeWidth=\"2\"\r\n      fill=\"none\"\r\n      fillRule=\"evenodd\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    >\r\n      <path d=\"M13 14l5.241 5.241\" />\r\n      <circle cx=\"7.5\" cy=\"7.5\" r=\"7.5\" />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default IconSearchDesktop;\r\n","import React, { Component } from 'react';\r\nimport { bool, func, object, string } from 'prop-types';\r\nimport { Form as FinalForm, Field } from 'react-final-form';\r\nimport classNames from 'classnames';\r\n\r\nimport { intlShape, injectIntl } from '../../../../util/reactIntl';\r\nimport { isMainSearchTypeKeywords } from '../../../../util/search';\r\n\r\nimport { Form, LocationAutocompleteInput } from '../../../../components';\r\n\r\nimport IconSearchDesktop from './IconSearchDesktop';\r\nimport css from './TopbarSearchForm.module.css';\r\n\r\nconst identity = v => v;\r\n\r\nconst KeywordSearchField = props => {\r\n  const { keywordSearchWrapperClasses, iconClass, intl, isMobile, inputRef } = props;\r\n  return (\r\n    <div className={keywordSearchWrapperClasses}>\r\n      <button className={css.searchSubmit}>\r\n        <div className={iconClass}>\r\n          <IconSearchDesktop />\r\n        </div>\r\n      </button>\r\n      <Field\r\n        name=\"keywords\"\r\n        render={({ input, meta }) => {\r\n          return (\r\n            <input\r\n              className={isMobile ? css.mobileInput : css.desktopInput}\r\n              {...input}\r\n              id={isMobile ? 'keyword-search-mobile' : 'keyword-search'}\r\n              data-testid={isMobile ? 'keyword-search-mobile' : 'keyword-search'}\r\n              ref={inputRef}\r\n              type=\"text\"\r\n              placeholder={intl.formatMessage({\r\n                id: 'TopbarSearchForm.placeholder',\r\n              })}\r\n              autoComplete=\"off\"\r\n            />\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LocationSearchField = props => {\r\n  const { desktopInputRootClass, intl, isMobile, inputRef, onLocationChange } = props;\r\n  return (\r\n    <Field\r\n      name=\"location\"\r\n      format={identity}\r\n      render={({ input, meta }) => {\r\n        const { onChange, ...restInput } = input;\r\n\r\n        // Merge the standard onChange function with custom behaviur. A better solution would\r\n        // be to use the FormSpy component from Final Form and pass this.onChange to the\r\n        // onChange prop but that breaks due to insufficient subscription handling.\r\n        // See: https://github.com/final-form/react-final-form/issues/159\r\n        const searchOnChange = value => {\r\n          onChange(value);\r\n          onLocationChange(value);\r\n        };\r\n\r\n        return (\r\n          <LocationAutocompleteInput\r\n            className={isMobile ? css.mobileInputRoot : desktopInputRootClass}\r\n            iconClassName={isMobile ? css.mobileIcon : css.desktopIcon}\r\n            inputClassName={isMobile ? css.mobileInput : css.desktopInput}\r\n            predictionsClassName={isMobile ? css.mobilePredictions : css.desktopPredictions}\r\n            predictionsAttributionClassName={isMobile ? css.mobilePredictionsAttribution : null}\r\n            placeholder={intl.formatMessage({ id: 'TopbarSearchForm.placeholder' })}\r\n            closeOnBlur={!isMobile}\r\n            inputRef={inputRef}\r\n            input={{ ...restInput, onChange: searchOnChange }}\r\n            meta={meta}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nclass TopbarSearchFormComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // onChange is used for location search\r\n    this.onChange = this.onChange.bind(this);\r\n    // onSubmit is used for keywords search\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    // Callback ref\r\n    this.searchInput = null;\r\n    this.setSearchInputRef = element => {\r\n      this.setSearchInput = element;\r\n    };\r\n  }\r\n\r\n  onChange(location) {\r\n    const { appConfig, onSubmit } = this.props;\r\n    if (!isMainSearchTypeKeywords(appConfig) && location.selectedPlace) {\r\n      // Note that we use `onSubmit` instead of the conventional\r\n      // `handleSubmit` prop for submitting. We want to autosubmit\r\n      // when a place is selected, and don't require any extra\r\n      // validations for the form.\r\n      onSubmit({ location });\r\n      // blur search input to hide software keyboard\r\n      this.searchInput?.blur();\r\n    }\r\n  }\r\n\r\n  onSubmit(values) {\r\n    const { appConfig, onSubmit } = this.props;\r\n    if (isMainSearchTypeKeywords(appConfig)) {\r\n      onSubmit({ keywords: values.keywords });\r\n      // blur search input to hide software keyboard\r\n      this.searchInput?.blur();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { onSubmit, appConfig, ...restOfProps } = this.props;\r\n    const isKeywordsSearch = isMainSearchTypeKeywords(appConfig);\r\n    const submit = isKeywordsSearch ? this.onSubmit : onSubmit;\r\n    return (\r\n      <FinalForm\r\n        {...restOfProps}\r\n        onSubmit={submit}\r\n        render={formRenderProps => {\r\n          const {\r\n            rootClassName,\r\n            className,\r\n            desktopInputRoot,\r\n            intl,\r\n            isMobile,\r\n            handleSubmit,\r\n          } = formRenderProps;\r\n          const classes = classNames(rootClassName, className);\r\n          const desktopInputRootClass = desktopInputRoot || css.desktopInputRoot;\r\n\r\n          // Location search: allow form submit only when the place has changed\r\n          const preventFormSubmit = e => e.preventDefault();\r\n          const submitFormFn = isKeywordsSearch ? handleSubmit : preventFormSubmit;\r\n\r\n          const keywordSearchWrapperClasses = classNames(\r\n            css.keywordSearchWrapper,\r\n            isMobile ? css.mobileInputRoot : desktopInputRootClass\r\n          );\r\n\r\n          return (\r\n            <Form className={classes} onSubmit={submitFormFn} enforcePagePreloadFor=\"SearchPage\">\r\n              {isKeywordsSearch ? (\r\n                <KeywordSearchField\r\n                  keywordSearchWrapperClasses={keywordSearchWrapperClasses}\r\n                  iconClass={classNames(isMobile ? css.mobileIcon : css.desktopIcon || css.icon)}\r\n                  intl={intl}\r\n                  isMobile={isMobile}\r\n                  inputRef={this.setSearchInputRef}\r\n                />\r\n              ) : (\r\n                <LocationSearchField\r\n                  desktopInputRootClass={desktopInputRootClass}\r\n                  intl={intl}\r\n                  isMobile={isMobile}\r\n                  inputRef={this.setSearchInputRef}\r\n                  onLocationChange={this.onChange}\r\n                />\r\n              )}\r\n            </Form>\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nTopbarSearchFormComponent.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n  desktopInputRoot: null,\r\n  isMobile: false,\r\n};\r\n\r\nTopbarSearchFormComponent.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n  desktopInputRoot: string,\r\n  onSubmit: func.isRequired,\r\n  isMobile: bool,\r\n  appConfig: object.isRequired,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nconst TopbarSearchForm = injectIntl(TopbarSearchFormComponent);\r\n\r\nexport default TopbarSearchForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TopbarMobileMenu_root__gpOzE\",\"content\":\"TopbarMobileMenu_content__vbUDQ\",\"footer\":\"TopbarMobileMenu_footer__6J+dF\",\"avatar\":\"TopbarMobileMenu_avatar__RUUxd\",\"greeting\":\"TopbarMobileMenu_greeting__sIwSy\",\"logoutButton\":\"TopbarMobileMenu_logoutButton__xbsXM\",\"customLinkFont\":\"TopbarMobileMenu_customLinkFont__7pJJ3\",\"inbox\":\"TopbarMobileMenu_inbox__+mBP3 TopbarMobileMenu_customLinkFont__7pJJ3\",\"navigationLink\":\"TopbarMobileMenu_navigationLink__maY5n TopbarMobileMenu_customLinkFont__7pJJ3\",\"currentPageLink\":\"TopbarMobileMenu_currentPageLink__3lLS6\",\"notificationBadge\":\"TopbarMobileMenu_notificationBadge__SpfhW\",\"createNewListingLink\":\"TopbarMobileMenu_createNewListingLink__3pz89 buttonPrimary\",\"authenticationGreeting\":\"TopbarMobileMenu_authenticationGreeting__uBowM h1\",\"authenticationLinks\":\"TopbarMobileMenu_authenticationLinks__MjSTG\",\"signupLink\":\"TopbarMobileMenu_signupLink__BCyNR\",\"loginLink\":\"TopbarMobileMenu_loginLink__rpk8g\",\"currentPage\":\"TopbarMobileMenu_currentPage__PGVKZ\",\"spacer\":\"TopbarMobileMenu_spacer__PGr7-\"};","/**\r\n *  TopbarMobileMenu prints the menu content for authenticated user or\r\n * shows login actions for those who are not authenticated.\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { ACCOUNT_SETTINGS_PAGES } from '../../../../routing/routeConfiguration';\r\nimport { FormattedMessage } from '../../../../util/reactIntl';\r\nimport { propTypes } from '../../../../util/types';\r\nimport { ensureCurrentUser } from '../../../../util/data';\r\n\r\nimport {\r\n  AvatarLarge,\r\n  InlineTextButton,\r\n  NamedLink,\r\n  NotificationBadge,\r\n} from '../../../../components';\r\n\r\nimport css from './TopbarMobileMenu.module.css';\r\n\r\nconst TopbarMobileMenu = props => {\r\n  const {\r\n    isAuthenticated,\r\n    currentPage,\r\n    currentUserHasListings,\r\n    currentUser,\r\n    notificationCount,\r\n    onLogout,\r\n  } = props;\r\n\r\n  const user = ensureCurrentUser(currentUser);\r\n\r\n  if (!isAuthenticated) {\r\n    const signup = (\r\n      <NamedLink name=\"SignupPage\" className={css.signupLink}>\r\n        <FormattedMessage id=\"TopbarMobileMenu.signupLink\" />\r\n      </NamedLink>\r\n    );\r\n\r\n    const login = (\r\n      <NamedLink name=\"LoginPage\" className={css.loginLink}>\r\n        <FormattedMessage id=\"TopbarMobileMenu.loginLink\" />\r\n      </NamedLink>\r\n    );\r\n\r\n    const signupOrLogin = (\r\n      <span className={css.authenticationLinks}>\r\n        <FormattedMessage id=\"TopbarMobileMenu.signupOrLogin\" values={{ signup, login }} />\r\n      </span>\r\n    );\r\n    return (\r\n      <div className={css.root}>\r\n        <div className={css.content}>\r\n          <div className={css.authenticationGreeting}>\r\n            <FormattedMessage\r\n              id=\"TopbarMobileMenu.unauthorizedGreeting\"\r\n              values={{ lineBreak: <br />, signupOrLogin }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={css.footer}>\r\n          <NamedLink className={css.createNewListingLink} name=\"NewListingPage\">\r\n            <FormattedMessage id=\"TopbarMobileMenu.newListingLink\" />\r\n          </NamedLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const notificationCountBadge =\r\n    notificationCount > 0 ? (\r\n      <NotificationBadge className={css.notificationBadge} count={notificationCount} />\r\n    ) : null;\r\n\r\n  const displayName = user.attributes.profile.firstName;\r\n  const currentPageClass = page => {\r\n    const isAccountSettingsPage =\r\n      page === 'AccountSettingsPage' && ACCOUNT_SETTINGS_PAGES.includes(currentPage);\r\n    return currentPage === page || isAccountSettingsPage ? css.currentPage : null;\r\n  };\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <AvatarLarge className={css.avatar} user={currentUser} />\r\n      <div className={css.content}>\r\n        <span className={css.greeting}>\r\n          <FormattedMessage id=\"TopbarMobileMenu.greeting\" values={{ displayName }} />\r\n        </span>\r\n        <InlineTextButton rootClassName={css.logoutButton} onClick={onLogout}>\r\n          <FormattedMessage id=\"TopbarMobileMenu.logoutLink\" />\r\n        </InlineTextButton>\r\n        <NamedLink\r\n          className={classNames(css.inbox, currentPageClass('InboxPage'))}\r\n          name=\"InboxPage\"\r\n          params={{ tab: currentUserHasListings ? 'sales' : 'orders' }}\r\n        >\r\n          <FormattedMessage id=\"TopbarMobileMenu.inboxLink\" />\r\n          {notificationCountBadge}\r\n        </NamedLink>\r\n        <NamedLink\r\n          className={classNames(css.navigationLink, currentPageClass('ManageListingsPage'))}\r\n          name=\"ManageListingsPage\"\r\n        >\r\n          <FormattedMessage id=\"TopbarMobileMenu.yourListingsLink\" />\r\n        </NamedLink>\r\n        <NamedLink\r\n          className={classNames(css.navigationLink, currentPageClass('ProfileSettingsPage'))}\r\n          name=\"ProfileSettingsPage\"\r\n        >\r\n          <FormattedMessage id=\"TopbarMobileMenu.profileSettingsLink\" />\r\n        </NamedLink>\r\n        <NamedLink\r\n          className={classNames(css.navigationLink, currentPageClass('AccountSettingsPage'))}\r\n          name=\"AccountSettingsPage\"\r\n        >\r\n          <FormattedMessage id=\"TopbarMobileMenu.accountSettingsLink\" />\r\n        </NamedLink>\r\n        <div className={css.spacer} />\r\n      </div>\r\n      <div className={css.footer}>\r\n        <NamedLink className={css.createNewListingLink} name=\"NewListingPage\">\r\n          <FormattedMessage id=\"TopbarMobileMenu.newListingLink\" />\r\n        </NamedLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTopbarMobileMenu.defaultProps = { currentUser: null, notificationCount: 0, currentPage: null };\r\n\r\nconst { bool, func, number, string } = PropTypes;\r\n\r\nTopbarMobileMenu.propTypes = {\r\n  isAuthenticated: bool.isRequired,\r\n  currentUserHasListings: bool.isRequired,\r\n  currentUser: propTypes.currentUser,\r\n  currentPage: string,\r\n  notificationCount: number,\r\n  onLogout: func.isRequired,\r\n};\r\n\r\nexport default TopbarMobileMenu;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TopbarDesktop_root__B36f+\",\"logoLink\":\"TopbarDesktop_logoLink__ogiVG\",\"searchLink\":\"TopbarDesktop_searchLink__wfyNG\",\"search\":\"TopbarDesktop_search__vYs1e\",\"topbarSearchWithLeftPadding\":\"TopbarDesktop_topbarSearchWithLeftPadding__ZZM-+\",\"createListingLink\":\"TopbarDesktop_createListingLink__vC+Oe\",\"topbarDesktopLabel\":\"TopbarDesktop_topbarDesktopLabel__+vIif textSmall\",\"createListing\":\"TopbarDesktop_createListing__zaYlu TopbarDesktop_topbarDesktopLabel__+vIif textSmall\",\"inboxLink\":\"TopbarDesktop_inboxLink__3BFpR\",\"inbox\":\"TopbarDesktop_inbox__U7n3v TopbarDesktop_topbarDesktopLabel__+vIif textSmall\",\"notificationDot\":\"TopbarDesktop_notificationDot__iaN5a\",\"notificationPop\":\"TopbarDesktop_notificationPop__dIezg\",\"profileMenuLabel\":\"TopbarDesktop_profileMenuLabel__+lOjB\",\"profileMenuIsOpen\":\"TopbarDesktop_profileMenuIsOpen__edPhA\",\"avatar\":\"TopbarDesktop_avatar__W4Z1O\",\"profileMenuContent\":\"TopbarDesktop_profileMenuContent__VIpRD\",\"signupLink\":\"TopbarDesktop_signupLink__lpy4A\",\"loginLink\":\"TopbarDesktop_loginLink__Bv9w3\",\"signup\":\"TopbarDesktop_signup__nw1cb textSmall\",\"login\":\"TopbarDesktop_login__NDym1 textSmall\",\"menuItemBorder\":\"TopbarDesktop_menuItemBorder__Gx08m\",\"profileSettingsLink\":\"TopbarDesktop_profileSettingsLink__Yiw+w textSmall\",\"yourListingsLink\":\"TopbarDesktop_yourListingsLink__--vkU textSmall\",\"logoutButton\":\"TopbarDesktop_logoutButton__M4Ij9\",\"currentPage\":\"TopbarDesktop_currentPage__7H3Cj\"};","import React, { useState, useEffect } from 'react';\r\nimport { bool, func, object, number, string } from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { FormattedMessage, intlShape } from '../../../../util/reactIntl';\r\nimport { ACCOUNT_SETTINGS_PAGES } from '../../../../routing/routeConfiguration';\r\nimport { propTypes } from '../../../../util/types';\r\nimport {\r\n  Avatar,\r\n  InlineTextButton,\r\n  LinkedLogo,\r\n  Menu,\r\n  MenuLabel,\r\n  MenuContent,\r\n  MenuItem,\r\n  NamedLink,\r\n} from '../../../../components';\r\n\r\nimport TopbarSearchForm from '../TopbarSearchForm/TopbarSearchForm';\r\n\r\nimport css from './TopbarDesktop.module.css';\r\n\r\nconst TopbarDesktop = props => {\r\n  const {\r\n    className,\r\n    appConfig,\r\n    currentUser,\r\n    currentPage,\r\n    rootClassName,\r\n    currentUserHasListings,\r\n    notificationCount,\r\n    intl,\r\n    isAuthenticated,\r\n    onLogout,\r\n    onSearchSubmit,\r\n    initialSearchFormValues,\r\n  } = props;\r\n  const [mounted, setMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  const marketplaceName = appConfig.marketplaceName;\r\n  const authenticatedOnClientSide = mounted && isAuthenticated;\r\n  const isAuthenticatedOrJustHydrated = isAuthenticated || !mounted;\r\n\r\n  const classes = classNames(rootClassName || css.root, className);\r\n\r\n  const search = (\r\n    <TopbarSearchForm\r\n      className={css.searchLink}\r\n      desktopInputRoot={css.topbarSearchWithLeftPadding}\r\n      onSubmit={onSearchSubmit}\r\n      initialValues={initialSearchFormValues}\r\n      appConfig={appConfig}\r\n    />\r\n  );\r\n\r\n  const notificationDot = notificationCount > 0 ? <div className={css.notificationDot} /> : null;\r\n\r\n  const inboxLink = authenticatedOnClientSide ? (\r\n    <NamedLink\r\n      className={css.inboxLink}\r\n      name=\"InboxPage\"\r\n      params={{ tab: currentUserHasListings ? 'sales' : 'orders' }}\r\n    >\r\n      <span className={css.inbox}>\r\n        <FormattedMessage id=\"TopbarDesktop.inbox\" />\r\n        {notificationDot}\r\n      </span>\r\n    </NamedLink>\r\n  ) : null;\r\n\r\n  const currentPageClass = page => {\r\n    const isAccountSettingsPage =\r\n      page === 'AccountSettingsPage' && ACCOUNT_SETTINGS_PAGES.includes(currentPage);\r\n    return currentPage === page || isAccountSettingsPage ? css.currentPage : null;\r\n  };\r\n\r\n  const profileMenu = authenticatedOnClientSide ? (\r\n    <Menu>\r\n      <MenuLabel className={css.profileMenuLabel} isOpenClassName={css.profileMenuIsOpen}>\r\n        <Avatar className={css.avatar} user={currentUser} disableProfileLink />\r\n      </MenuLabel>\r\n      <MenuContent className={css.profileMenuContent}>\r\n        <MenuItem key=\"ManageListingsPage\">\r\n          <NamedLink\r\n            className={classNames(css.yourListingsLink, currentPageClass('ManageListingsPage'))}\r\n            name=\"ManageListingsPage\"\r\n          >\r\n            <span className={css.menuItemBorder} />\r\n            <FormattedMessage id=\"TopbarDesktop.yourListingsLink\" />\r\n          </NamedLink>\r\n        </MenuItem>\r\n        <MenuItem key=\"ProfileSettingsPage\">\r\n          <NamedLink\r\n            className={classNames(css.profileSettingsLink, currentPageClass('ProfileSettingsPage'))}\r\n            name=\"ProfileSettingsPage\"\r\n          >\r\n            <span className={css.menuItemBorder} />\r\n            <FormattedMessage id=\"TopbarDesktop.profileSettingsLink\" />\r\n          </NamedLink>\r\n        </MenuItem>\r\n        <MenuItem key=\"AccountSettingsPage\">\r\n          <NamedLink\r\n            className={classNames(css.yourListingsLink, currentPageClass('AccountSettingsPage'))}\r\n            name=\"AccountSettingsPage\"\r\n          >\r\n            <span className={css.menuItemBorder} />\r\n            <FormattedMessage id=\"TopbarDesktop.accountSettingsLink\" />\r\n          </NamedLink>\r\n        </MenuItem>\r\n        <MenuItem key=\"logout\">\r\n          <InlineTextButton rootClassName={css.logoutButton} onClick={onLogout}>\r\n            <span className={css.menuItemBorder} />\r\n            <FormattedMessage id=\"TopbarDesktop.logout\" />\r\n          </InlineTextButton>\r\n        </MenuItem>\r\n      </MenuContent>\r\n    </Menu>\r\n  ) : null;\r\n\r\n  const signupLink = isAuthenticatedOrJustHydrated ? null : (\r\n    <NamedLink name=\"SignupPage\" className={css.signupLink}>\r\n      <span className={css.signup}>\r\n        <FormattedMessage id=\"TopbarDesktop.signup\" />\r\n      </span>\r\n    </NamedLink>\r\n  );\r\n\r\n  const loginLink = isAuthenticatedOrJustHydrated ? null : (\r\n    <NamedLink name=\"LoginPage\" className={css.loginLink}>\r\n      <span className={css.login}>\r\n        <FormattedMessage id=\"TopbarDesktop.login\" />\r\n      </span>\r\n    </NamedLink>\r\n  );\r\n\r\n  return (\r\n    <nav className={classes}>\r\n      <LinkedLogo\r\n        className={css.logoLink}\r\n        layout=\"desktop\"\r\n        alt={intl.formatMessage({ id: 'TopbarDesktop.logo' }, { marketplaceName })}\r\n      />\r\n      {search}\r\n      <NamedLink className={css.createListingLink} name=\"NewListingPage\">\r\n        <span className={css.createListing}>\r\n          <FormattedMessage id=\"TopbarDesktop.createListing\" />\r\n        </span>\r\n      </NamedLink>\r\n      {inboxLink}\r\n      {profileMenu}\r\n      {signupLink}\r\n      {loginLink}\r\n    </nav>\r\n  );\r\n};\r\n\r\nTopbarDesktop.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n  currentUser: null,\r\n  currentPage: null,\r\n  notificationCount: 0,\r\n  initialSearchFormValues: {},\r\n  appConfig: null,\r\n};\r\n\r\nTopbarDesktop.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n  currentUserHasListings: bool.isRequired,\r\n  currentUser: propTypes.currentUser,\r\n  currentPage: string,\r\n  isAuthenticated: bool.isRequired,\r\n  onLogout: func.isRequired,\r\n  notificationCount: number,\r\n  onSearchSubmit: func.isRequired,\r\n  initialSearchFormValues: object,\r\n  intl: intlShape.isRequired,\r\n  appConfig: object,\r\n};\r\n\r\nexport default TopbarDesktop;\r\n","import React, { Component } from 'react';\r\nimport { array, arrayOf, bool, func, number, object, shape, string } from 'prop-types';\r\nimport pickBy from 'lodash/pickBy';\r\nimport classNames from 'classnames';\r\n\r\nimport appSettings from '../../../config/settings';\r\nimport { useConfiguration } from '../../../context/configurationContext';\r\nimport { useRouteConfiguration } from '../../../context/routeConfigurationContext';\r\n\r\nimport { FormattedMessage, intlShape, useIntl } from '../../../util/reactIntl';\r\nimport { isMainSearchTypeKeywords, isOriginInUse } from '../../../util/search';\r\nimport { withViewport } from '../../../util/uiHelpers';\r\nimport { parse, stringify } from '../../../util/urlHelpers';\r\nimport { createResourceLocatorString, pathByRouteName } from '../../../util/routes';\r\nimport { propTypes } from '../../../util/types';\r\nimport {\r\n  Button,\r\n  LimitedAccessBanner,\r\n  LinkedLogo,\r\n  Modal,\r\n  ModalMissingInformation,\r\n  NamedLink,\r\n} from '../../../components';\r\n\r\nimport MenuIcon from './MenuIcon';\r\nimport SearchIcon from './SearchIcon';\r\nimport TopbarSearchForm from './TopbarSearchForm/TopbarSearchForm';\r\nimport TopbarMobileMenu from './TopbarMobileMenu/TopbarMobileMenu';\r\nimport TopbarDesktop from './TopbarDesktop/TopbarDesktop';\r\n\r\nimport css from './Topbar.module.css';\r\n\r\nconst MAX_MOBILE_SCREEN_WIDTH = 1024;\r\n\r\nconst redirectToURLWithModalState = (props, modalStateParam) => {\r\n  const { history, location } = props;\r\n  const { pathname, search, state } = location;\r\n  const searchString = `?${stringify({ [modalStateParam]: 'open', ...parse(search) })}`;\r\n  history.push(`${pathname}${searchString}`, state);\r\n};\r\n\r\nconst redirectToURLWithoutModalState = (props, modalStateParam) => {\r\n  const { history, location } = props;\r\n  const { pathname, search, state } = location;\r\n  const queryParams = pickBy(parse(search), (v, k) => {\r\n    return k !== modalStateParam;\r\n  });\r\n  const stringified = stringify(queryParams);\r\n  const searchString = stringified ? `?${stringified}` : '';\r\n  history.push(`${pathname}${searchString}`, state);\r\n};\r\n\r\nconst GenericError = props => {\r\n  const { show } = props;\r\n  const classes = classNames(css.genericError, {\r\n    [css.genericErrorVisible]: show,\r\n  });\r\n  return (\r\n    <div className={classes}>\r\n      <div className={css.genericErrorContent}>\r\n        <p className={css.genericErrorText}>\r\n          <FormattedMessage id=\"Topbar.genericError\" />\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGenericError.propTypes = {\r\n  show: bool.isRequired,\r\n};\r\n\r\nclass TopbarComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMobileMenuOpen = this.handleMobileMenuOpen.bind(this);\r\n    this.handleMobileMenuClose = this.handleMobileMenuClose.bind(this);\r\n    this.handleMobileSearchOpen = this.handleMobileSearchOpen.bind(this);\r\n    this.handleMobileSearchClose = this.handleMobileSearchClose.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n  }\r\n\r\n  handleMobileMenuOpen() {\r\n    redirectToURLWithModalState(this.props, 'mobilemenu');\r\n  }\r\n\r\n  handleMobileMenuClose() {\r\n    redirectToURLWithoutModalState(this.props, 'mobilemenu');\r\n  }\r\n\r\n  handleMobileSearchOpen() {\r\n    redirectToURLWithModalState(this.props, 'mobilesearch');\r\n  }\r\n\r\n  handleMobileSearchClose() {\r\n    redirectToURLWithoutModalState(this.props, 'mobilesearch');\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    const { currentSearchParams } = this.props;\r\n    const { history, config, routeConfiguration } = this.props;\r\n\r\n    const topbarSearchParams = () => {\r\n      if (isMainSearchTypeKeywords(config)) {\r\n        return { keywords: values?.keywords };\r\n      }\r\n      // topbar search defaults to 'location' search\r\n      const { search, selectedPlace } = values?.location;\r\n      const { origin, bounds } = selectedPlace;\r\n      const originMaybe = isOriginInUse(config) ? { origin } : {};\r\n\r\n      return {\r\n        ...originMaybe,\r\n        address: search,\r\n        bounds,\r\n      };\r\n    };\r\n    const searchParams = {\r\n      ...currentSearchParams,\r\n      ...topbarSearchParams(),\r\n    };\r\n    history.push(createResourceLocatorString('SearchPage', routeConfiguration, {}, searchParams));\r\n  }\r\n\r\n  handleLogout() {\r\n    const { onLogout, history, routeConfiguration } = this.props;\r\n    onLogout().then(() => {\r\n      const path = pathByRouteName('LandingPage', routeConfiguration);\r\n\r\n      // In production we ensure that data is really lost,\r\n      // but in development mode we use stored values for debugging\r\n      if (appSettings.dev) {\r\n        history.push(path);\r\n      } else if (typeof window !== 'undefined') {\r\n        window.location = path;\r\n      }\r\n\r\n      console.log('logged out'); // eslint-disable-line\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      rootClassName,\r\n      desktopClassName,\r\n      mobileRootClassName,\r\n      mobileClassName,\r\n      isAuthenticated,\r\n      authScopes,\r\n      authInProgress,\r\n      currentUser,\r\n      currentUserHasListings,\r\n      currentUserHasOrders,\r\n      currentPage,\r\n      notificationCount,\r\n      viewport,\r\n      intl,\r\n      location,\r\n      onManageDisableScrolling,\r\n      onResendVerificationEmail,\r\n      sendVerificationEmailInProgress,\r\n      sendVerificationEmailError,\r\n      showGenericError,\r\n      config,\r\n    } = this.props;\r\n\r\n    const { mobilemenu, mobilesearch, keywords, address, origin, bounds } = parse(location.search, {\r\n      latlng: ['origin'],\r\n      latlngBounds: ['bounds'],\r\n    });\r\n\r\n    const notificationDot = notificationCount > 0 ? <div className={css.notificationDot} /> : null;\r\n\r\n    const isMobileLayout = viewport.width < MAX_MOBILE_SCREEN_WIDTH;\r\n    const isMobileMenuOpen = isMobileLayout && mobilemenu === 'open';\r\n    const isMobileSearchOpen = isMobileLayout && mobilesearch === 'open';\r\n\r\n    const mobileMenu = (\r\n      <TopbarMobileMenu\r\n        isAuthenticated={isAuthenticated}\r\n        currentUserHasListings={currentUserHasListings}\r\n        currentUser={currentUser}\r\n        onLogout={this.handleLogout}\r\n        notificationCount={notificationCount}\r\n        currentPage={currentPage}\r\n      />\r\n    );\r\n\r\n    const topbarSearcInitialValues = () => {\r\n      if (isMainSearchTypeKeywords(config)) {\r\n        return { keywords };\r\n      }\r\n\r\n      // Only render current search if full place object is available in the URL params\r\n      const locationFieldsPresent = isOriginInUse(config)\r\n        ? address && origin && bounds\r\n        : address && bounds;\r\n      return {\r\n        location: locationFieldsPresent\r\n          ? {\r\n              search: address,\r\n              selectedPlace: { address, origin, bounds },\r\n            }\r\n          : null,\r\n      };\r\n    };\r\n    const initialSearchFormValues = topbarSearcInitialValues();\r\n\r\n    const classes = classNames(rootClassName || css.root, className);\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <LimitedAccessBanner\r\n          isAuthenticated={isAuthenticated}\r\n          authScopes={authScopes}\r\n          currentUser={currentUser}\r\n          onLogout={this.handleLogout}\r\n          currentPage={currentPage}\r\n        />\r\n        <div className={classNames(mobileRootClassName || css.container, mobileClassName)}>\r\n          <Button\r\n            rootClassName={css.menu}\r\n            onClick={this.handleMobileMenuOpen}\r\n            title={intl.formatMessage({ id: 'Topbar.menuIcon' })}\r\n          >\r\n            <MenuIcon className={css.menuIcon} />\r\n            {notificationDot}\r\n          </Button>\r\n          <LinkedLogo layout={'mobile'} alt={intl.formatMessage({ id: 'Topbar.logoIcon' })} />\r\n          <Button\r\n            rootClassName={css.searchMenu}\r\n            onClick={this.handleMobileSearchOpen}\r\n            title={intl.formatMessage({ id: 'Topbar.searchIcon' })}\r\n          >\r\n            <SearchIcon className={css.searchMenuIcon} />\r\n          </Button>\r\n        </div>\r\n        <div className={css.desktop}>\r\n         \r\n        </div>\r\n        <Modal\r\n          id=\"TopbarMobileMenu\"\r\n          containerClassName={css.modalContainer}\r\n          isOpen={isMobileMenuOpen}\r\n          onClose={this.handleMobileMenuClose}\r\n          usePortal\r\n          onManageDisableScrolling={onManageDisableScrolling}\r\n        >\r\n          {authInProgress ? null : mobileMenu}\r\n        </Modal>\r\n        <Modal\r\n          id=\"TopbarMobileSearch\"\r\n          containerClassName={css.modalContainerSearchForm}\r\n          isOpen={isMobileSearchOpen}\r\n          onClose={this.handleMobileSearchClose}\r\n          usePortal\r\n          onManageDisableScrolling={onManageDisableScrolling}\r\n        >\r\n          <div className={css.searchContainer}>\r\n            <TopbarSearchForm\r\n              onSubmit={this.handleSubmit}\r\n              initialValues={initialSearchFormValues}\r\n              isMobile\r\n              appConfig={config}\r\n            />\r\n            <p className={css.mobileHelp}>\r\n              <FormattedMessage id=\"Topbar.mobileSearchHelp\" />\r\n            </p>\r\n          </div>\r\n        </Modal>\r\n        <ModalMissingInformation\r\n          id=\"MissingInformationReminder\"\r\n          containerClassName={css.missingInformationModal}\r\n          currentUser={currentUser}\r\n          currentUserHasListings={currentUserHasListings}\r\n          currentUserHasOrders={currentUserHasOrders}\r\n          location={location}\r\n          onManageDisableScrolling={onManageDisableScrolling}\r\n          onResendVerificationEmail={onResendVerificationEmail}\r\n          sendVerificationEmailInProgress={sendVerificationEmailInProgress}\r\n          sendVerificationEmailError={sendVerificationEmailError}\r\n        />\r\n\r\n        <GenericError show={showGenericError} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTopbarComponent.defaultProps = {\r\n  className: null,\r\n  rootClassName: null,\r\n  desktopClassName: null,\r\n  mobileRootClassName: null,\r\n  mobileClassName: null,\r\n  notificationCount: 0,\r\n  currentUser: null,\r\n  currentUserHasOrders: null,\r\n  currentPage: null,\r\n  sendVerificationEmailError: null,\r\n  authScopes: [],\r\n};\r\n\r\nTopbarComponent.propTypes = {\r\n  className: string,\r\n  rootClassName: string,\r\n  desktopClassName: string,\r\n  mobileRootClassName: string,\r\n  mobileClassName: string,\r\n  isAuthenticated: bool.isRequired,\r\n  authScopes: array,\r\n  authInProgress: bool.isRequired,\r\n  currentUser: propTypes.currentUser,\r\n  currentUserHasListings: bool.isRequired,\r\n  currentUserHasOrders: bool,\r\n  currentPage: string,\r\n  notificationCount: number,\r\n  onLogout: func.isRequired,\r\n  onManageDisableScrolling: func.isRequired,\r\n  onResendVerificationEmail: func.isRequired,\r\n  sendVerificationEmailInProgress: bool.isRequired,\r\n  sendVerificationEmailError: propTypes.error,\r\n  showGenericError: bool.isRequired,\r\n\r\n  // These are passed from Page to keep Topbar rendering aware of location changes\r\n  history: shape({\r\n    push: func.isRequired,\r\n  }).isRequired,\r\n  location: shape({\r\n    search: string.isRequired,\r\n  }).isRequired,\r\n\r\n  // from withViewport\r\n  viewport: shape({\r\n    width: number.isRequired,\r\n    height: number.isRequired,\r\n  }).isRequired,\r\n\r\n  // from useIntl\r\n  intl: intlShape.isRequired,\r\n\r\n  // from useConfiguration\r\n  config: object.isRequired,\r\n\r\n  // from useRouteConfiguration\r\n  routeConfiguration: arrayOf(propTypes.route).isRequired,\r\n};\r\n\r\nconst EnhancedTopbar = props => {\r\n  const config = useConfiguration();\r\n  const routeConfiguration = useRouteConfiguration();\r\n  const intl = useIntl();\r\n  return (\r\n    <TopbarComponent\r\n      config={config}\r\n      routeConfiguration={routeConfiguration}\r\n      intl={intl}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst Topbar = withViewport(EnhancedTopbar);\r\nTopbar.displayName = 'Topbar';\r\n\r\nexport default Topbar;\r\n"],"names":["MenuIcon","props","className","rootClassName","classes","classNames","css","React","width","height","viewBox","xmlns","fillRule","rx","y","string","PropTypes","defaultProps","SearchIcon","transform","strokeWidth","fill","strokeLinecap","strokeLinejoin","d","cx","cy","r","IconSearchDesktop","identity","v","KeywordSearchField","keywordSearchWrapperClasses","iconClass","intl","isMobile","inputRef","Field","name","render","_ref","input","meta","Object","assign","id","ref","type","placeholder","formatMessage","autoComplete","LocationSearchField","desktopInputRootClass","onLocationChange","format","_ref2","onChange","restInput","LocationAutocompleteInput","iconClassName","inputClassName","predictionsClassName","predictionsAttributionClassName","closeOnBlur","value","TopbarSearchFormComponent","Component","constructor","super","this","bind","onSubmit","searchInput","setSearchInputRef","element","setSearchInput","location","appConfig","_this$searchInput","isMainSearchTypeKeywords","selectedPlace","blur","values","_this$searchInput2","keywords","restOfProps","isKeywordsSearch","submit","FinalForm","formRenderProps","desktopInputRoot","handleSubmit","submitFormFn","e","preventDefault","Form","enforcePagePreloadFor","injectIntl","TopbarMobileMenu","isAuthenticated","currentPage","currentUserHasListings","currentUser","notificationCount","onLogout","user","ensureCurrentUser","signup","NamedLink","FormattedMessage","login","signupOrLogin","lineBreak","notificationCountBadge","NotificationBadge","count","displayName","attributes","profile","firstName","currentPageClass","page","isAccountSettingsPage","ACCOUNT_SETTINGS_PAGES","includes","AvatarLarge","InlineTextButton","onClick","params","tab","bool","func","number","TopbarDesktop","onSearchSubmit","initialSearchFormValues","mounted","setMounted","useState","useEffect","marketplaceName","authenticatedOnClientSide","isAuthenticatedOrJustHydrated","search","TopbarSearchForm","initialValues","notificationDot","inboxLink","profileMenu","Menu","MenuLabel","isOpenClassName","Avatar","disableProfileLink","MenuContent","MenuItem","key","signupLink","loginLink","LinkedLogo","layout","alt","redirectToURLWithModalState","modalStateParam","history","pathname","state","searchString","concat","stringify","parse","push","redirectToURLWithoutModalState","queryParams","pickBy","k","stringified","GenericError","show","TopbarComponent","handleMobileMenuOpen","handleMobileMenuClose","handleMobileSearchOpen","handleMobileSearchClose","handleLogout","currentSearchParams","config","routeConfiguration","searchParams","topbarSearchParams","origin","bounds","isOriginInUse","address","createResourceLocatorString","then","path","pathByRouteName","appSettings","dev","window","console","log","desktopClassName","mobileRootClassName","mobileClassName","authScopes","authInProgress","currentUserHasOrders","viewport","onManageDisableScrolling","onResendVerificationEmail","sendVerificationEmailInProgress","sendVerificationEmailError","showGenericError","mobilemenu","mobilesearch","latlng","latlngBounds","isMobileLayout","isMobileMenuOpen","isMobileSearchOpen","mobileMenu","topbarSearcInitialValues","LimitedAccessBanner","Button","title","Modal","containerClassName","isOpen","onClose","usePortal","ModalMissingInformation","Topbar","withViewport","useConfiguration","useRouteConfiguration","useIntl"],"sourceRoot":""}