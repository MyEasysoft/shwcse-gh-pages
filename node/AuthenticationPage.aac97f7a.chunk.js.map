{"version":3,"file":"AuthenticationPage.aac97f7a.chunk.js","mappings":"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","sources":["webpack://app/./src/containers/AuthenticationPage/ConfirmSignupForm/ConfirmSignupForm.module.css?ca24","containers/AuthenticationPage/ConfirmSignupForm/ConfirmSignupForm.js","webpack://app/./src/containers/AuthenticationPage/AuthenticationPage.module.css?c3a7","containers/AuthenticationPage/EmailVerificationInfo.js","containers/AuthenticationPage/socialLoginLogos.js","containers/AuthenticationPage/AuthenticationPage.js","webpack://app/./src/containers/AuthenticationPage/LoginForm/LoginForm.module.css?d574","containers/AuthenticationPage/LoginForm/LoginForm.js","webpack://app/./src/containers/AuthenticationPage/SignupForm/SignupForm.module.css?d635","containers/AuthenticationPage/SignupForm/SignupForm.js","webpack://app/./src/containers/AuthenticationPage/TermsAndConditions/TermsAndConditions.module.css?a3e9","containers/AuthenticationPage/TermsAndConditions/TermsAndConditions.js","webpack://app/./src/containers/PageBuilder/Primitives/Heading/Heading.module.css?122e","containers/PageBuilder/Primitives/Heading/Heading.js","containers/PrivacyPolicyPage/FallbackPage.js","containers/PrivacyPolicyPage/PrivacyPolicyPage.js","containers/TermsOfServicePage/FallbackPage.js","containers/TermsOfServicePage/TermsOfServicePage.js","util/string.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ConfirmSignupForm_root__QPzC4 marketplaceModalFormRootStyles\",\"name\":\"ConfirmSignupForm_name__sQdEH\",\"firstNameRoot\":\"ConfirmSignupForm_firstNameRoot__nefy6\",\"lastNameRoot\":\"ConfirmSignupForm_lastNameRoot__e+XtV\",\"password\":\"ConfirmSignupForm_password__cx5L0 marketplaceModalPasswordMargins\",\"bottomWrapper\":\"ConfirmSignupForm_bottomWrapper__Rq4C6 marketplaceModalBottomWrapper\"};","import React from 'react';\r\nimport { bool, node } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { Form as FinalForm } from 'react-final-form';\r\nimport arrayMutators from 'final-form-arrays';\r\nimport classNames from 'classnames';\r\n\r\nimport { FormattedMessage, injectIntl, intlShape } from '../../../util/reactIntl';\r\nimport * as validators from '../../../util/validators';\r\nimport { Form, PrimaryButton, FieldTextInput } from '../../../components';\r\n\r\nimport css from './ConfirmSignupForm.module.css';\r\n\r\nconst ConfirmSignupFormComponent = props => (\r\n  <FinalForm\r\n    {...props}\r\n    mutators={{ ...arrayMutators }}\r\n    render={formRenderProps => {\r\n      const {\r\n        rootClassName,\r\n        className,\r\n        formId,\r\n        handleSubmit,\r\n        inProgress,\r\n        invalid,\r\n        intl,\r\n        termsAndConditions,\r\n        authInfo,\r\n        idp,\r\n      } = formRenderProps;\r\n\r\n      // email\r\n      const emailRequired = validators.required(\r\n        intl.formatMessage({\r\n          id: 'ConfirmSignupForm.emailRequired',\r\n        })\r\n      );\r\n      const emailValid = validators.emailFormatValid(\r\n        intl.formatMessage({\r\n          id: 'ConfirmSignupForm.emailInvalid',\r\n        })\r\n      );\r\n\r\n      const classes = classNames(rootClassName || css.root, className);\r\n      const submitInProgress = inProgress;\r\n      const submitDisabled = invalid || submitInProgress;\r\n\r\n      // If authInfo is not available we should not show the ConfirmForm\r\n      if (!authInfo) {\r\n        return;\r\n      }\r\n\r\n      // Initial values from idp provider\r\n      const { email, firstName, lastName } = authInfo;\r\n\r\n      return (\r\n        <Form className={classes} onSubmit={handleSubmit}>\r\n          <div>\r\n            <FieldTextInput\r\n              type=\"email\"\r\n              id={formId ? `${formId}.email` : 'email'}\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              label={intl.formatMessage({\r\n                id: 'ConfirmSignupForm.emailLabel',\r\n              })}\r\n              placeholder={intl.formatMessage({\r\n                id: 'ConfirmSignupForm.emailPlaceholder',\r\n              })}\r\n              initialValue={email}\r\n              validate={validators.composeValidators(emailRequired, emailValid)}\r\n            />\r\n            <div className={css.name}>\r\n              <FieldTextInput\r\n                className={css.firstNameRoot}\r\n                type=\"text\"\r\n                id={formId ? `${formId}.firstName` : 'firstName'}\r\n                name=\"firstName\"\r\n                autoComplete=\"given-name\"\r\n                label={intl.formatMessage({\r\n                  id: 'ConfirmSignupForm.firstNameLabel',\r\n                })}\r\n                placeholder={intl.formatMessage({\r\n                  id: 'ConfirmSignupForm.firstNamePlaceholder',\r\n                })}\r\n                initialValue={firstName}\r\n                validate={validators.required(\r\n                  intl.formatMessage({\r\n                    id: 'ConfirmSignupForm.firstNameRequired',\r\n                  })\r\n                )}\r\n              />\r\n              <FieldTextInput\r\n                className={css.lastNameRoot}\r\n                type=\"text\"\r\n                id={formId ? `${formId}.lastName` : 'lastName'}\r\n                name=\"lastName\"\r\n                autoComplete=\"family-name\"\r\n                label={intl.formatMessage({\r\n                  id: 'ConfirmSignupForm.lastNameLabel',\r\n                })}\r\n                placeholder={intl.formatMessage({\r\n                  id: 'ConfirmSignupForm.lastNamePlaceholder',\r\n                })}\r\n                initialValue={lastName}\r\n                validate={validators.required(\r\n                  intl.formatMessage({\r\n                    id: 'ConfirmSignupForm.lastNameRequired',\r\n                  })\r\n                )}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={css.bottomWrapper}>\r\n            {termsAndConditions}\r\n            <PrimaryButton type=\"submit\" inProgress={submitInProgress} disabled={submitDisabled}>\r\n              <FormattedMessage id=\"ConfirmSignupForm.signUp\" values={{ idp: idp }} />\r\n            </PrimaryButton>\r\n          </div>\r\n        </Form>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nConfirmSignupFormComponent.defaultProps = { inProgress: false };\r\n\r\nConfirmSignupFormComponent.propTypes = {\r\n  inProgress: bool,\r\n  termsAndConditions: node.isRequired,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nconst ConfirmSignupForm = compose(injectIntl)(ConfirmSignupFormComponent);\r\nConfirmSignupForm.displayName = 'ConfirmSignupForm';\r\n\r\nexport default ConfirmSignupForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AuthenticationPage_root__NmviC\",\"contentContainer\":\"AuthenticationPage_contentContainer__a46vz marketplaceModalRootStyles\",\"content\":\"AuthenticationPage_content__aAO1o marketplaceModalBaseStyles\",\"tabs\":\"AuthenticationPage_tabs__0pM5F\",\"tab\":\"AuthenticationPage_tab__fAPnP marketplaceModalTitleStyles\",\"form\":\"AuthenticationPage_form__U1VDc\",\"loginForm\":\"AuthenticationPage_loginForm__yM-vq\",\"signupForm\":\"AuthenticationPage_signupForm__FEoDH\",\"bottomWrapper\":\"AuthenticationPage_bottomWrapper__w0w4I marketplaceModalBottomWrapper\",\"privacyWrapper\":\"AuthenticationPage_privacyWrapper__RamWn\",\"termsWrapper\":\"AuthenticationPage_termsWrapper__WKYrC\",\"hideOnMobile\":\"AuthenticationPage_hideOnMobile__IUbwt\",\"verifyClose\":\"AuthenticationPage_verifyClose__PBkzr marketplaceModalCloseStyles\",\"closeText\":\"AuthenticationPage_closeText__N1K0x marketplaceModalCloseText\",\"closeIcon\":\"AuthenticationPage_closeIcon__CUw3C marketplaceModalCloseIcon\",\"modalTitle\":\"AuthenticationPage_modalTitle__Hu7hI marketplaceModalTitleStyles\",\"modalMessage\":\"AuthenticationPage_modalMessage__54ObO marketplaceModalParagraphStyles\",\"email\":\"AuthenticationPage_email__FeBXz\",\"modalHelperLink\":\"AuthenticationPage_modalHelperLink__5GSLY a marketplaceModalHelperLink\",\"modalHelperText\":\"AuthenticationPage_modalHelperText__Ti0em marketplaceModalHelperText\",\"modalIcon\":\"AuthenticationPage_modalIcon__S--V7 marketplaceModalIconStyles\",\"error\":\"AuthenticationPage_error__269bM marketplaceModalPasswordMargins\",\"signupWithIdpTitle\":\"AuthenticationPage_signupWithIdpTitle__pQeMN marketplaceModalTitleStyles\",\"confirmInfoText\":\"AuthenticationPage_confirmInfoText__61BfC\",\"buttonIcon\":\"AuthenticationPage_buttonIcon__3nT1r\",\"socialButtonWrapper\":\"AuthenticationPage_socialButtonWrapper__iaCJc\",\"socialButtonsOr\":\"AuthenticationPage_socialButtonsOr__x7By2\",\"socialButtonsOrText\":\"AuthenticationPage_socialButtonsOrText__a6Ltk\"};","import React from 'react';\r\n\r\nimport { FormattedMessage } from '../../util/reactIntl';\r\n\r\nimport { Heading, NamedLink, IconEmailSent, InlineTextButton, IconClose } from '../../components';\r\n\r\nimport css from './AuthenticationPage.module.css';\r\n\r\nconst EmailVerificationInfo = props => {\r\n  const {\r\n    name,\r\n    email,\r\n    onResendVerificationEmail,\r\n    resendErrorMessage,\r\n    sendVerificationEmailInProgress,\r\n  } = props;\r\n\r\n  const resendEmailLink = (\r\n    <InlineTextButton rootClassName={css.modalHelperLink} onClick={onResendVerificationEmail}>\r\n      <FormattedMessage id=\"AuthenticationPage.resendEmailLinkText\" />\r\n    </InlineTextButton>\r\n  );\r\n\r\n  const fixEmailLink = (\r\n    <NamedLink className={css.modalHelperLink} name=\"ContactDetailsPage\">\r\n      <FormattedMessage id=\"AuthenticationPage.fixEmailLinkText\" />\r\n    </NamedLink>\r\n  );\r\n\r\n  return (\r\n    <div className={css.content}>\r\n      <NamedLink className={css.verifyClose} name=\"ProfileSettingsPage\">\r\n        <span className={css.closeText}>\r\n          <FormattedMessage id=\"AuthenticationPage.verifyEmailClose\" />\r\n        </span>\r\n        <IconClose rootClassName={css.closeIcon} />\r\n      </NamedLink>\r\n      <IconEmailSent className={css.modalIcon} />\r\n      <Heading as=\"h1\" rootClassName={css.modalTitle}>\r\n        <FormattedMessage id=\"AuthenticationPage.verifyEmailTitle\" values={{ name }} />\r\n      </Heading>\r\n      <p className={css.modalMessage}>\r\n        <FormattedMessage id=\"AuthenticationPage.verifyEmailText\" values={{ email }} />\r\n      </p>\r\n      {resendErrorMessage}\r\n\r\n      <div className={css.bottomWrapper}>\r\n        <p className={css.modalHelperText}>\r\n          {sendVerificationEmailInProgress ? (\r\n            <FormattedMessage id=\"AuthenticationPage.sendingEmail\" />\r\n          ) : (\r\n            <FormattedMessage id=\"AuthenticationPage.resendEmail\" values={{ resendEmailLink }} />\r\n          )}\r\n        </p>\r\n        <p className={css.modalHelperText}>\r\n          <FormattedMessage id=\"AuthenticationPage.fixEmail\" values={{ fixEmailLink }} />\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailVerificationInfo;\r\n","import React from 'react';\r\n\r\n// This is Facebook's logo, you are not allowed to change its color\r\nexport const FacebookLogo = (\r\n  <svg width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M7.89.214C4.055 1.047 1.005 4.13.205 7.947c-.734 3.45.533 7.283 3.166 9.6.967.85 3.2 2.033 4.15 2.183l.617.1v-6.883H5.806v-3h2.283l.083-1.633c.134-2.417.717-3.534 2.3-4.25.617-.284 1.034-.35 2.3-.334.85.017 1.617.084 1.7.134.1.05.167.7.167 1.433v1.317h-.983c-1.484 0-1.75.283-1.817 1.983l-.067 1.35h1.45c1.284 0 1.434.033 1.35.283-.05.167-.133.667-.2 1.134-.216 1.55-.25 1.583-1.483 1.583h-1.083V19.914l.866-.234c1.684-.433 2.984-1.216 4.4-2.633 2.067-2.067 2.9-4.1 2.9-7.017 0-3.166-1.2-5.75-3.616-7.766C14.106.38 10.772-.42 7.889.214z\"\r\n      fill=\"#1877F2\"\r\n      fillRule=\"nonzero\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// This is Google's logo, you are not allowed to change its color\r\nexport const GoogleLogo = (\r\n  <svg width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g fill=\"none\" fillRule=\"evenodd\">\r\n      <path\r\n        d=\"M19.6 10.227c0-.709-.064-1.39-.182-2.045H10v3.868h5.382a4.6 4.6 0 01-1.996 3.018v2.51h3.232c1.891-1.742 2.982-4.305 2.982-7.35z\"\r\n        fill=\"#4285F4\"\r\n      />\r\n      <path\r\n        d=\"M10 20c2.7 0 4.964-.895 6.618-2.423l-3.232-2.509c-.895.6-2.04.955-3.386.955-2.605 0-4.81-1.76-5.595-4.123H1.064v2.59A9.996 9.996 0 0010 20z\"\r\n        fill=\"#34A853\"\r\n      />\r\n      <path\r\n        d=\"M4.405 11.9c-.2-.6-.314-1.24-.314-1.9 0-.66.114-1.3.314-1.9V5.51H1.064A9.996 9.996 0 000 10c0 1.614.386 3.14 1.064 4.49l3.34-2.59z\"\r\n        fill=\"#FBBC05\"\r\n      />\r\n      <path\r\n        d=\"M10 3.977c1.468 0 2.786.505 3.823 1.496l2.868-2.868C14.959.99 12.695 0 10 0 6.09 0 2.71 2.24 1.064 5.51l3.34 2.59C5.192 5.736 7.396 3.977 10 3.977z\"\r\n        fill=\"#EA4335\"\r\n      />\r\n      <path d=\"M0 0h20v20H0z\" />\r\n    </g>\r\n  </svg>\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { bool, func, object, oneOf, shape } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport classNames from 'classnames';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\nimport { useConfiguration } from '../../context/configurationContext';\r\nimport { useRouteConfiguration } from '../../context/routeConfigurationContext';\r\nimport { camelize } from '../../util/string';\r\nimport { pathByRouteName } from '../../util/routes';\r\nimport { apiBaseUrl } from '../../util/api';\r\nimport { FormattedMessage, injectIntl, intlShape } from '../../util/reactIntl';\r\nimport { propTypes } from '../../util/types';\r\nimport { ensureCurrentUser } from '../../util/data';\r\nimport {\r\n  isSignupEmailTakenError,\r\n  isTooManyEmailVerificationRequestsError,\r\n} from '../../util/errors';\r\n\r\nimport { login, authenticationInProgress, signup, signupWithIdp } from '../../ducks/auth.duck';\r\nimport { isScrollingDisabled, manageDisableScrolling } from '../../ducks/ui.duck';\r\nimport { sendVerificationEmail } from '../../ducks/user.duck';\r\n\r\nimport {\r\n  Page,\r\n  Heading,\r\n  NamedRedirect,\r\n  LinkTabNavHorizontal,\r\n  SocialLoginButton,\r\n  ResponsiveBackgroundImageContainer,\r\n  Modal,\r\n  LayoutSingleColumn,\r\n} from '../../components';\r\n\r\nimport TopbarContainer from '../../containers/TopbarContainer/TopbarContainer';\r\nimport FooterContainer from '../../containers/FooterContainer/FooterContainer';\r\n\r\nimport TermsAndConditions from './TermsAndConditions/TermsAndConditions';\r\nimport ConfirmSignupForm from './ConfirmSignupForm/ConfirmSignupForm';\r\nimport LoginForm from './LoginForm/LoginForm';\r\nimport SignupForm from './SignupForm/SignupForm';\r\nimport EmailVerificationInfo from './EmailVerificationInfo';\r\n\r\n// We need to get ToS asset and get it rendered for the modal on this page.\r\nimport { TermsOfServiceContent } from '../../containers/TermsOfServicePage/TermsOfServicePage';\r\n\r\n// We need to get PrivacyPolicy asset and get it rendered for the modal on this page.\r\nimport { PrivacyPolicyContent } from '../../containers/PrivacyPolicyPage/PrivacyPolicyPage';\r\n\r\nimport { TOS_ASSET_NAME, PRIVACY_POLICY_ASSET_NAME } from './AuthenticationPage.duck';\r\n\r\nimport css from './AuthenticationPage.module.css';\r\nimport { FacebookLogo, GoogleLogo } from './socialLoginLogos';\r\n\r\n// Social login buttons are needed by AuthenticationForms\r\nexport const SocialLoginButtonsMaybe = props => {\r\n  const routeConfiguration = useRouteConfiguration();\r\n  const { isLogin, showFacebookLogin, showGoogleLogin, from } = props;\r\n  const showSocialLogins = showFacebookLogin || showGoogleLogin;\r\n\r\n  const getDefaultRoutes = () => {\r\n    const baseUrl = apiBaseUrl();\r\n\r\n    // Route where the user should be returned after authentication\r\n    // This is used e.g. with EditListingPage and ListingPage\r\n    const fromParam = from ? `from=${from}` : '';\r\n\r\n    // Default route where user is returned after successfull authentication\r\n    const defaultReturn = pathByRouteName('LandingPage', routeConfiguration);\r\n    const defaultReturnParam = defaultReturn ? `&defaultReturn=${defaultReturn}` : '';\r\n\r\n    // Route for confirming user data before creating a new user\r\n    const defaultConfirm = pathByRouteName('ConfirmPage', routeConfiguration);\r\n    const defaultConfirmParam = defaultConfirm ? `&defaultConfirm=${defaultConfirm}` : '';\r\n\r\n    return { baseUrl, fromParam, defaultReturnParam, defaultConfirmParam };\r\n  };\r\n\r\n  const authWithFacebook = () => {\r\n    const defaultRoutes = getDefaultRoutes();\r\n    const { baseUrl, fromParam, defaultReturnParam, defaultConfirmParam } = defaultRoutes;\r\n    window.location.href = `${baseUrl}/api/auth/facebook?${fromParam}${defaultReturnParam}${defaultConfirmParam}`;\r\n  };\r\n\r\n  const authWithGoogle = () => {\r\n    const defaultRoutes = getDefaultRoutes();\r\n    const { baseUrl, fromParam, defaultReturnParam, defaultConfirmParam } = defaultRoutes;\r\n    window.location.href = `${baseUrl}/api/auth/google?${fromParam}${defaultReturnParam}${defaultConfirmParam}`;\r\n  };\r\n\r\n  return showSocialLogins ? (\r\n    <div className={css.idpButtons}>\r\n      <div className={css.socialButtonsOr}>\r\n        <span className={css.socialButtonsOrText}>\r\n          <FormattedMessage id=\"AuthenticationPage.or\" />\r\n        </span>\r\n      </div>\r\n\r\n      {showFacebookLogin ? (\r\n        <div className={css.socialButtonWrapper}>\r\n          <SocialLoginButton onClick={() => authWithFacebook()}>\r\n            <span className={css.buttonIcon}>{FacebookLogo}</span>\r\n            {isLogin ? (\r\n              <FormattedMessage id=\"AuthenticationPage.loginWithFacebook\" />\r\n            ) : (\r\n              <FormattedMessage id=\"AuthenticationPage.signupWithFacebook\" />\r\n            )}\r\n          </SocialLoginButton>\r\n        </div>\r\n      ) : null}\r\n\r\n      {showGoogleLogin ? (\r\n        <div className={css.socialButtonWrapper}>\r\n          <SocialLoginButton onClick={() => authWithGoogle()}>\r\n            <span className={css.buttonIcon}>{GoogleLogo}</span>\r\n            {isLogin ? (\r\n              <FormattedMessage id=\"AuthenticationPage.loginWithGoogle\" />\r\n            ) : (\r\n              <FormattedMessage id=\"AuthenticationPage.signupWithGoogle\" />\r\n            )}\r\n          </SocialLoginButton>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\n// Tabs for SignupForm and LoginForm\r\nexport const AuthenticationForms = props => {\r\n  const {\r\n    isLogin,\r\n    showFacebookLogin,\r\n    showGoogleLogin,\r\n    from,\r\n    submitLogin,\r\n    loginError,\r\n    signupError,\r\n    authInProgress,\r\n    submitSignup,\r\n    termsAndConditions,\r\n  } = props;\r\n  const fromState = { state: from ? { from } : null };\r\n  const tabs = [\r\n    {\r\n      text: (\r\n        <Heading as={!isLogin ? 'h1' : 'h2'} rootClassName={css.tab}>\r\n          <FormattedMessage id=\"AuthenticationPage.signupLinkText\" />\r\n        </Heading>\r\n      ),\r\n      selected: !isLogin,\r\n      linkProps: {\r\n        name: 'SignupPage',\r\n        to: fromState,\r\n      },\r\n    },\r\n    {\r\n      text: (\r\n        <Heading as={isLogin ? 'h1' : 'h2'} rootClassName={css.tab}>\r\n          <FormattedMessage id=\"AuthenticationPage.loginLinkText\" />\r\n        </Heading>\r\n      ),\r\n      selected: isLogin,\r\n      linkProps: {\r\n        name: 'LoginPage',\r\n        to: fromState,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleSubmitSignup = values => {\r\n    const { fname, lname, ...rest } = values;\r\n    const params = { firstName: fname.trim(), lastName: lname.trim(), ...rest };\r\n    submitSignup(params);\r\n  };\r\n\r\n  const loginErrorMessage = (\r\n    <div className={css.error}>\r\n      <FormattedMessage id=\"AuthenticationPage.loginFailed\" />\r\n    </div>\r\n  );\r\n\r\n  const signupErrorMessage = (\r\n    <div className={css.error}>\r\n      {isSignupEmailTakenError(signupError) ? (\r\n        <FormattedMessage id=\"AuthenticationPage.signupFailedEmailAlreadyTaken\" />\r\n      ) : (\r\n        <FormattedMessage id=\"AuthenticationPage.signupFailed\" />\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // eslint-disable-next-line no-confusing-arrow\r\n  const errorMessage = (error, message) => (error ? message : null);\r\n  const loginOrSignupError = isLogin\r\n    ? errorMessage(loginError, loginErrorMessage)\r\n    : errorMessage(signupError, signupErrorMessage);\r\n\r\n  return (\r\n    <div className={css.content}>\r\n      <LinkTabNavHorizontal className={css.tabs} tabs={tabs} />\r\n      {loginOrSignupError}\r\n\r\n      {isLogin ? (\r\n        <LoginForm className={css.loginForm} onSubmit={submitLogin} inProgress={authInProgress} />\r\n      ) : (\r\n        <SignupForm\r\n          className={css.signupForm}\r\n          onSubmit={handleSubmitSignup}\r\n          inProgress={authInProgress}\r\n          termsAndConditions={termsAndConditions}\r\n        />\r\n      )}\r\n\r\n      <SocialLoginButtonsMaybe\r\n        isLogin={isLogin}\r\n        showFacebookLogin={showFacebookLogin}\r\n        showGoogleLogin={showGoogleLogin}\r\n        from={from}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Form for confirming information from IdP (e.g. Facebook)\r\n// This is shown before new user is created to Marketplace API\r\nconst ConfirmIdProviderInfoForm = props => {\r\n  const { authInfo, authInProgress, confirmError, submitSingupWithIdp, termsAndConditions } = props;\r\n  const idp = authInfo ? authInfo.idpId.replace(/^./, str => str.toUpperCase()) : null;\r\n\r\n  const handleSubmitConfirm = values => {\r\n    const { idpToken, email, firstName, lastName, idpId } = authInfo;\r\n    const { email: newEmail, firstName: newFirstName, lastName: newLastName, ...rest } = values;\r\n\r\n    // Pass email, fistName or lastName to Marketplace API only if user has edited them\r\n    // sand they can't be fetched directly from idp provider (e.g. Facebook)\r\n\r\n    const authParams = {\r\n      ...(newEmail !== email && { email: newEmail }),\r\n      ...(newFirstName !== firstName && { firstName: newFirstName }),\r\n      ...(newLastName !== lastName && { lastName: newLastName }),\r\n    };\r\n\r\n    // If the confirm form has any additional values, pass them forward as user's protected data\r\n    const protectedData = !isEmpty(rest) ? { ...rest } : null;\r\n\r\n    submitSingupWithIdp({\r\n      idpToken,\r\n      idpId,\r\n      ...authParams,\r\n      ...(!!protectedData && { protectedData }),\r\n    });\r\n  };\r\n\r\n  const confirmErrorMessage = confirmError ? (\r\n    <div className={css.error}>\r\n      {isSignupEmailTakenError(confirmError) ? (\r\n        <FormattedMessage id=\"AuthenticationPage.signupFailedEmailAlreadyTaken\" />\r\n      ) : (\r\n        <FormattedMessage id=\"AuthenticationPage.signupFailed\" />\r\n      )}\r\n    </div>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={css.content}>\r\n      <Heading as=\"h1\" rootClassName={css.signupWithIdpTitle}>\r\n        <FormattedMessage id=\"AuthenticationPage.confirmSignupWithIdpTitle\" values={{ idp }} />\r\n      </Heading>\r\n\r\n      <p className={css.confirmInfoText}>\r\n        <FormattedMessage id=\"AuthenticationPage.confirmSignupInfoText\" />\r\n      </p>\r\n      {confirmErrorMessage}\r\n      <ConfirmSignupForm\r\n        className={css.form}\r\n        onSubmit={handleSubmitConfirm}\r\n        inProgress={authInProgress}\r\n        termsAndConditions={termsAndConditions}\r\n        authInfo={authInfo}\r\n        idp={idp}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const AuthenticationOrConfirmInfoForm = props => {\r\n  const {\r\n    tab,\r\n    authInfo,\r\n    from,\r\n    showFacebookLogin,\r\n    showGoogleLogin,\r\n    submitLogin,\r\n    submitSignup,\r\n    submitSingupWithIdp,\r\n    authInProgress,\r\n    loginError,\r\n    signupError,\r\n    confirmError,\r\n    termsAndConditions,\r\n  } = props;\r\n  const isConfirm = tab === 'confirm';\r\n  const isLogin = tab === 'login';\r\n\r\n  return isConfirm ? (\r\n    <ConfirmIdProviderInfoForm\r\n      authInfo={authInfo}\r\n      submitSingupWithIdp={submitSingupWithIdp}\r\n      authInProgress={authInProgress}\r\n      confirmError={confirmError}\r\n      termsAndConditions={termsAndConditions}\r\n    />\r\n  ) : (\r\n    <AuthenticationForms\r\n      isLogin={isLogin}\r\n      showFacebookLogin={showFacebookLogin}\r\n      showGoogleLogin={showGoogleLogin}\r\n      from={from}\r\n      loginError={loginError}\r\n      signupError={signupError}\r\n      submitLogin={submitLogin}\r\n      authInProgress={authInProgress}\r\n      submitSignup={submitSignup}\r\n      termsAndConditions={termsAndConditions}\r\n    ></AuthenticationForms>\r\n  );\r\n};\r\n\r\nconst getAuthInfoFromCookies = () => {\r\n  return Cookies.get('st-authinfo')\r\n    ? JSON.parse(Cookies.get('st-authinfo').replace('j:', ''))\r\n    : null;\r\n};\r\nconst getAuthErrorFromCookies = () => {\r\n  return Cookies.get('st-autherror')\r\n    ? JSON.parse(Cookies.get('st-autherror').replace('j:', ''))\r\n    : null;\r\n};\r\n\r\nexport const AuthenticationPageComponent = props => {\r\n  const [tosModalOpen, setTosModalOpen] = useState(false);\r\n  const [privacyModalOpen, setPrivacyModalOpen] = useState(false);\r\n  const [authInfo, setAuthInfo] = useState(getAuthInfoFromCookies());\r\n  const [authError, setAuthError] = useState(getAuthErrorFromCookies());\r\n  const config = useConfiguration();\r\n\r\n  useEffect(() => {\r\n    // Remove the autherror cookie once the content is saved to state\r\n    // because we don't want to show the error message e.g. after page refresh\r\n    if (authError) {\r\n      Cookies.remove('st-autherror');\r\n    }\r\n  }, []);\r\n\r\n  // On mobile, it's better to scroll to top.\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [tosModalOpen, privacyModalOpen]);\r\n\r\n  const {\r\n    authInProgress,\r\n    currentUser,\r\n    intl,\r\n    isAuthenticated,\r\n    location,\r\n    loginError,\r\n    scrollingDisabled,\r\n    signupError,\r\n    submitLogin,\r\n    submitSignup,\r\n    confirmError,\r\n    submitSingupWithIdp,\r\n    tab,\r\n    sendVerificationEmailInProgress,\r\n    sendVerificationEmailError,\r\n    onResendVerificationEmail,\r\n    onManageDisableScrolling,\r\n    tosAssetsData,\r\n    tosFetchInProgress,\r\n    tosFetchError,\r\n  } = props;\r\n\r\n  // History API has potentially state tied to this route\r\n  // We have used that state to store previous URL (\"from\"),\r\n  // so that use can be redirected back to that page after authentication.\r\n  const locationFrom = location.state?.from || null;\r\n  const authinfoFrom = authInfo?.from || null;\r\n  const from = locationFrom ? locationFrom : authinfoFrom ? authinfoFrom : null;\r\n\r\n  const user = ensureCurrentUser(currentUser);\r\n  const currentUserLoaded = !!user.id;\r\n  const isLogin = tab === 'login';\r\n\r\n  // We only want to show the email verification dialog in the signup\r\n  // tab if the user isn't being redirected somewhere else\r\n  // (i.e. `from` is present). We must also check the `emailVerified`\r\n  // flag only when the current user is fully loaded.\r\n  const showEmailVerification = !isLogin && currentUserLoaded && !user.attributes.emailVerified;\r\n\r\n  // Already authenticated, redirect away from auth page\r\n  if (isAuthenticated && from) {\r\n    return <Redirect to={from} />;\r\n  } else if (isAuthenticated && currentUserLoaded && !showEmailVerification) {\r\n    return <NamedRedirect name=\"LandingPage\" />;\r\n  }\r\n\r\n  const resendErrorTranslationId = isTooManyEmailVerificationRequestsError(\r\n    sendVerificationEmailError\r\n  )\r\n    ? 'AuthenticationPage.resendFailedTooManyRequests'\r\n    : 'AuthenticationPage.resendFailed';\r\n  const resendErrorMessage = sendVerificationEmailError ? (\r\n    <p className={css.error}>\r\n      <FormattedMessage id={resendErrorTranslationId} />\r\n    </p>\r\n  ) : null;\r\n\r\n  const marketplaceName = config.marketplaceName;\r\n  const schemaTitle = isLogin\r\n    ? intl.formatMessage({ id: 'AuthenticationPage.schemaTitleLogin' }, { marketplaceName })\r\n    : intl.formatMessage({ id: 'AuthenticationPage.schemaTitleSignup' }, { marketplaceName });\r\n  const schemaDescription = isLogin\r\n    ? intl.formatMessage({ id: 'AuthenticationPage.schemaDescriptionLogin' }, { marketplaceName })\r\n    : intl.formatMessage({ id: 'AuthenticationPage.schemaDescriptionSignup' }, { marketplaceName });\r\n\r\n  const topbarClasses = classNames({\r\n    [css.hideOnMobile]: showEmailVerification,\r\n  });\r\n\r\n  return (\r\n    <Page\r\n      title={schemaTitle}\r\n      scrollingDisabled={scrollingDisabled}\r\n      schema={{\r\n        '@context': 'http://schema.org',\r\n        '@type': 'WebPage',\r\n        name: schemaTitle,\r\n        description: schemaDescription,\r\n      }}\r\n    >\r\n      <LayoutSingleColumn\r\n        mainColumnClassName={css.layoutWrapperMain}\r\n        topbar={<TopbarContainer className={topbarClasses} />}\r\n        footer={<FooterContainer />}\r\n      >\r\n        <ResponsiveBackgroundImageContainer\r\n          className={css.root}\r\n          childrenWrapperClassName={css.contentContainer}\r\n          as=\"section\"\r\n          image={config.branding.brandImage}\r\n          sizes=\"100%\"\r\n          useOverlay\r\n        >\r\n          {showEmailVerification ? (\r\n            <EmailVerificationInfo\r\n              name={user.attributes.profile.firstName}\r\n              email={<span className={css.email}>{user.attributes.email}</span>}\r\n              onResendVerificationEmail={onResendVerificationEmail}\r\n              resendErrorMessage={resendErrorMessage}\r\n              sendVerificationEmailInProgress={sendVerificationEmailInProgress}\r\n            />\r\n          ) : (\r\n            <AuthenticationOrConfirmInfoForm\r\n              tab={tab}\r\n              authInfo={authInfo}\r\n              from={from}\r\n              showFacebookLogin={!!process.env.REACT_APP_FACEBOOK_APP_ID}\r\n              showGoogleLogin={!!process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n              submitLogin={submitLogin}\r\n              submitSignup={submitSignup}\r\n              submitSingupWithIdp={submitSingupWithIdp}\r\n              authInProgress={authInProgress}\r\n              loginError={loginError}\r\n              signupError={signupError}\r\n              confirmError={confirmError}\r\n              termsAndConditions={\r\n                <TermsAndConditions\r\n                  onOpenTermsOfService={() => setTosModalOpen(true)}\r\n                  onOpenPrivacyPolicy={() => setPrivacyModalOpen(true)}\r\n                  intl={intl}\r\n                />\r\n              }\r\n            />\r\n          )}\r\n        </ResponsiveBackgroundImageContainer>\r\n      </LayoutSingleColumn>\r\n      <Modal\r\n        id=\"AuthenticationPage.tos\"\r\n        isOpen={tosModalOpen}\r\n        onClose={() => setTosModalOpen(false)}\r\n        usePortal\r\n        onManageDisableScrolling={onManageDisableScrolling}\r\n      >\r\n        <div className={css.termsWrapper}>\r\n          <TermsOfServiceContent\r\n            inProgress={tosFetchInProgress}\r\n            error={tosFetchError}\r\n            data={tosAssetsData?.[camelize(TOS_ASSET_NAME)]?.data}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        id=\"AuthenticationPage.privacyPolicy\"\r\n        isOpen={privacyModalOpen}\r\n        onClose={() => setPrivacyModalOpen(false)}\r\n        usePortal\r\n        onManageDisableScrolling={onManageDisableScrolling}\r\n      >\r\n        <div className={css.privacyWrapper}>\r\n          <PrivacyPolicyContent\r\n            inProgress={tosFetchInProgress}\r\n            error={tosFetchError}\r\n            data={tosAssetsData?.[camelize(PRIVACY_POLICY_ASSET_NAME)]?.data}\r\n          />\r\n        </div>\r\n      </Modal>\r\n    </Page>\r\n  );\r\n};\r\n\r\nAuthenticationPageComponent.defaultProps = {\r\n  currentUser: null,\r\n  loginError: null,\r\n  signupError: null,\r\n  confirmError: null,\r\n  tab: 'signup',\r\n  sendVerificationEmailError: null,\r\n  showSocialLoginsForTests: false,\r\n  privacyAssetsData: null,\r\n  privacyFetchInProgress: false,\r\n  privacyFetchError: null,\r\n  tosAssetsData: null,\r\n  tosFetchInProgress: false,\r\n  tosFetchError: null,\r\n};\r\n\r\nAuthenticationPageComponent.propTypes = {\r\n  authInProgress: bool.isRequired,\r\n  currentUser: propTypes.currentUser,\r\n  isAuthenticated: bool.isRequired,\r\n  loginError: propTypes.error,\r\n  scrollingDisabled: bool.isRequired,\r\n  signupError: propTypes.error,\r\n  confirmError: propTypes.error,\r\n\r\n  submitLogin: func.isRequired,\r\n  submitSignup: func.isRequired,\r\n  tab: oneOf(['login', 'signup', 'confirm']),\r\n\r\n  sendVerificationEmailInProgress: bool.isRequired,\r\n  sendVerificationEmailError: propTypes.error,\r\n  onResendVerificationEmail: func.isRequired,\r\n  onManageDisableScrolling: func.isRequired,\r\n\r\n  // to fetch privacy-policy page asset\r\n  // which is shown in modal\r\n  privacyAssetsData: object,\r\n  privacyFetchInProgress: bool,\r\n  privacyFetchError: propTypes.error,\r\n\r\n  // to fetch terms-of-service page asset\r\n  // which is shown in modal\r\n  tosAssetsData: object,\r\n  tosFetchInProgress: bool,\r\n  tosFetchError: propTypes.error,\r\n\r\n  // from withRouter\r\n  location: shape({ state: object }).isRequired,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { isAuthenticated, loginError, signupError, confirmError } = state.auth;\r\n  const { currentUser, sendVerificationEmailInProgress, sendVerificationEmailError } = state.user;\r\n  const {\r\n    pageAssetsData: privacyAssetsData,\r\n    inProgress: privacyFetchInProgress,\r\n    error: privacyFetchError,\r\n  } = state.hostedAssets || {};\r\n  const { pageAssetsData: tosAssetsData, inProgress: tosFetchInProgress, error: tosFetchError } =\r\n    state.hostedAssets || {};\r\n\r\n  return {\r\n    authInProgress: authenticationInProgress(state),\r\n    currentUser,\r\n    isAuthenticated,\r\n    loginError,\r\n    scrollingDisabled: isScrollingDisabled(state),\r\n    signupError,\r\n    confirmError,\r\n    sendVerificationEmailInProgress,\r\n    sendVerificationEmailError,\r\n    privacyAssetsData,\r\n    privacyFetchInProgress,\r\n    privacyFetchError,\r\n    tosAssetsData,\r\n    tosFetchInProgress,\r\n    tosFetchError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  submitLogin: ({ email, password }) => dispatch(login(email, password)),\r\n  submitSignup: params => dispatch(signup(params)),\r\n  submitSingupWithIdp: params => dispatch(signupWithIdp(params)),\r\n  onResendVerificationEmail: () => dispatch(sendVerificationEmail()),\r\n  onManageDisableScrolling: (componentId, disableScrolling) =>\r\n    dispatch(manageDisableScrolling(componentId, disableScrolling)),\r\n});\r\n\r\n// Note: it is important that the withRouter HOC is **outside** the\r\n// connect HOC, otherwise React Router won't rerender any Route\r\n// components since connect implements a shouldComponentUpdate\r\n// lifecycle hook.\r\n//\r\n// See: https://github.com/ReactTraining/react-router/issues/4671\r\nconst AuthenticationPage = compose(\r\n  withRouter,\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  injectIntl\r\n)(AuthenticationPageComponent);\r\n\r\nexport default AuthenticationPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LoginForm_root__sN8e2 marketplaceModalFormRootStyles\",\"password\":\"LoginForm_password__coA+s marketplaceModalPasswordMargins\",\"bottomWrapper\":\"LoginForm_bottomWrapper__PJIN3 marketplaceModalBottomWrapper\",\"bottomWrapperText\":\"LoginForm_bottomWrapperText__2R5k3 marketplaceModalBottomWrapperText\",\"recoveryLink\":\"LoginForm_recoveryLink__QqkgT marketplaceModalHelperLink\",\"recoveryLinkInfo\":\"LoginForm_recoveryLinkInfo__b0HJl marketplaceModalHelperText\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { Form as FinalForm } from 'react-final-form';\r\nimport classNames from 'classnames';\r\n\r\nimport { FormattedMessage, injectIntl, intlShape } from '../../../util/reactIntl';\r\nimport * as validators from '../../../util/validators';\r\nimport { Form, PrimaryButton, FieldTextInput, NamedLink } from '../../../components';\r\n\r\nimport css from './LoginForm.module.css';\r\n\r\nconst LoginFormComponent = props => (\r\n  <FinalForm\r\n    {...props}\r\n    render={fieldRenderProps => {\r\n      const {\r\n        rootClassName,\r\n        className,\r\n        formId,\r\n        handleSubmit,\r\n        inProgress,\r\n        intl,\r\n        invalid,\r\n      } = fieldRenderProps;\r\n\r\n      // email\r\n      const emailLabel = intl.formatMessage({\r\n        id: 'LoginForm.emailLabel',\r\n      });\r\n      const emailPlaceholder = intl.formatMessage({\r\n        id: 'LoginForm.emailPlaceholder',\r\n      });\r\n      const emailRequiredMessage = intl.formatMessage({\r\n        id: 'LoginForm.emailRequired',\r\n      });\r\n      const emailRequired = validators.required(emailRequiredMessage);\r\n      const emailInvalidMessage = intl.formatMessage({\r\n        id: 'LoginForm.emailInvalid',\r\n      });\r\n      const emailValid = validators.emailFormatValid(emailInvalidMessage);\r\n\r\n      // password\r\n      const passwordLabel = intl.formatMessage({\r\n        id: 'LoginForm.passwordLabel',\r\n      });\r\n      const passwordPlaceholder = intl.formatMessage({\r\n        id: 'LoginForm.passwordPlaceholder',\r\n      });\r\n      const passwordRequiredMessage = intl.formatMessage({\r\n        id: 'LoginForm.passwordRequired',\r\n      });\r\n      const passwordRequired = validators.requiredStringNoTrim(passwordRequiredMessage);\r\n\r\n      const classes = classNames(rootClassName || css.root, className);\r\n      const submitInProgress = inProgress;\r\n      const submitDisabled = invalid || submitInProgress;\r\n\r\n      const passwordRecoveryLink = (\r\n        <NamedLink name=\"PasswordRecoveryPage\" className={css.recoveryLink}>\r\n          <FormattedMessage id=\"LoginForm.forgotPassword\" />\r\n        </NamedLink>\r\n      );\r\n\r\n      return (\r\n        <Form className={classes} onSubmit={handleSubmit}>\r\n          <div>\r\n            <FieldTextInput\r\n              type=\"email\"\r\n              id={formId ? `${formId}.email` : 'email'}\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              label={emailLabel}\r\n              placeholder={emailPlaceholder}\r\n              validate={validators.composeValidators(emailRequired, emailValid)}\r\n            />\r\n            <FieldTextInput\r\n              className={css.password}\r\n              type=\"password\"\r\n              id={formId ? `${formId}.password` : 'password'}\r\n              name=\"password\"\r\n              autoComplete=\"current-password\"\r\n              label={passwordLabel}\r\n              placeholder={passwordPlaceholder}\r\n              validate={passwordRequired}\r\n            />\r\n          </div>\r\n          <div className={css.bottomWrapper}>\r\n            <p className={css.bottomWrapperText}>\r\n              <span className={css.recoveryLinkInfo}>\r\n                <FormattedMessage\r\n                  id=\"LoginForm.forgotPasswordInfo\"\r\n                  values={{ passwordRecoveryLink }}\r\n                />\r\n              </span>\r\n            </p>\r\n            <PrimaryButton type=\"submit\" inProgress={submitInProgress} disabled={submitDisabled}>\r\n              <FormattedMessage id=\"LoginForm.logIn\" />\r\n            </PrimaryButton>\r\n          </div>\r\n        </Form>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nLoginFormComponent.defaultProps = {\r\n  rootClassName: null,\r\n  className: null,\r\n  form: null,\r\n  inProgress: false,\r\n};\r\n\r\nconst { string, bool } = PropTypes;\r\n\r\nLoginFormComponent.propTypes = {\r\n  rootClassName: string,\r\n  className: string,\r\n  form: string,\r\n  inProgress: bool,\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nconst LoginForm = compose(injectIntl)(LoginFormComponent);\r\nLoginForm.displayName = 'LoginForm';\r\n\r\nexport default LoginForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SignupForm_root__0Nnz- marketplaceModalFormRootStyles\",\"name\":\"SignupForm_name__rVHEY\",\"firstNameRoot\":\"SignupForm_firstNameRoot__10z0v\",\"lastNameRoot\":\"SignupForm_lastNameRoot__QqFaU\",\"password\":\"SignupForm_password__waec+ marketplaceModalPasswordMargins\",\"bottomWrapper\":\"SignupForm_bottomWrapper__lAvuX marketplaceModalBottomWrapper\"};","import React from 'react';\r\nimport { bool, node } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { Form as FinalForm } from 'react-final-form';\r\nimport arrayMutators from 'final-form-arrays';\r\nimport classNames from 'classnames';\r\n\r\nimport { FormattedMessage, injectIntl, intlShape } from '../../../util/reactIntl';\r\nimport * as validators from '../../../util/validators';\r\nimport { Form, PrimaryButton, FieldTextInput } from '../../../components';\r\n\r\nimport css from './SignupForm.module.css';\r\n\r\nconst SignupFormComponent = props => (\r\n  <FinalForm\r\n    {...props}\r\n    mutators={{ ...arrayMutators }}\r\n    render={fieldRenderProps => {\r\n      const {\r\n        rootClassName,\r\n        className,\r\n        formId,\r\n        handleSubmit,\r\n        inProgress,\r\n        invalid,\r\n        intl,\r\n        termsAndConditions,\r\n      } = fieldRenderProps;\r\n\r\n      // email\r\n      const emailRequired = validators.required(\r\n        intl.formatMessage({\r\n          id: 'SignupForm.emailRequired',\r\n        })\r\n      );\r\n      const emailValid = validators.emailFormatValid(\r\n        intl.formatMessage({\r\n          id: 'SignupForm.emailInvalid',\r\n        })\r\n      );\r\n\r\n      // password\r\n      const passwordRequiredMessage = intl.formatMessage({\r\n        id: 'SignupForm.passwordRequired',\r\n      });\r\n      const passwordMinLengthMessage = intl.formatMessage(\r\n        {\r\n          id: 'SignupForm.passwordTooShort',\r\n        },\r\n        {\r\n          minLength: validators.PASSWORD_MIN_LENGTH,\r\n        }\r\n      );\r\n      const passwordMaxLengthMessage = intl.formatMessage(\r\n        {\r\n          id: 'SignupForm.passwordTooLong',\r\n        },\r\n        {\r\n          maxLength: validators.PASSWORD_MAX_LENGTH,\r\n        }\r\n      );\r\n      const passwordMinLength = validators.minLength(\r\n        passwordMinLengthMessage,\r\n        validators.PASSWORD_MIN_LENGTH\r\n      );\r\n      const passwordMaxLength = validators.maxLength(\r\n        passwordMaxLengthMessage,\r\n        validators.PASSWORD_MAX_LENGTH\r\n      );\r\n      const passwordRequired = validators.requiredStringNoTrim(passwordRequiredMessage);\r\n      const passwordValidators = validators.composeValidators(\r\n        passwordRequired,\r\n        passwordMinLength,\r\n        passwordMaxLength\r\n      );\r\n\r\n      const classes = classNames(rootClassName || css.root, className);\r\n      const submitInProgress = inProgress;\r\n      const submitDisabled = invalid || submitInProgress;\r\n\r\n      return (\r\n        <Form className={classes} onSubmit={handleSubmit}>\r\n          <div>\r\n            <FieldTextInput\r\n              type=\"email\"\r\n              id={formId ? `${formId}.email` : 'email'}\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              label={intl.formatMessage({\r\n                id: 'SignupForm.emailLabel',\r\n              })}\r\n              placeholder={intl.formatMessage({\r\n                id: 'SignupForm.emailPlaceholder',\r\n              })}\r\n              validate={validators.composeValidators(emailRequired, emailValid)}\r\n            />\r\n            <div className={css.name}>\r\n              <FieldTextInput\r\n                className={css.firstNameRoot}\r\n                type=\"text\"\r\n                id={formId ? `${formId}.fname` : 'fname'}\r\n                name=\"fname\"\r\n                autoComplete=\"given-name\"\r\n                label={intl.formatMessage({\r\n                  id: 'SignupForm.firstNameLabel',\r\n                })}\r\n                placeholder={intl.formatMessage({\r\n                  id: 'SignupForm.firstNamePlaceholder',\r\n                })}\r\n                validate={validators.required(\r\n                  intl.formatMessage({\r\n                    id: 'SignupForm.firstNameRequired',\r\n                  })\r\n                )}\r\n              />\r\n              <FieldTextInput\r\n                className={css.lastNameRoot}\r\n                type=\"text\"\r\n                id={formId ? `${formId}.lname` : 'lname'}\r\n                name=\"lname\"\r\n                autoComplete=\"family-name\"\r\n                label={intl.formatMessage({\r\n                  id: 'SignupForm.lastNameLabel',\r\n                })}\r\n                placeholder={intl.formatMessage({\r\n                  id: 'SignupForm.lastNamePlaceholder',\r\n                })}\r\n                validate={validators.required(\r\n                  intl.formatMessage({\r\n                    id: 'SignupForm.lastNameRequired',\r\n                  })\r\n                )}\r\n              />\r\n            </div>\r\n            <FieldTextInput\r\n              className={css.password}\r\n              type=\"password\"\r\n              id={formId ? `${formId}.password` : 'password'}\r\n              name=\"password\"\r\n              autoComplete=\"new-password\"\r\n              label={intl.formatMessage({\r\n                id: 'SignupForm.passwordLabel',\r\n              })}\r\n              placeholder={intl.formatMessage({\r\n                id: 'SignupForm.passwordPlaceholder',\r\n              })}\r\n              validate={passwordValidators}\r\n            />\r\n          </div>\r\n\r\n          <div className={css.bottomWrapper}>\r\n            {termsAndConditions}\r\n            <PrimaryButton type=\"submit\" inProgress={submitInProgress} disabled={submitDisabled}>\r\n              <FormattedMessage id=\"SignupForm.signUp\" />\r\n            </PrimaryButton>\r\n          </div>\r\n        </Form>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nSignupFormComponent.defaultProps = { inProgress: false };\r\n\r\nSignupFormComponent.propTypes = {\r\n  inProgress: bool,\r\n  termsAndConditions: node.isRequired,\r\n\r\n  // from injectIntl\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nconst SignupForm = compose(injectIntl)(SignupFormComponent);\r\nSignupForm.displayName = 'SignupForm';\r\n\r\nexport default SignupForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TermsAndConditions_root__XyXEQ marketplaceModalBottomWrapperText\",\"finePrint\":\"TermsAndConditions_finePrint__pa4N2 marketplaceModalHelperLink\",\"privacyLink\":\"TermsAndConditions_privacyLink__wTDd7 marketplaceModalHelperLink\",\"termsLink\":\"TermsAndConditions_termsLink__3upPN marketplaceModalHelperLink\"};","import React from 'react';\r\nimport { func } from 'prop-types';\r\n\r\nimport { requiredFieldArrayCheckbox } from '../../../util/validators';\r\nimport { FieldCheckboxGroup } from '../../../components';\r\n\r\nimport { FormattedMessage, intlShape } from '../../../util/reactIntl';\r\n\r\nimport css from './TermsAndConditions.module.css';\r\n\r\nconst KEY_CODE_ENTER = 13;\r\n\r\nconst TermsAndConditions = props => {\r\n  const { onOpenTermsOfService, onOpenPrivacyPolicy, intl } = props;\r\n\r\n  const handleClick = callback => e => {\r\n    e.preventDefault();\r\n    callback(e);\r\n  };\r\n  const handleKeyUp = callback => e => {\r\n    // Allow click action with keyboard like with normal links\r\n    if (e.keyCode === KEY_CODE_ENTER) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  const termsLink = (\r\n    <span\r\n      className={css.termsLink}\r\n      onClick={handleClick(onOpenTermsOfService)}\r\n      role=\"button\"\r\n      tabIndex=\"0\"\r\n      onKeyUp={handleKeyUp(onOpenTermsOfService)}\r\n    >\r\n      <FormattedMessage id=\"AuthenticationPage.termsAndConditionsTermsLinkText\" />\r\n    </span>\r\n  );\r\n\r\n  const privacyLink = (\r\n    <span\r\n      className={css.privacyLink}\r\n      onClick={handleClick(onOpenPrivacyPolicy)}\r\n      role=\"button\"\r\n      tabIndex=\"0\"\r\n      onKeyUp={handleKeyUp(onOpenPrivacyPolicy)}\r\n    >\r\n      <FormattedMessage id=\"AuthenticationPage.termsAndConditionsPrivacyLinkText\" />\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <FieldCheckboxGroup\r\n        name=\"terms\"\r\n        id=\"terms-accepted\"\r\n        optionLabelClassName={css.finePrint}\r\n        options={[\r\n          {\r\n            key: 'tos-and-privacy',\r\n            label: intl.formatMessage(\r\n              { id: 'AuthenticationPage.termsAndConditionsAcceptText' },\r\n              { termsLink, privacyLink }\r\n            ),\r\n          },\r\n        ]}\r\n        validate={requiredFieldArrayCheckbox(\r\n          intl.formatMessage({ id: 'AuthenticationPage.termsAndConditionsAcceptRequired' })\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// TermsAndConditions.defaultProps = {};\r\n\r\nTermsAndConditions.propTypes = {\r\n  onOpenTermsOfService: func.isRequired,\r\n  onOpenPrivacyPolicy: func.isRequired,\r\n  intl: intlShape.isRequired,\r\n};\r\n\r\nexport default TermsAndConditions;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"h1\":\"Heading_h1__XWifP\",\"h2\":\"Heading_h2__rfrgQ\",\"h3\":\"Heading_h3__0sbSd\",\"h4\":\"Heading_h4__rX5+W\",\"h5\":\"Heading_h5__+111h\",\"h6\":\"Heading_h6__7ekBW\"};","import React from 'react';\r\nimport { node, string } from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport css from './Heading.module.css';\r\n\r\n// Make it possible to use styling of H1, while the actual element is `<h2>`\r\nconst Heading = props => {\r\n  const { className, rootClassName, as, tagRef, ...otherProps } = props;\r\n  const Tag = as || 'h2';\r\n  const classes = classNames(rootClassName, className);\r\n\r\n  return <Tag className={classes} ref={tagRef} {...otherProps} />;\r\n};\r\n\r\nconst defaultPropsHeading = {\r\n  rootClassName: null,\r\n  className: null,\r\n  as: null,\r\n};\r\n\r\nconst propTypesHeading = {\r\n  rootClassName: string,\r\n  className: string,\r\n  children: node.isRequired,\r\n  as: string,\r\n};\r\n\r\nexport const H1 = React.forwardRef((props, ref) => {\r\n  const { rootClassName: rootClass, as, ...otherProps } = props;\r\n  return (\r\n    <Heading rootClassName={rootClass || css.h1} as={as || 'h1'} tagRef={ref} {...otherProps} />\r\n  );\r\n});\r\nH1.displayName = 'H1';\r\nH1.defaultProps = defaultPropsHeading;\r\nH1.propTypes = propTypesHeading;\r\n\r\nexport const H2 = React.forwardRef((props, ref) => {\r\n  const { rootClassName: rootClass, as, ...otherProps } = props;\r\n  return (\r\n    <Heading rootClassName={rootClass || css.h2} as={as || 'h2'} tagRef={ref} {...otherProps} />\r\n  );\r\n});\r\nH2.displayName = 'H2';\r\nH2.defaultProps = defaultPropsHeading;\r\nH2.propTypes = propTypesHeading;\r\n\r\nexport const H3 = React.forwardRef((props, ref) => {\r\n  const { rootClassName: rootClass, as, ...otherProps } = props;\r\n  return (\r\n    <Heading rootClassName={rootClass || css.h3} as={as || 'h3'} tagRef={ref} {...otherProps} />\r\n  );\r\n});\r\nH3.displayName = 'H3';\r\nH3.defaultProps = defaultPropsHeading;\r\nH3.propTypes = propTypesHeading;\r\n\r\nexport const H4 = React.forwardRef((props, ref) => {\r\n  const { rootClassName: rootClass, as, ...otherProps } = props;\r\n  return (\r\n    <Heading rootClassName={rootClass || css.h4} as={as || 'h4'} tagRef={ref} {...otherProps} />\r\n  );\r\n});\r\nH4.displayName = 'H4';\r\nH4.defaultProps = defaultPropsHeading;\r\nH4.propTypes = propTypesHeading;\r\n\r\nexport const H5 = React.forwardRef((props, ref) => {\r\n  const { rootClassName: rootClass, as, ...otherProps } = props;\r\n  return (\r\n    <Heading rootClassName={rootClass || css.h5} as={as || 'h5'} tagRef={ref} {...otherProps} />\r\n  );\r\n});\r\nH5.displayName = 'H5';\r\nH5.defaultProps = defaultPropsHeading;\r\nH5.propTypes = propTypesHeading;\r\n\r\nexport const H6 = React.forwardRef((props, ref) => {\r\n  const { rootClassName: rootClass, as, ...otherProps } = props;\r\n  return (\r\n    <Heading rootClassName={rootClass || css.h6} as={as || 'h6'} tagRef={ref} {...otherProps} />\r\n  );\r\n});\r\nH6.displayName = 'H6';\r\nH6.defaultProps = defaultPropsHeading;\r\nH6.propTypes = propTypesHeading;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\n\r\nconst PageBuilder = loadable(() =>\r\n  import(/* webpackChunkName: \"PageBuilder\" */ '../PageBuilder/PageBuilder')\r\n);\r\n\r\n// NOTE: You could add the actual Privacy Policy here as a fallback\r\n//       instead of showing this error message.\r\nconst fallbackPrivacyPolicy = `\r\n# An error occurred\r\nThe web app couldn\\'t reach the backend to fetch the Privacy Policy page.\r\n\r\n## Possible actions\r\nPlease refresh the page and, if that doesn't help, contact the marketplace administrators.\r\n`;\r\n\r\n// Create fallback content (array of sections) in page asset format:\r\nexport const fallbackSections = {\r\n  sections: [\r\n    {\r\n      sectionType: 'article',\r\n      sectionId: 'privacy',\r\n      appearance: { fieldType: 'customAppearance', backgroundColor: '#ffffff' },\r\n      title: { fieldType: 'heading1', content: 'Privacy Policy' },\r\n      blocks: [\r\n        {\r\n          blockType: 'defaultBlock',\r\n          blockId: 'hero-content',\r\n          text: {\r\n            fieldType: 'markdown',\r\n            content: fallbackPrivacyPolicy,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  meta: {\r\n    pageTitle: {\r\n      fieldType: 'metaTitle',\r\n      content: 'Privacy policy page',\r\n    },\r\n    pageDescription: {\r\n      fieldType: 'metaDescription',\r\n      content: 'Privacy policy fetch failed',\r\n    },\r\n  },\r\n};\r\n\r\n// This is the fallback page, in case there's no Privacy Policy asset defined in Console.\r\nconst FallbackPage = props => {\r\n  return <PageBuilder pageAssetsData={fallbackSections} {...props} />;\r\n};\r\n\r\nexport default FallbackPage;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\n\r\nimport { bool, object } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { camelize } from '../../util/string';\r\nimport { propTypes } from '../../util/types';\r\n\r\nimport { H1 } from '../PageBuilder/Primitives/Heading';\r\nimport FallbackPage, { fallbackSections } from './FallbackPage';\r\nimport { ASSET_NAME } from './PrivacyPolicyPage.duck';\r\n\r\nconst PageBuilder = loadable(() =>\r\n  import(/* webpackChunkName: \"PageBuilder\" */ '../PageBuilder/PageBuilder')\r\n);\r\nconst SectionBuilder = loadable(\r\n  () => import(/* webpackChunkName: \"SectionBuilder\" */ '../PageBuilder/PageBuilder'),\r\n  {\r\n    resolveComponent: components => components.SectionBuilder,\r\n  }\r\n);\r\n\r\n// This \"content-only\" component can be used in modals etc.\r\nconst PrivacyPolicyContent = props => {\r\n  const { inProgress, error, data } = props;\r\n\r\n  if (inProgress) {\r\n    return null;\r\n  }\r\n\r\n  // We don't want to add h1 heading twice to the HTML (SEO issue).\r\n  // Modal's header is mapped as h2\r\n  const hasContent = data => typeof data?.content === 'string';\r\n  const exposeContentAsChildren = data => {\r\n    return hasContent(data) ? { children: data.content } : {};\r\n  };\r\n  const CustomHeading1 = props => <H1 as=\"h2\" {...props} />;\r\n\r\n  const hasData = error === null && data;\r\n  const sectionsData = hasData ? data : fallbackSections;\r\n\r\n  return (\r\n    <SectionBuilder\r\n      {...sectionsData}\r\n      options={{\r\n        fieldComponents: {\r\n          heading1: { component: CustomHeading1, pickValidProps: exposeContentAsChildren },\r\n        },\r\n        isInsideContainer: true,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\n// Presentational component for PrivacyPolicyPage\r\nconst PrivacyPolicyPageComponent = props => {\r\n  const { pageAssetsData, inProgress, error } = props;\r\n\r\n  return (\r\n    <PageBuilder\r\n      pageAssetsData={pageAssetsData?.[camelize(ASSET_NAME)]?.data}\r\n      inProgress={inProgress}\r\n      error={error}\r\n      fallbackPage={<FallbackPage />}\r\n    />\r\n  );\r\n};\r\n\r\nPrivacyPolicyPageComponent.propTypes = {\r\n  pageAssetsData: object,\r\n  inProgress: bool,\r\n  error: propTypes.error,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { pageAssetsData, inProgress, error } = state.hostedAssets || {};\r\n  return { pageAssetsData, inProgress, error };\r\n};\r\n\r\n// Note: it is important that the withRouter HOC is **outside** the\r\n// connect HOC, otherwise React Router won't rerender any Route\r\n// components since connect implements a shouldComponentUpdate\r\n// lifecycle hook.\r\n//\r\n// See: https://github.com/ReactTraining/react-router/issues/4671\r\nconst PrivacyPolicyPage = compose(connect(mapStateToProps))(PrivacyPolicyPageComponent);\r\n\r\nconst PRIVACY_POLICY_ASSET_NAME = ASSET_NAME;\r\nexport { PRIVACY_POLICY_ASSET_NAME, PrivacyPolicyPageComponent, PrivacyPolicyContent };\r\n\r\nexport default PrivacyPolicyPage;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\n\r\nconst PageBuilder = loadable(() =>\r\n  import(/* webpackChunkName: \"PageBuilder\" */ '../PageBuilder/PageBuilder')\r\n);\r\n\r\n// NOTE: You could add the actual Terms of Service here as a fallback\r\n//       instead of showing this error message.\r\nconst fallbackTerms = `\r\n# An error occurred\r\nThe web app couldn\\'t reach the backend to fetch the Term of Service page.\r\n\r\n## Possible actions\r\nPlease refresh the page and, if that doesn't help, contact the marketplace administrators.\r\n`;\r\n\r\n// Create fallback content (array of sections) in page asset format:\r\nexport const fallbackSections = {\r\n  sections: [\r\n    {\r\n      sectionType: 'article',\r\n      sectionId: 'terms',\r\n      appearance: { fieldType: 'customAppearance', backgroundColor: '#ffffff' },\r\n      title: { fieldType: 'heading1', content: 'Terms of Service' },\r\n      blocks: [\r\n        {\r\n          blockType: 'defaultBlock',\r\n          blockId: 'hero-content',\r\n          text: {\r\n            fieldType: 'markdown',\r\n            content: fallbackTerms,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  meta: {\r\n    pageTitle: {\r\n      fieldType: 'metaTitle',\r\n      content: 'Terms of service page',\r\n    },\r\n    pageDescription: {\r\n      fieldType: 'metaDescription',\r\n      content: 'Terms of service fetch failed',\r\n    },\r\n  },\r\n};\r\n\r\n// This is the fallback page, in case there's no Terms of Service asset defined in Console.\r\nconst FallbackPage = props => {\r\n  return <PageBuilder pageAssetsData={fallbackSections} {...props} />;\r\n};\r\n\r\nexport default FallbackPage;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\n\r\nimport { bool, object } from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { camelize } from '../../util/string';\r\nimport { propTypes } from '../../util/types';\r\n\r\nimport { H1 } from '../PageBuilder/Primitives/Heading';\r\n\r\nconst PageBuilder = loadable(() =>\r\n  import(/* webpackChunkName: \"PageBuilder\" */ '../PageBuilder/PageBuilder')\r\n);\r\nconst SectionBuilder = loadable(\r\n  () => import(/* webpackChunkName: \"SectionBuilder\" */ '../PageBuilder/PageBuilder'),\r\n  {\r\n    resolveComponent: components => components.SectionBuilder,\r\n  }\r\n);\r\n\r\nimport FallbackPage, { fallbackSections } from './FallbackPage';\r\nimport { ASSET_NAME } from './TermsOfServicePage.duck';\r\n\r\n// This \"content-only\" component can be used in modals etc.\r\nconst TermsOfServiceContent = props => {\r\n  const { inProgress, error, data } = props;\r\n\r\n  if (inProgress) {\r\n    return null;\r\n  }\r\n\r\n  // We don't want to add h1 heading twice to the HTML (SEO issue).\r\n  // Modal's header is mapped as h2\r\n  const hasContent = data => typeof data?.content === 'string';\r\n  const exposeContentAsChildren = data => {\r\n    return hasContent(data) ? { children: data.content } : {};\r\n  };\r\n  const CustomHeading1 = props => <H1 as=\"h2\" {...props} />;\r\n\r\n  const hasData = error === null && data;\r\n  const sectionsData = hasData ? data : fallbackSections;\r\n\r\n  return (\r\n    <SectionBuilder\r\n      {...sectionsData}\r\n      options={{\r\n        fieldComponents: {\r\n          heading1: { component: CustomHeading1, pickValidProps: exposeContentAsChildren },\r\n        },\r\n        isInsideContainer: true,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\n// Presentational component for TermsOfServicePage\r\nconst TermsOfServicePageComponent = props => {\r\n  const { pageAssetsData, inProgress, error } = props;\r\n\r\n  return (\r\n    <PageBuilder\r\n      pageAssetsData={pageAssetsData?.[camelize(ASSET_NAME)]?.data}\r\n      inProgress={inProgress}\r\n      error={error}\r\n      fallbackPage={<FallbackPage />}\r\n    />\r\n  );\r\n};\r\n\r\nTermsOfServicePageComponent.propTypes = {\r\n  pageAssetsData: object,\r\n  inProgress: bool,\r\n  error: propTypes.error,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { pageAssetsData, inProgress, error } = state.hostedAssets || {};\r\n  return { pageAssetsData, inProgress, error };\r\n};\r\n\r\n// Note: it is important that the withRouter HOC is **outside** the\r\n// connect HOC, otherwise React Router won't rerender any Route\r\n// components since connect implements a shouldComponentUpdate\r\n// lifecycle hook.\r\n//\r\n// See: https://github.com/ReactTraining/react-router/issues/4671\r\nconst TermsOfServicePage = compose(connect(mapStateToProps))(TermsOfServicePageComponent);\r\n\r\nconst TOS_ASSET_NAME = ASSET_NAME;\r\nexport { TOS_ASSET_NAME, TermsOfServicePageComponent, TermsOfServiceContent };\r\n\r\nexport default TermsOfServicePage;\r\n","// Convert kebab-case to camelCase: my-page-asset > myPageAsset\r\nexport const camelize = s => s.replace(/-(.)/g, l => l[1].toUpperCase());\r\n"],"names":["ConfirmSignupFormComponent","props","React","FinalForm","Object","assign","mutators","arrayMutators","render","formRenderProps","rootClassName","className","formId","handleSubmit","inProgress","invalid","intl","termsAndConditions","authInfo","idp","emailRequired","validators","formatMessage","id","emailValid","classes","classNames","css","submitInProgress","submitDisabled","email","firstName","lastName","Form","onSubmit","FieldTextInput","type","concat","name","autoComplete","label","placeholder","initialValue","validate","PrimaryButton","disabled","FormattedMessage","values","defaultProps","ConfirmSignupForm","compose","injectIntl","displayName","onResendVerificationEmail","resendErrorMessage","sendVerificationEmailInProgress","resendEmailLink","InlineTextButton","modalHelperLink","onClick","fixEmailLink","NamedLink","content","verifyClose","closeText","IconClose","closeIcon","IconEmailSent","modalIcon","Heading","as","modalTitle","modalMessage","bottomWrapper","modalHelperText","FacebookLogo","width","height","xmlns","d","fill","fillRule","GoogleLogo","SocialLoginButtonsMaybe","routeConfiguration","useRouteConfiguration","isLogin","showFacebookLogin","showGoogleLogin","from","getDefaultRoutes","baseUrl","apiBaseUrl","fromParam","defaultReturn","pathByRouteName","defaultReturnParam","defaultConfirm","defaultConfirmParam","idpButtons","socialButtonsOr","socialButtonsOrText","socialButtonWrapper","SocialLoginButton","authWithFacebook","defaultRoutes","window","location","href","buttonIcon","authWithGoogle","AuthenticationForms","submitLogin","loginError","signupError","authInProgress","submitSignup","fromState","state","tabs","text","tab","selected","linkProps","to","loginErrorMessage","error","signupErrorMessage","isSignupEmailTakenError","errorMessage","message","loginOrSignupError","LinkTabNavHorizontal","LoginForm","loginForm","SignupForm","signupForm","fname","lname","rest","params","trim","ConfirmIdProviderInfoForm","confirmError","submitSingupWithIdp","idpId","replace","str","toUpperCase","confirmErrorMessage","signupWithIdpTitle","confirmInfoText","form","idpToken","newEmail","newFirstName","newLastName","authParams","protectedData","isEmpty","AuthenticationOrConfirmInfoForm","AuthenticationPageComponent","_location$state","_tosAssetsData$cameli","_tosAssetsData$cameli2","tosModalOpen","setTosModalOpen","useState","privacyModalOpen","setPrivacyModalOpen","setAuthInfo","Cookies","JSON","parse","authError","setAuthError","config","useConfiguration","useEffect","scrollTo","currentUser","isAuthenticated","scrollingDisabled","sendVerificationEmailError","onManageDisableScrolling","tosAssetsData","tosFetchInProgress","tosFetchError","locationFrom","authinfoFrom","user","ensureCurrentUser","currentUserLoaded","showEmailVerification","attributes","emailVerified","Redirect","NamedRedirect","resendErrorTranslationId","isTooManyEmailVerificationRequestsError","marketplaceName","schemaTitle","schemaDescription","topbarClasses","hideOnMobile","Page","title","schema","description","LayoutSingleColumn","mainColumnClassName","layoutWrapperMain","topbar","TopbarContainer","footer","FooterContainer","ResponsiveBackgroundImageContainer","root","childrenWrapperClassName","contentContainer","image","branding","brandImage","sizes","useOverlay","EmailVerificationInfo","profile","TermsAndConditions","onOpenTermsOfService","onOpenPrivacyPolicy","Modal","isOpen","onClose","usePortal","termsWrapper","TermsOfServiceContent","data","camelize","TOS_ASSET_NAME","privacyWrapper","PrivacyPolicyContent","PRIVACY_POLICY_ASSET_NAME","showSocialLoginsForTests","privacyAssetsData","privacyFetchInProgress","privacyFetchError","withRouter","connect","auth","pageAssetsData","hostedAssets","authenticationInProgress","isScrollingDisabled","dispatch","_ref","password","login","signup","signupWithIdp","sendVerificationEmail","componentId","disableScrolling","manageDisableScrolling","LoginFormComponent","fieldRenderProps","emailLabel","emailPlaceholder","emailRequiredMessage","emailInvalidMessage","passwordLabel","passwordPlaceholder","passwordRequiredMessage","passwordRequired","passwordRecoveryLink","string","bool","PropTypes","SignupFormComponent","passwordMinLengthMessage","minLength","passwordMaxLengthMessage","maxLength","passwordMinLength","passwordMaxLength","passwordValidators","handleClick","callback","e","preventDefault","handleKeyUp","keyCode","termsLink","role","tabIndex","onKeyUp","privacyLink","FieldCheckboxGroup","optionLabelClassName","options","key","requiredFieldArrayCheckbox","tagRef","otherProps","Tag","ref","defaultPropsHeading","H1","rootClass","H2","H3","H4","H5","H6","PageBuilder","loadable","resolved","chunkName","isReady","resolve","__webpack_modules__","importAsync","requireAsync","then","requireSync","__webpack_require__","fallbackPrivacyPolicy","fallbackSections","sections","sectionType","sectionId","appearance","fieldType","backgroundColor","blocks","blockType","blockId","meta","pageTitle","pageDescription","FallbackPage","SectionBuilder","resolveComponent","components","sectionsData","fieldComponents","heading1","component","pickValidProps","hasContent","children","isInsideContainer","PrivacyPolicyPageComponent","_pageAssetsData$camel","ASSET_NAME","fallbackPage","mapStateToProps","PrivacyPolicyPage","fallbackTerms","TermsOfServicePageComponent","TermsOfServicePage","s","l"],"sourceRoot":""}